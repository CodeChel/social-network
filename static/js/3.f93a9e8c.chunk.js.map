{"version":3,"sources":["components/Messages-container/Messages/Messages.module.css","components/Messages-container/Messages/DialogsList/DialogWithUser.module.css","components/Messages-container/Messages/MessageItem/MessageItem.module.css","components/Messages-container/Messages/DialogsList/DialogWithUser.jsx","components/Messages-container/Messages/MessageItem/MessageItem.jsx","components/common/HOCScrollBar/HOCScrollbarCusctom.jsx","components/Messages-container/Messages/AddMessageFormWithConnect.jsx","components/Messages-container/Messages/EmpyDialogSession.jsx","components/Messages-container/Messages/DialogSession.jsx","components/Messages-container/Messages/Messages.jsx","components/Messages-container/MessagesContainer.jsx"],"names":["module","exports","messages","dialog","dialogItems","dialogHead","dialogBody","messageOut","messagesFill","formContainer","messagesMobile","avatar","avatarContainer","name","buttonForm","emptyMessages","selectDialog","iconMessage","dialogSearch","searchInput","emojiPicker","buttomEmoji","emojyPicker","newChat","emptyChatText","arrowBack","items","message","selectedDialog","timeLastMessage","yourMessage","messageRight","messageContainer","time","timeRight","timeLeft","DialogWithUser","props","useEffect","setLastMessageTime","formatTimeToLastMessage","Date","date","_useState","useState","_useState2","Object","slicedToArray","lastMessageTime","react_default","a","createElement","react_router_dom","to","concat","id","onClick","isSearchMode","outSearch","ref","dialogRef","className","styles","currentDialogId","src","alt","isYoursMessage","lastMessage","length","slice","MessageItem","right","ScrollbarHOC","React","forwardRef","_ref","children","objectWithoutProperties","isScrolling","setIsScrolling","_useState3","_useState4","isMouseOver","setIsMouseOver","isShow","onScrollStart","useCallback","onScrollStop","onMouseEnter","onMouseLeave","trackProps","useMemo","renderer","_ref2","elementRef","style","restProps","assign","objectSpread","opacity","transition","rsc_esm","wrapperProps","_ref3","trackXProps","trackYProps","scrollDetectionThreshold","AddMessageFormRedux","reduxForm","form","onSubmitSuccess","result","dispatch","reset","onKeyDown","e","keyCode","shiftKey","target","userId","preventDefault","handleSubmit","onSubmit","createField","required","voidValue","dirty","type","EmojiPicker","formName","fieldName","Form","addMessageForm","AddMessageFormWithConnect","connect","state","EmptyDialogMessages","DialogSessionWithHistory","currentDialog","messageItems","map","item","index","Messages_MessageItem_MessageItem","timeFormat","key","scrollBar","useRef","document","querySelector","focus","current","scrollToBottom","HOCScrollbarCusctom","removeTrackYWhenNotUsed","width","height","historyChatHeight","Messages_AddMessageFormWithConnect","data","sendMessage","DialogSessionWithOutHistory","getUserForMessages","setUserForMessages","isFetching","Preloader","userForMessage","photo","setNewDialog","EmpyDialogSession","DialogSession","DialogSession_DialogSessionWithHistory","DialogSession_DialogSessionWithOutHistory","ResponsiveLayout","breakpoint","renderDesktop","renderMobile","_useState5","window","innerWidth","_useState6","setWidth","handleResize","addEventListener","removeEventListener","Messages_MessagesDesktop","Messages_MessagesMobile","MessagesMobile","searchWord","dialogItemsSearch","handleSearch","react_router","exact","path","render","Messages_DialogSession","valueMessage","placeholder","value","onChange","dialogsList","MessagesDesktop","Messages","dialogItemsData","setSearch","dialogsFromSearch","setSearchWord","setSearchMode","outSearhCheck","match","params","findIndex","i","DialogsList_DialogWithUser","word","currentTarget","trim","MessagerContainer","compose","withAuthRedirect"],"mappings":"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","file":"static/js/3.f93a9e8c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__2Czpm\",\"dialog\":\"Messages_dialog__tfj-k\",\"dialogItems\":\"Messages_dialogItems__2OoFm\",\"dialogHead\":\"Messages_dialogHead__BDJuz\",\"dialogBody\":\"Messages_dialogBody__Pv6vX\",\"messageOut\":\"Messages_messageOut__1ecbx\",\"messagesFill\":\"Messages_messagesFill__2JJHa\",\"formContainer\":\"Messages_formContainer__PFn6z\",\"messagesMobile\":\"Messages_messagesMobile__1u_Qb\",\"avatar\":\"Messages_avatar__FiFmh\",\"avatarContainer\":\"Messages_avatarContainer__1PCd-\",\"name\":\"Messages_name__1VKCA\",\"buttonForm\":\"Messages_buttonForm__3NwVr\",\"emptyMessages\":\"Messages_emptyMessages__12fxk\",\"selectDialog\":\"Messages_selectDialog__1geCX\",\"iconMessage\":\"Messages_iconMessage__3b62w\",\"dialogSearch\":\"Messages_dialogSearch__1DKPy\",\"searchInput\":\"Messages_searchInput__2JgjW\",\"emojiPicker\":\"Messages_emojiPicker__65cWX\",\"buttomEmoji\":\"Messages_buttomEmoji__gcgVt\",\"emojyPicker\":\"Messages_emojyPicker__3pYFV\",\"newChat\":\"Messages_newChat__2BM_U\",\"emptyChatText\":\"Messages_emptyChatText__2WzFB\",\"arrowBack\":\"Messages_arrowBack__14Ze4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"DialogWithUser_items__2hRxI\",\"name\":\"DialogWithUser_name__2SpA4\",\"message\":\"DialogWithUser_message__2BINV\",\"selectedDialog\":\"DialogWithUser_selectedDialog__adA2o\",\"avatar\":\"DialogWithUser_avatar__3n_ux\",\"timeLastMessage\":\"DialogWithUser_timeLastMessage__1lmR_\",\"yourMessage\":\"DialogWithUser_yourMessage__27Rr9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessageItem_message__3fTmO\",\"messageRight\":\"MessageItem_messageRight__1aGY_\",\"messageContainer\":\"MessageItem_messageContainer__DmkNm\",\"time\":\"MessageItem_time__pQF6M\",\"timeRight\":\"MessageItem_timeRight__1aq_t\",\"timeLeft\":\"MessageItem_timeLeft__22qsT\"};","import React, { useState, useEffect } from 'react'\r\nimport styles from './DialogWithUser.module.css'\r\nimport { formatTimeToLastMessage } from '../../../../utils/timeFormat'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst DialogWithUser = (props) => {\r\n\r\n    useEffect(() => {\r\n        setLastMessageTime(formatTimeToLastMessage(new Date(props.date)))\r\n    }, [props.date])\r\n\r\n    const [lastMessageTime, setLastMessageTime] = useState(null);\r\n\r\n  \r\n    return <NavLink  to={`/messages/${props.id}`}>\r\n        <div onClick={() => {\r\n        props.isSearchMode && props.outSearch()\r\n    }} ref={props.dialogRef}\r\n        className={styles.items + ' ' + ( props.currentDialogId === props.id ? styles.selectedDialog : '')}>\r\n        <div>\r\n            <img className={styles.avatar} src={props.avatar} alt=\"avatar\" />\r\n        </div>\r\n        <div>\r\n            <div className={styles.name}>\r\n                {props.name}\r\n            </div>\r\n            <span className={styles.message}>{props.isYoursMessage ? <span className={styles.yourMessage}>You: </span> : ''}\r\n                {(props.lastMessage.length > 50 ? props.lastMessage.slice(0, 50) + '...' : props.lastMessage)}</span>\r\n\r\n        </div>\r\n        <span className={styles.timeLastMessage}>{lastMessageTime}</span>\r\n    </div>\r\n    </NavLink> \r\n}\r\n\r\nexport default DialogWithUser;","import React from 'react';\r\nimport styles  from './MessageItem.module.css'\r\n\r\n\r\n\r\n\r\nconst MessageItem = (props) =>{\r\n    return (props.right \r\n        ? <div className={styles.messageContainer}>\r\n            <div className={styles.time + ' ' + styles.timeRight}>{props.time}</div>\r\n            <div className={styles.message+ ' ' + styles.messageRight}>{props.message}</div>\r\n         </div>\r\n        : <div className={styles.messageContainer}> \r\n            <div className={styles.message}>{props.message}</div>\r\n            <div className={styles.time + ' ' + styles.timeLeft}>{props.time}</div>\r\n         </div> \r\n    )\r\n\r\n}\r\n\r\n   \r\nexport default MessageItem;","import React, { useCallback, useMemo, useState } from \"react\";\r\nimport ReactScrollbarsCustom from \"react-scrollbars-custom\";\r\n\r\nconst  ScrollbarHOC = React.forwardRef(({ children, ...props}, ref) => {\r\n  const [isScrolling, setIsScrolling] = useState(false);\r\n  const [isMouseOver, setIsMouseOver] = useState(false);\r\n  const isShow = isScrolling || isMouseOver;\r\n\r\n  const onScrollStart = useCallback(() => {\r\n    setIsScrolling(true);\r\n  }, []);\r\n  const onScrollStop = useCallback(() => {\r\n    setIsScrolling(false);\r\n  }, []);\r\n  const onMouseEnter = useCallback(() => {\r\n    setIsMouseOver(true);\r\n  }, []);\r\n  const onMouseLeave = useCallback(() => {\r\n    setIsMouseOver(false);\r\n  }, []);\r\n\r\n  const trackProps = useMemo(() => ({\r\n    renderer: ({ elementRef, style, ...restProps }) => (\r\n      <span\r\n        {...restProps}\r\n        ref={elementRef}\r\n        style={{ ...style, opacity: isShow ? 1 : 0, transition: \"opacity 0.4s ease-in-out\", }}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={onMouseLeave}\r\n      />\r\n    )\r\n  }), [isShow, onMouseEnter, onMouseLeave]);\r\n\r\n  return (\r\n    <ReactScrollbarsCustom\r\n      {...props}\r\n      wrapperProps={{\r\n        renderer: ({ elementRef, style, ...restProps }) => (\r\n          <div {...restProps} ref={elementRef} style={{ ...style, right: 0 }} />\r\n        ),\r\n      }}\r\n      trackXProps={trackProps}\r\n      trackYProps={trackProps}\r\n      onScrollStart={onScrollStart}\r\n      onScrollStop={onScrollStop}\r\n      scrollDetectionThreshold={500} // ms\r\n      ref={ref}\r\n    >\r\n      {children}\r\n    </ReactScrollbarsCustom>\r\n  );\r\n\r\n})\r\nexport default ScrollbarHOC;","\r\nimport React from 'react'\r\nimport { reduxForm, reset } from 'redux-form'\r\nimport { createField } from '../../common/FormControls/FormControls'\r\nimport { required, voidValue } from '../../../utils/validators/validator'\r\nimport EmojiPicker from '../../common/EmojiPicker/EmojiPicker'\r\nimport { connect } from 'react-redux'\r\nimport styles from './Messages.module.css'\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    const onKeyHandler = (e) => {\r\n        if (e.keyCode === 13 && e.shiftKey === false) {\r\n            if (e.target.name === `message${props.userId}`) {\r\n                e.preventDefault()\r\n                props.handleSubmit()\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    return <form onKeyDown={onKeyHandler} onSubmit={props.handleSubmit}>\r\n        {createField(`write message to ${props.name}`, `message${props.userId}`, [required, voidValue], 'textarea', null, null )}\r\n\r\n        {props.dirty && <button className={styles.buttonForm} type=\"submit\"></button>}\r\n        <EmojiPicker formName='addMessageForm' fieldName={`message${props.userId}`} Form={props.addMessageForm} styles={styles} dispatch={props.dispatch} />\r\n\r\n\r\n\r\n    </form>\r\n}\r\nconst afterSumbit = (result, dispatch) => {\r\n    dispatch(reset('addMessageForm'))\r\n}\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: 'addMessageForm',\r\n    onSubmitSuccess: afterSumbit\r\n})(AddMessageForm)\r\nconst mapStateToPropse = (state) => ({\r\n    addMessageForm: state.form.addMessageForm\r\n})\r\n\r\n const AddMessageFormWithConnect = connect(mapStateToPropse)(AddMessageFormRedux)\r\n\r\n export default AddMessageFormWithConnect","import React from 'react'\r\nimport styles from './Messages.module.css'\r\n\r\n\r\nconst EmptyDialogMessages = () => {\r\n    return <div className={styles.emptyMessages}>\r\n        <div className={styles.iconMessage}></div>\r\n        <div className={styles.selectDialog}>\r\n            Please select a dialog\r\n            </div>\r\n    </div>\r\n}\r\nexport default EmptyDialogMessages;","import React, { useEffect, useRef, useState} from 'react'\r\n\r\nimport MessageItem from './MessageItem/MessageItem'\r\nimport styles from './Messages.module.css'\r\n\r\nimport ScrollbarHOC from '../../common/HOCScrollBar/HOCScrollbarCusctom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport avatar from '../../../assets/img/ava.jpg'\r\n\r\n\r\n\r\n\r\nimport AddMessageFormWithConnect from './AddMessageFormWithConnect'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport EmptyDialogMessages from './EmpyDialogSession';\r\n\r\n\r\nconst DialogSession = ({currentDialog, ...props}) => {\r\n    return currentDialog\r\n    ? <DialogSessionWithHistory currentDialog={currentDialog}  {...props}/>\r\n    : <DialogSessionWithOutHistory {...props}/>\r\n    \r\n    \r\n}\r\n\r\n\r\n\r\nconst DialogSessionWithHistory = ({currentDialog, ...props}) =>{\r\n    \r\n    const messageItems = currentDialog.messages.map((item, index) => <MessageItem time={item.timeFormat} key={index} right={item.right} message={item.message} id={item.id} />)\r\n\r\n    const scrollBar = useRef()\r\n    \r\n    useEffect(() => {   \r\n        !props.isSearchMode && document.querySelector(`textarea[name=message${props.userId}]`).focus()\r\n    })\r\n\r\n    useEffect(() => {\r\n        scrollBar.current.scrollToBottom()\r\n    }, [messageItems])\r\n\r\n    return <div className={styles.dialog}>\r\n        <div className={styles.dialogHead}>\r\n            <div className={styles.avatarContainer}>\r\n                <NavLink to={`/profile/${props.userId}`}>\r\n                    <img className={styles.avatar} src={currentDialog.avatar} alt=\"avatar\" />\r\n                </NavLink>\r\n            </div>\r\n            <span className={styles.name}>\r\n                <NavLink to={`/profile/${props.userId}`}>\r\n                    {currentDialog.name}\r\n                </NavLink>\r\n            </span>\r\n            <NavLink className={styles.arrowBack} to={`/messages/`}/>          \r\n        </div>\r\n        <ScrollbarHOC children={<div className={styles.messagesFill}>{messageItems}</div>}  ref={scrollBar} removeTrackYWhenNotUsed={true} style={{ width: \"100%\", height: props.historyChatHeight}} />\r\n\r\n        <div className={styles.formContainer}>\r\n            <AddMessageFormWithConnect userId={props.userId} name={currentDialog.name} onSubmit={(data) => { props.sendMessage(data[`message${props.userId}`], props.userId) }} />\r\n        </div>\r\n    </div>\r\n    \r\n}\r\nconst DialogSessionWithOutHistory = ({getUserForMessages, setUserForMessages, ...props}) => {\r\n    useEffect(()=>{\r\n        getUserForMessages(props.userId)\r\n        return ()=>{\r\n            setUserForMessages(null)\r\n        }\r\n    },[props.userId,getUserForMessages, setUserForMessages ])\r\n     \r\n    return props.isFetching ?\r\n           <Preloader />\r\n           : !props.userForMessage \r\n                ? <EmptyDialogMessages />\r\n                : <div className={styles.dialog}>\r\n                    <div className={styles.dialogHead}>\r\n                        <div className={styles.avatarContainer}>\r\n                            <NavLink to={`/profile/${props.userId}`}>\r\n                                <img className={styles.avatar} src={props.userForMessage.photo || avatar}  alt=\"avatar\" />\r\n                            </NavLink>\r\n                        </div>\r\n                        <span className={styles.name}>\r\n                            <NavLink to={`/profile/${props.userId}`}>\r\n                                {props.userForMessage.name}\r\n                            </NavLink>\r\n                        </span>\r\n                        <NavLink className={styles.arrowBack} to={`/messages/`}/>\r\n                    </div>\r\n                    <div className={styles.newChat}><div className={styles.emptyChatText}>\r\n                        Yet no messages with {props.userForMessage.name}\r\n                    </div> </div>\r\n\r\n                    <div className={styles.formContainer}>\r\n                        <AddMessageFormWithConnect userId={props.userId} name={props.userForMessage.name} onSubmit={(data) => { props.setNewDialog(data[`message${props.userId}`], props.userId,\r\n                        props.userForMessage.photo, props.userForMessage.name) }} />\r\n                    </div>\r\n                </div>\r\n}\r\n\r\n\r\nexport default DialogSession;","import React, { useState, useRef, useEffect } from 'react'\r\nimport styles from './Messages.module.css'\r\nimport DialogWithUser from './DialogsList/DialogWithUser'\r\nimport DialogSession from './DialogSession'\r\nimport ScrollbarHOC from '../../common/HOCScrollBar/HOCScrollbarCusctom'\r\nimport { Switch } from 'react-router'\r\nimport { Route } from 'react-router-dom'\r\nimport EmptyDialogMessages from './EmpyDialogSession'\r\n\r\n\r\n\r\n\r\n\r\nconst Messages = ({ dialogItemsData, setSearch, dialogsFromSearch, ...props }) => {\r\n\r\n    const [searchWord, setSearchWord] = useState('');\r\n    const [isSearchMode, setSearchMode] = useState(false);\r\n    const breakpoint = 790;\r\n\r\n    useEffect(() => {\r\n        const outSearhCheck = (e) => {\r\n            if (e.target !== searchInput.current && e.target !== dialogRef.current) {\r\n                outSearch()\r\n            }\r\n\r\n        }\r\n        if (isSearchMode) {\r\n            document.addEventListener('click', outSearhCheck)\r\n        }\r\n        else {\r\n            document.removeEventListener('click', outSearhCheck)\r\n        }\r\n        return () => {\r\n            document.removeEventListener('click', outSearhCheck)\r\n        }\r\n    }, [isSearchMode])\r\n\r\n    const searchInput = useRef();\r\n    const dialogRef = useRef();\r\n\r\n    const handleSearch = (e) => {\r\n        const word = e.currentTarget.value;\r\n        setSearchWord(word);\r\n        if (word && word.trim() !== '') {\r\n            setSearch(word)\r\n            setSearchMode(true)\r\n        }\r\n    }\r\n    const outSearch = () => {\r\n        setSearchMode(false)\r\n        setSearchWord('')\r\n    }\r\n\r\n    const currentDialogId = +props.match.params.userId ? +props.match.params.userId : 0;\r\n    const currentDialog = currentDialogId && dialogItemsData[dialogItemsData.findIndex((i) => { return i.userId === currentDialogId })];\r\n\r\n    const dialogItems = dialogItemsData.map((item, index) => <DialogWithUser avatar={item.avatar} currentDialogId={currentDialogId}\r\n        date={item.messages[item.messages.length - 1].date} isYoursMessage={item.messages[item.messages.length - 1].right}\r\n        lastMessage={item.messages[item.messages.length - 1].message} key={index + 1} name={item.name} id={item.userId} />)\r\n\r\n    const dialogItemsSearch = isSearchMode && dialogsFromSearch.map((item, index) => <DialogWithUser dialogRef={dialogRef} isSearchMode={isSearchMode}\r\n        avatar={item.avatar} outSearch={outSearch} lastMessage={item.messages[item.messages.length - 1].message}\r\n        date={item.messages[item.messages.length - 1].date} isYoursMessage={item.messages[item.messages.length - 1].right}\r\n        key={index + 1} name={item.name} id={item.userId} currentDialogId={currentDialogId} />)\r\n\r\n\r\n\r\n    return ResponsiveLayout(breakpoint, renderDesktop, renderMobile, { currentDialogId, currentDialog, dialogItemsSearch, dialogItems, handleSearch, isSearchMode, searchInput, searchWord, ...props })\r\n}\r\n\r\n\r\nconst ResponsiveLayout = (breakpoint, renderDesktop, renderMobile, props ) => {\r\n    const [width, setWidth] = useState(window.innerWidth)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setWidth(window.innerWidth)\r\n        }\r\n        window.addEventListener('resize', handleResize)\r\n        return () => { window.removeEventListener('resize', handleResize) }\r\n    }, [])\r\n    return (width > breakpoint ? renderDesktop(props) : renderMobile(props))\r\n}\r\n\r\nconst renderDesktop = (props) => {\r\n    return <MessagesDesktop {...props} />\r\n}\r\nconst renderMobile = (props) => {\r\n    return <MessagesMobile {...props} />\r\n}\r\n\r\nconst MessagesMobile = ({ currentDialogId, isSearchMode, currentDialog, searchInput, searchWord, dialogItemsSearch, dialogItems, handleSearch, ...props }) => {\r\n\r\n    return <div className={styles.messagesMobile} >\r\n\r\n        {!!currentDialogId &&\r\n            <Switch>\r\n                <Route exact path={`/messages/`} render={() => <EmptyDialogMessages />} />\r\n                <Route path={`/:userId`} render={() => <DialogSession historyChatHeight='65%' valueMessage={props.valueMessage} isSearchMode={isSearchMode} userId={currentDialogId}\r\n                    sendMessage={props.sendMessage} currentDialog={currentDialog} isFetching={props.isFetching} getUserForMessages={props.getUserForMessages}\r\n                    userForMessage={props.userForMessage} setNewDialog={props.setNewDialog} setUserForMessages={props.setUserForMessages} />} />\r\n\r\n            </Switch>\r\n\r\n        }\r\n\r\n        {!currentDialogId && <div className={styles.dialogItems}>\r\n            <div className={styles.dialogSearch}>\r\n                <input ref={searchInput} placeholder='Search' className={styles.searchInput} value={searchWord} onChange={e => handleSearch(e)} type=\"text\" name=\"\" id=\"\" />\r\n            </div>\r\n            <div className={styles.dialogsList}>\r\n                <ScrollbarHOC children={isSearchMode ? dialogItemsSearch : dialogItems} removeTrackYWhenNotUsed={true} style={{ width: \"100%\", height: \"88vh\" }} />\r\n            </div>\r\n        </div>}\r\n\r\n    </div>\r\n\r\n}\r\nconst MessagesDesktop = ({ currentDialogId, isSearchMode, currentDialog, searchInput, searchWord, dialogItemsSearch, dialogItems, handleSearch, ...props }) => {\r\n    return <div className={styles.messages} >\r\n\r\n        <Switch>\r\n            <Route exact path={`/messages/`} render={() => <EmptyDialogMessages />} />\r\n            <Route path={`/:userId`} render={() => <DialogSession historyChatHeight='75%' valueMessage={props.valueMessage} isSearchMode={isSearchMode} userId={currentDialogId}\r\n                sendMessage={props.sendMessage} currentDialog={currentDialog} isFetching={props.isFetching} getUserForMessages={props.getUserForMessages}\r\n                userForMessage={props.userForMessage} setNewDialog={props.setNewDialog} setUserForMessages={props.setUserForMessages} />} />\r\n\r\n        </Switch>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div className={styles.dialogItems}>\r\n            <div className={styles.dialogSearch}>\r\n                <input ref={searchInput} placeholder='Search' className={styles.searchInput} value={searchWord} onChange={e => handleSearch(e)} type=\"text\" name=\"\" id=\"\" />\r\n            </div>\r\n            <div className={styles.dialogsList}>\r\n                <ScrollbarHOC children={isSearchMode ? dialogItemsSearch : dialogItems} removeTrackYWhenNotUsed={true} style={{ width: \"100%\", height: \"85vh\" }} />\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default Messages;","\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect'\r\nimport {sendMessage,  setSearch, getUserForMessages,setUserForMessages, setNewDialog} from '../../redux/messages-reducer'\r\nimport Messages from './Messages/Messages.jsx'\r\nimport {connect} from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogItemsData: state.messages.dialogItemsData,\r\n        dialogsFromSearch: state.messages.dialogsFromSearch,\r\n        isFetching: state.messages.isFetching,\r\n        userForMessage: state.messages.userForMessage\r\n      \r\n     }\r\n}\r\n\r\n  const MessagerContainer = compose(\r\n    connect(mapStateToProps,{sendMessage,getUserForMessages,setUserForMessages, setSearch, setNewDialog}),\r\n    withAuthRedirect\r\n)(Messages)\r\n\r\n\r\nexport default MessagerContainer"],"sourceRoot":""}