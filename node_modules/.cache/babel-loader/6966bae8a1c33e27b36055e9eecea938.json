{"ast":null,"code":"import React from'react';import{reduxForm,Field}from'redux-form';import{logInThunk}from'../../redux/auth-reducer';import{connect}from'react-redux';import{Input,createField}from'../common/FormControls/FormControls';import{required}from'../../utils/validators/validator';import{Redirect}from'react-router';import styles from'../common/FormControls/FormControls.module.css';import loginPage from'./LoginPage.module.css';var LoginForm=function LoginForm(_ref){var captchaURL=_ref.captchaURL,error=_ref.error,handleSubmit=_ref.handleSubmit;return React.createElement(\"form\",{onSubmit:handleSubmit},createField('Login','login',[required],Input),createField('Password','password',[required],Input,{type:'password'}),React.createElement(\"div\",{className:loginPage.wrapperDown},React.createElement(\"label\",{className:loginPage.container},React.createElement(\"div\",{className:loginPage.checkboxText},\"remember me\"),React.createElement(Field,{component:\"input\",type:\"checkbox\",name:\"rememberMe\"}),React.createElement(\"span\",{className:loginPage.checkmark})),React.createElement(\"button\",{className:styles.buttonLogin,type:\"submit\"},\"Login\")),error&&React.createElement(\"div\",{className:styles.errorLogIn},error),captchaURL&&React.createElement(\"img\",{src:captchaURL,alt:\"capthca\"}),captchaURL&&createField('enter the cpathca-code','captcha',[required],Input));};var LoginReduxForm=reduxForm({form:'login'})(LoginForm);var Login=function Login(_ref2){var captchaURL=_ref2.captchaURL,logInThunk=_ref2.logInThunk,isAuth=_ref2.isAuth,authId=_ref2.authId;var onSubmit=function onSubmit(_ref3){var login=_ref3.login,password=_ref3.password,_ref3$rememberMe=_ref3.rememberMe,rememberMe=_ref3$rememberMe===void 0?false:_ref3$rememberMe,_ref3$captcha=_ref3.captcha,captcha=_ref3$captcha===void 0?null:_ref3$captcha;logInThunk({login:login,password:password,rememberMe:rememberMe,captcha:captcha});};if(isAuth){return React.createElement(Redirect,{to:'/profile/'+authId});}return React.createElement(\"div\",{className:loginPage.loginPage},React.createElement(\"div\",{className:loginPage.loginFormContainer},React.createElement(\"h1\",null,\"Login to SN \"),React.createElement(LoginReduxForm,{captchaURL:captchaURL,onSubmit:onSubmit})));};var mapDispatchToProps=function mapDispatchToProps(state){return{isAuth:state.auth.isAuth,authId:state.auth.id,captchaURL:state.auth.captchaURL};};export default connect(mapDispatchToProps,{logInThunk:logInThunk})(Login);","map":{"version":3,"sources":["C:/Users/WOW/Documents/GitHub/react/react-test/src/components/Login/Login.jsx"],"names":["React","reduxForm","Field","logInThunk","connect","Input","createField","required","Redirect","styles","loginPage","LoginForm","captchaURL","error","handleSubmit","type","wrapperDown","container","checkboxText","checkmark","buttonLogin","errorLogIn","LoginReduxForm","form","Login","isAuth","authId","onSubmit","login","password","rememberMe","captcha","loginFormContainer","mapDispatchToProps","state","auth","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { logInThunk } from '../../redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { Input, createField } from '../common/FormControls/FormControls';\r\nimport { required } from '../../utils/validators/validator';\r\nimport { Redirect } from 'react-router';\r\nimport styles from '../common/FormControls/FormControls.module.css'\r\nimport loginPage from './LoginPage.module.css'\r\n\r\nconst LoginForm = ({ captchaURL, error, handleSubmit }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Login', 'login', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, { type: 'password' })}\r\n            <div className={loginPage.wrapperDown}>\r\n                <label className={loginPage.container}>\r\n                    <div className={loginPage.checkboxText}>remember me</div>\r\n                    <Field component='input' type='checkbox' name='rememberMe' />\r\n                    <span className={loginPage.checkmark}></span>\r\n                </label>\r\n                <button className={styles.buttonLogin} type='submit'>Login</button></div>\r\n            {error && <div className={styles.errorLogIn}>{error}</div>}\r\n            {captchaURL && <img src={captchaURL} alt='capthca' />}\r\n            {captchaURL && createField('enter the cpathca-code', 'captcha', [required], Input)}\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = ({ captchaURL, logInThunk, isAuth, authId }) => {\r\n    const onSubmit = ({ login, password, rememberMe = false, captcha = null }) => {\r\n        logInThunk({ login, password, rememberMe, captcha });\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile/' + authId} />\r\n    }\r\n\r\n    return <div className={loginPage.loginPage}>\r\n        <div className={loginPage.loginFormContainer}>\r\n            <h1>Login to SN </h1>\r\n            <LoginReduxForm captchaURL={captchaURL} onSubmit={onSubmit} />\r\n        </div>\r\n    </div >\r\n}\r\nconst mapDispatchToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    authId: state.auth.id,\r\n    captchaURL: state.auth.captchaURL\r\n})\r\n\r\nexport default connect(mapDispatchToProps, { logInThunk })(Login);"]},"metadata":{},"sourceType":"module"}