{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Profile\\\\Posts\\\\Posts.jsx\";\nimport React, { useState } from 'react';\nimport styles from './posts.module.css';\nimport { reduxForm, Field, reset, change } from 'redux-form';\nimport { required, maxLengthCreator, voidValue } from '../../../utils/validators/validator';\nimport { Textarea } from '../../common/FormControls/FormControls';\nimport avatar from '../../../assets/img/ava.jpg';\nimport Preloader from '../../common/Preloader/Preloader';\nimport { NavLink } from 'react-router-dom';\nimport 'emoji-mart/css/emoji-mart.css';\nimport { Picker } from 'emoji-mart';\nimport EmojiPicker from './../../common/EmojiPicker/EmojiPicker';\nimport { connect } from 'react-redux';\nconst maxLength500 = maxLengthCreator(500);\n\nconst FormPost = props => {\n  debugger;\n  return React.createElement(\"form\", {\n    className: styles.formPost,\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Field, {\n    placeholder: \"Share your great thoughts here\",\n    component: Textarea,\n    name: \"postBody\",\n    validate: [required, maxLength500, voidValue],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(EmojiPicker, {\n    formName: \"formPost\",\n    fieldName: \"postBody\",\n    Form: props.FormPost,\n    styles: styles,\n    dispatch: props.dispatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: styles.button,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Post\"));\n};\n\nconst afterSumbit = (result, dispatch) => {\n  dispatch(reset('formPost'));\n};\n\nconst FormPostRedux = reduxForm({\n  form: 'formPost',\n  onSubmitSuccess: afterSumbit\n})(FormPost);\n\nconst Posts = props => {\n  const sortPost = e => {\n    e.target.value === 'New' ? props.sortByTime() : props.sortByLikes();\n  };\n\n  return props.profile ? React.createElement(\"div\", {\n    className: styles.postsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(AddPostFormWithConnect, {\n    onSubmit: props.sendPostThunk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), props.posts.length ? React.createElement(React.Fragment, null, \"Sort by \", React.createElement(\"select\", {\n    className: styles.selectSort,\n    onChange: sortPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"New\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Popular\"))) : null, props.posts.map(p => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.posts,\n    key: p.id,\n    className: styles.itemPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.headerPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/profile/\".concat(p.userId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    className: styles.avatar,\n    src: p.avatar || avatar,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.nameBlock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/profile/\".concat(p.userId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \" \", React.createElement(\"div\", {\n    className: p.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, p.name)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, p.timeFormat))), React.createElement(\"div\", {\n    className: styles.postBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, p.text), React.createElement(\"div\", {\n    className: styles.menu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: styles.hidenMenu,\n    onClick: () => {\n      props.deletePost(p.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.menuItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Delete post\"))), React.createElement(\"div\", {\n    className: styles.postFooter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.likesBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.likesWrapper,\n    onClick: () => {\n      p.liked ? props.likesToggle(false, p.id) : props.likesToggle(true, p.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.likes + ' ' + (p.liked && styles.liked),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: styles.likesCount + ' ' + (p.liked && styles.likesCountLiked),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, p.likesCount > 0 && p.likesCount), \"  \"))))))) : React.createElement(Preloader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  });\n};\n\nconst mapStateToPropse = state => ({\n  addMessageForm: state.form.formPost\n});\n\nconst AddPostFormWithConnect = connect(mapStateToPropse)(FormPostRedux);\nexport default Posts;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Profile\\Posts\\Posts.jsx"],"names":["React","useState","styles","reduxForm","Field","reset","change","required","maxLengthCreator","voidValue","Textarea","avatar","Preloader","NavLink","Picker","EmojiPicker","connect","maxLength500","FormPost","props","formPost","handleSubmit","dispatch","button","afterSumbit","result","FormPostRedux","form","onSubmitSuccess","Posts","sortPost","e","target","value","sortByTime","sortByLikes","profile","postsContainer","sendPostThunk","posts","length","selectSort","map","p","id","itemPost","headerPost","userId","nameBlock","name","timeFormat","postBody","text","menu","hidenMenu","deletePost","menuItem","postFooter","likesBody","likesWrapper","liked","likesToggle","likes","likesCount","likesCountLiked","mapStateToPropse","state","addMessageForm","AddPostFormWithConnect"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport styles from './posts.module.css'\r\nimport { reduxForm, Field, reset, change } from 'redux-form';\r\nimport { required, maxLengthCreator, voidValue } from '../../../utils/validators/validator';\r\nimport { Textarea } from '../../common/FormControls/FormControls';\r\nimport avatar from '../../../assets/img/ava.jpg';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport { NavLink } from 'react-router-dom'\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { Picker } from 'emoji-mart'\r\nimport EmojiPicker from './../../common/EmojiPicker/EmojiPicker'\r\nimport { connect } from 'react-redux'\r\n\r\nconst maxLength500 = maxLengthCreator(500);\r\n\r\nconst FormPost = (props) => {\r\n    \r\n    debugger\r\n  \r\n\r\n    return <form className={styles.formPost} onSubmit={props.handleSubmit}>\r\n        <Field placeholder=\"Share your great thoughts here\" component={Textarea} name='postBody' validate={[required, maxLength500, voidValue]} />\r\n        <EmojiPicker formName='formPost' fieldName='postBody' Form={props.FormPost} styles={styles} dispatch={props.dispatch} />\r\n        <button className={styles.button} type='submit' >Post</button>\r\n    </form>\r\n}\r\nconst afterSumbit = (result, dispatch) => {\r\n    dispatch(reset('formPost')) \r\n}\r\nconst FormPostRedux = reduxForm({ \r\n    form: 'formPost',\r\n    onSubmitSuccess: afterSumbit\r\n})(FormPost);\r\n\r\nconst Posts = (props) => {\r\n    \r\n    \r\n    const sortPost = (e) => {\r\n        e.target.value === 'New' ? props.sortByTime() : props.sortByLikes()\r\n    }\r\n\r\n    return props.profile\r\n        ? <div className={styles.postsContainer}>\r\n            <AddPostFormWithConnect  onSubmit={props.sendPostThunk} />\r\n            {props.posts.length ?\r\n                <>Sort by <select className={styles.selectSort} onChange={sortPost}>\r\n                    <option >New</option>\r\n                    <option >Popular</option>\r\n                </select></> : null}\r\n            {props.posts.map((p) => <div>\r\n                <div className={styles.posts} key={p.id} className={styles.itemPost}>\r\n                    <div className={styles.headerPost}>\r\n                      <NavLink to={`/profile/${p.userId}`}> <img className={styles.avatar} src={p.avatar || avatar} alt=\"\" /></NavLink> \r\n\r\n                        <div className={styles.nameBlock}>\r\n                        <NavLink to={`/profile/${p.userId}`}> <div className={p.name}>{p.name}</div></NavLink> \r\n                            <div >{p.timeFormat}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.postBody}>\r\n                        {p.text}\r\n                    </div>\r\n                    <div className={styles.menu}><span className={styles.hidenMenu} onClick={() => { props.deletePost(p.id) }} ><div className={styles.menuItem}>Delete post</div></span></div>\r\n                    <div className={styles.postFooter}>\r\n                        \r\n                        <div className={styles.likesBody}>\r\n                            <div className={styles.likesWrapper} onClick={() => { p.liked ? props.likesToggle(false, p.id) : props.likesToggle(true, p.id) }}>\r\n                                <div  className={styles.likes + ' ' + (p.liked && styles.liked)}></div>\r\n                                <span className={styles.likesCount + ' ' + (p.liked&& styles.likesCountLiked)}>{p.likesCount > 0 && p.likesCount}</span>  </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n\r\n            </div>)}\r\n        </div>\r\n        : <Preloader />\r\n}\r\nconst mapStateToPropse = (state) => ({\r\n    addMessageForm: state.form.formPost\r\n})\r\nconst AddPostFormWithConnect = connect(mapStateToPropse)(FormPostRedux)\r\nexport default Posts;"]},"metadata":{},"sourceType":"module"}