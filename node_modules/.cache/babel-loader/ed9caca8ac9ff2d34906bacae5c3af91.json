{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { usersAPI } from '../API/api';\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLOWING_PROGRESS = 'TOGGLE_IS_FOLOWING_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCout: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n};\n\nconst friendsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return _objectSpread({}, state, {\n        users: state.users.map(u => action.id === u.id ? _objectSpread({}, u, {\n          followed: true\n        }) : u)\n      });\n\n    case UNFOLLOW:\n      return _objectSpread({}, state, {\n        users: state.users.map(u => action.id === u.id ? _objectSpread({}, u, {\n          followed: false\n        }) : u)\n      });\n\n    case SET_USERS:\n      return _objectSpread({}, state, {\n        users: action.users\n      });\n\n    case SET_CURRENT_PAGE:\n      return _objectSpread({}, state, {\n        currentPage: action.currentPage\n      });\n\n    case SET_TOTAL_COUNT:\n      return _objectSpread({}, state, {\n        totalUsersCout: action.count\n      });\n\n    case TOGGLE_IS_FETCHING:\n      return _objectSpread({}, state, {\n        isFetching: action.isFetching\n      });\n\n    case TOGGLE_IS_FOLOWING_PROGRESS:\n      return _objectSpread({}, state, {\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(userId => userId !== action.userId)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const follow = id => ({\n  type: FOLLOW,\n  id\n});\nexport const unfollow = id => ({\n  type: UNFOLLOW,\n  id\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = count => ({\n  type: SET_TOTAL_COUNT,\n  count\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLOWING_PROGRESS,\n  isFetching,\n  userId\n});\nexport const getUsersThunk = (currentPage, pageSize) => dispatch => {\n  dispatch(toggleIsFetching(true));\n  usersAPI.getUsers(currentPage, pageSize).then(data => {\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setTotalUsersCount(data.totalCount));\n  });\n};\nexport const changeCurrentPageThunk = (pageNumber, pageSize) => dispatch => {\n  debugger;\n  dispatch(setCurrentPage(pageNumber));\n  dispatch(toggleIsFetching(true));\n  usersAPI.getUsers(pageNumber, pageSize).then(data => {\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.items));\n  });\n};\nexport const followThunk = id => dispatch => {\n  dispatch(toggleFollowingProgress(true, id));\n  usersAPI.deleteFollow(id).then(data => {\n    if (data.resultCode === 0) {\n      dispatch(unfollow(id));\n      toggleFollowingProgress(false, id);\n    }\n  });\n};\nexport default friendsReducer;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\redux\\friends-reducer.js"],"names":["usersAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLOWING_PROGRESS","initialState","users","pageSize","totalUsersCout","currentPage","isFetching","followingInProgress","friendsReducer","state","action","type","map","u","id","followed","count","userId","filter","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","getUsersThunk","dispatch","getUsers","then","data","items","totalCount","changeCurrentPageThunk","pageNumber","followThunk","deleteFollow","resultCode"],"mappings":"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","sourcesContent":["import {usersAPI} from '../API/api'\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLOWING_PROGRESS = 'TOGGLE_IS_FOLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCout: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => action.id === u.id ? { ...u, followed: true } : u)\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => action.id === u.id ? { ...u, followed: false } : u)\r\n            }\r\n        case SET_USERS:\r\n            return { ...state, users: action.users }\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n        case SET_TOTAL_COUNT:\r\n            return {...state, totalUsersCout: action.count}\r\n        case TOGGLE_IS_FETCHING:\r\n                return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                ? [...state.followingInProgress, action.userId] \r\n                : state.followingInProgress.filter(userId => userId !== action.userId)\r\n                \r\n            }        \r\n        default: return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const follow = (id) => ({ type: FOLLOW, id });\r\nexport const unfollow = (id) => ({ type: UNFOLLOW, id });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setTotalUsersCount = (count) => ({ type: SET_TOTAL_COUNT, count });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching,userId) => ({type: TOGGLE_IS_FOLOWING_PROGRESS,isFetching, userId})\r\n\r\nexport const getUsersThunk = (currentPage, pageSize) => (dispatch) => {\r\n\r\n    dispatch(toggleIsFetching(true));\r\n    usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    })\r\n}\r\nexport const changeCurrentPageThunk = (pageNumber,pageSize) => (dispatch) =>{\r\n    debugger;\r\n    dispatch(setCurrentPage(pageNumber));\r\n    dispatch(toggleIsFetching(true));\r\n    \r\n    usersAPI.getUsers(pageNumber, pageSize).then(data => {\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        \r\n    })\r\n}\r\nexport const followThunk = (id) => (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true,id));\r\n    usersAPI.deleteFollow(id).then(data => {\r\n        if (data.resultCode === 0) {\r\n           dispatch(unfollow(id));\r\n            toggleFollowingProgress(false,id);\r\n        }\r\n    })\r\n}\r\n\r\nexport default friendsReducer;"]},"metadata":{},"sourceType":"module"}