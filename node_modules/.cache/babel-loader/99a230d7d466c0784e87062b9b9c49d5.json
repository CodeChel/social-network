{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Messages-container\\\\Messages\\\\Messages.jsx\";\nimport React, { useEffect, useRef } from 'react';\nimport styles from './Messages.module.css';\nimport DialogItem from '../../DialogItem/DialogItem';\n\nconst Messages = props => {\n  let dialogItems = props.Messages.dialogItemsData.map((item, index) => React.createElement(DialogItem, {\n    key: index,\n    name: item.name,\n    id: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    className: styles.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.dialogItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.dialogSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.dialogsList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, dialogItems)), props.currentDialogId === 0 ? 'chose dialog please' : React.createElement(\"div\", {\n    className: styles.dialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.dialogHead,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(ScrollbarHOC, {\n    children: React.createElement(\"div\", {\n      className: styles.messagesFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, messageItems),\n    autoHide: true,\n    ref: scrollBar,\n    removeTrackYWhenNotUsed: true,\n    style: {\n      width: \"100%\",\n      height: \"75%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.formContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(AddMessageFormRedux, {\n    onSubmit: props.sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))));\n};\n\nconst addMessageForm = props => {\n  const onKeyHandler = e => {\n    if (e.keyCode == 13 && e.shiftKey == false) {\n      if (e.target.name == 'message') {\n        e.preventDefault();\n        props.handleSubmit();\n      }\n    }\n  };\n\n  return React.createElement(\"form\", {\n    onKeyDown: onKeyHandler,\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, createField(null, 'message', [required], 'textarea', null, null));\n};\n\nconst AddMessageFormRedux = reduxForm({\n  form: 'addMessageForm'\n})(addMessageForm);\n\nconst Dialog = props => {\n  let messageItems = props.Messages.messagesData.map((item, index) => React.createElement(MessageItem, {\n    key: index,\n    right: item.right,\n    message: item.message,\n    id: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n  const scrollBar = useRef();\n  useEffect(() => {\n    scrollBar.current.scrollToBottom();\n  }, [messageItems]);\n  return React.createElement(\"div\", {\n    className: styles.dialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.dialogHead,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(ScrollbarHOC, {\n    children: React.createElement(\"div\", {\n      className: styles.messagesFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, messageItems),\n    autoHide: true,\n    ref: scrollBar,\n    removeTrackYWhenNotUsed: true,\n    style: {\n      width: \"100%\",\n      height: \"75%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.formContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(AddMessageFormRedux, {\n    onSubmit: props.sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })));\n};\n\nexport default Messages;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Messages-container\\Messages\\Messages.jsx"],"names":["React","useEffect","useRef","styles","DialogItem","Messages","props","dialogItems","dialogItemsData","map","item","index","name","id","messages","dialogSearch","dialogsList","currentDialogId","dialog","dialogHead","messagesFill","messageItems","scrollBar","width","height","formContainer","sendMessage","addMessageForm","onKeyHandler","e","keyCode","shiftKey","target","preventDefault","handleSubmit","createField","required","AddMessageFormRedux","reduxForm","form","Dialog","messagesData","right","message","current","scrollToBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\r\n\r\nimport styles from './Messages.module.css'\r\nimport DialogItem from '../../DialogItem/DialogItem'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Messages = (props) => {\r\n\r\n    let dialogItems = props.Messages.dialogItemsData.map((item, index) => <DialogItem key={index} name={item.name} id={item.id} />)\r\n\r\n\r\n    return <div className={styles.messages}>\r\n        <div className={styles.dialogItems}>\r\n            <div className={styles.dialogSearch}></div>\r\n            <div className={styles.dialogsList}>\r\n                {dialogItems}\r\n\r\n            </div>\r\n        </div>\r\n        {props.currentDialogId === 0\r\n            ? 'chose dialog please'\r\n            : <div className={styles.dialog}>\r\n                <div className={styles.dialogHead}></div>\r\n                <ScrollbarHOC children={<div className={styles.messagesFill}>{messageItems}</div>} autoHide ref={scrollBar} removeTrackYWhenNotUsed={true} style={{ width: \"100%\", height: \"75%\" }} />\r\n\r\n                <div className={styles.formContainer}>\r\n                    <AddMessageFormRedux onSubmit={props.sendMessage} />\r\n                </div>\r\n            </div>}\r\n\r\n    </div>\r\n}\r\n\r\nconst addMessageForm = (props) => {\r\n    const onKeyHandler = (e) => {\r\n        if (e.keyCode == 13 && e.shiftKey == false) {\r\n            if (e.target.name == 'message') {\r\n                e.preventDefault();\r\n                props.handleSubmit();\r\n            }\r\n        }\r\n    }\r\n    return <form onKeyDown={onKeyHandler} onSubmit={props.handleSubmit}>\r\n        {createField(null, 'message', [required], 'textarea', null, null)}\r\n\r\n        {/* <button className={styles.buttonForm} type=\"submit\">Send</button> */}\r\n    </form>\r\n}\r\nconst AddMessageFormRedux = reduxForm({ form: 'addMessageForm' })(addMessageForm);\r\n\r\nconst Dialog = (props) => {\r\n    let messageItems = props.Messages.messagesData.map((item, index) => <MessageItem key={index} right={item.right} message={item.message} id={item.id} />)\r\n\r\n    const scrollBar = useRef()\r\n\r\n    useEffect(() => {\r\n        scrollBar.current.scrollToBottom();\r\n    }, [messageItems])\r\n    return <div className={styles.dialog}>\r\n        <div className={styles.dialogHead}></div>\r\n        <ScrollbarHOC children={<div className={styles.messagesFill}>{messageItems}</div>} autoHide ref={scrollBar} removeTrackYWhenNotUsed={true} style={{ width: \"100%\", height: \"75%\" }} />\r\n\r\n        <div className={styles.formContainer}>\r\n            <AddMessageFormRedux onSubmit={props.sendMessage} />\r\n        </div>\r\n    </div>\r\n}\r\nexport default Messages;"]},"metadata":{},"sourceType":"module"}