{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React,{useCallback,useMemo,useState}from\"react\";import ReactScrollbarsCustom from\"react-scrollbars-custom\";var ScrollbarHOC=React.forwardRef(function(_ref,ref){var children=_ref.children,props=_objectWithoutProperties(_ref,[\"children\"]);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isScrolling=_useState2[0],setIsScrolling=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isMouseOver=_useState4[0],setIsMouseOver=_useState4[1];var isShow=isScrolling||isMouseOver;var onScrollStart=useCallback(function(){setIsScrolling(true);},[]);var onScrollStop=useCallback(function(){setIsScrolling(false);},[]);var onMouseEnter=useCallback(function(){setIsMouseOver(true);},[]);var onMouseLeave=useCallback(function(){setIsMouseOver(false);},[]);var trackProps=useMemo(function(){return{renderer:function renderer(_ref2){var elementRef=_ref2.elementRef,style=_ref2.style,restProps=_objectWithoutProperties(_ref2,[\"elementRef\",\"style\"]);return React.createElement(\"span\",Object.assign({},restProps,{ref:elementRef,style:_objectSpread({},style,{opacity:isShow?1:0,transition:\"opacity 0.4s ease-in-out\"}),onMouseEnter:onMouseEnter,onMouseLeave:onMouseLeave}));}};},[isShow,onMouseEnter,onMouseLeave]);return React.createElement(ReactScrollbarsCustom,Object.assign({},props,{wrapperProps:{renderer:function renderer(_ref3){var elementRef=_ref3.elementRef,style=_ref3.style,restProps=_objectWithoutProperties(_ref3,[\"elementRef\",\"style\"]);return React.createElement(\"div\",Object.assign({},restProps,{ref:elementRef,style:_objectSpread({},style,{right:0})}));}},trackXProps:trackProps,trackYProps:trackProps,onScrollStart:onScrollStart,onScrollStop:onScrollStop,scrollDetectionThreshold:500// ms\n,ref:ref}),children);});export default ScrollbarHOC;","map":{"version":3,"sources":["C:/Users/WOW/Documents/GitHub/react/react-test/src/components/common/HOCScrollBar/HOCScrollbarCusctom.jsx"],"names":["React","useCallback","useMemo","useState","ReactScrollbarsCustom","ScrollbarHOC","forwardRef","ref","children","props","isScrolling","setIsScrolling","isMouseOver","setIsMouseOver","isShow","onScrollStart","onScrollStop","onMouseEnter","onMouseLeave","trackProps","renderer","elementRef","style","restProps","opacity","transition","right"],"mappings":"miBAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,OAA7B,CAAsCC,QAAtC,KAAsD,OAAtD,CACA,MAAOC,CAAAA,qBAAP,KAAkC,yBAAlC,CAEA,GAAOC,CAAAA,YAAY,CAAGL,KAAK,CAACM,UAAN,CAAiB,cAAwBC,GAAxB,CAAgC,IAA7BC,CAAAA,QAA6B,MAA7BA,QAA6B,CAAhBC,KAAgB,2DAC/BN,QAAQ,CAAC,KAAD,CADuB,wCAC9DO,WAD8D,eACjDC,cADiD,8BAE/BR,QAAQ,CAAC,KAAD,CAFuB,yCAE9DS,WAF8D,eAEjDC,cAFiD,eAGrE,GAAMC,CAAAA,MAAM,CAAGJ,WAAW,EAAIE,WAA9B,CAEA,GAAMG,CAAAA,aAAa,CAAGd,WAAW,CAAC,UAAM,CACtCU,cAAc,CAAC,IAAD,CAAd,CACD,CAFgC,CAE9B,EAF8B,CAAjC,CAGA,GAAMK,CAAAA,YAAY,CAAGf,WAAW,CAAC,UAAM,CACrCU,cAAc,CAAC,KAAD,CAAd,CACD,CAF+B,CAE7B,EAF6B,CAAhC,CAGA,GAAMM,CAAAA,YAAY,CAAGhB,WAAW,CAAC,UAAM,CACrCY,cAAc,CAAC,IAAD,CAAd,CACD,CAF+B,CAE7B,EAF6B,CAAhC,CAGA,GAAMK,CAAAA,YAAY,CAAGjB,WAAW,CAAC,UAAM,CACrCY,cAAc,CAAC,KAAD,CAAd,CACD,CAF+B,CAE7B,EAF6B,CAAhC,CAIA,GAAMM,CAAAA,UAAU,CAAGjB,OAAO,CAAC,iBAAO,CAChCkB,QAAQ,CAAE,4BAAGC,CAAAA,UAAH,OAAGA,UAAH,CAAeC,KAAf,OAAeA,KAAf,CAAyBC,SAAzB,8DACR,6CACMA,SADN,EAEE,GAAG,CAAEF,UAFP,CAGE,KAAK,kBAAOC,KAAP,EAAcE,OAAO,CAAEV,MAAM,CAAG,CAAH,CAAO,CAApC,CAAuCW,UAAU,CAAE,0BAAnD,EAHP,CAIE,YAAY,CAAER,YAJhB,CAKE,YAAY,CAAEC,YALhB,GADQ,EADsB,CAAP,EAAD,CAUtB,CAACJ,MAAD,CAASG,YAAT,CAAuBC,YAAvB,CAVsB,CAA1B,CAYA,MACE,qBAAC,qBAAD,kBACMT,KADN,EAEE,YAAY,CAAE,CACZW,QAAQ,CAAE,4BAAGC,CAAAA,UAAH,OAAGA,UAAH,CAAeC,KAAf,OAAeA,KAAf,CAAyBC,SAAzB,8DACR,4CAASA,SAAT,EAAoB,GAAG,CAAEF,UAAzB,CAAqC,KAAK,kBAAOC,KAAP,EAAcI,KAAK,CAAE,CAArB,EAA1C,GADQ,EADE,CAFhB,CAOE,WAAW,CAAEP,UAPf,CAQE,WAAW,CAAEA,UARf,CASE,aAAa,CAAEJ,aATjB,CAUE,YAAY,CAAEC,YAVhB,CAWE,wBAAwB,CAAE,GAAK;AAXjC,CAYE,GAAG,CAAET,GAZP,GAcGC,QAdH,CADF,CAmBD,CAjDqB,CAAtB,CAkDA,cAAeH,CAAAA,YAAf","sourcesContent":["import React, { useCallback, useMemo, useState } from \"react\";\r\nimport ReactScrollbarsCustom from \"react-scrollbars-custom\";\r\n\r\nconst  ScrollbarHOC = React.forwardRef(({ children, ...props}, ref) => {\r\n  const [isScrolling, setIsScrolling] = useState(false);\r\n  const [isMouseOver, setIsMouseOver] = useState(false);\r\n  const isShow = isScrolling || isMouseOver;\r\n\r\n  const onScrollStart = useCallback(() => {\r\n    setIsScrolling(true);\r\n  }, []);\r\n  const onScrollStop = useCallback(() => {\r\n    setIsScrolling(false);\r\n  }, []);\r\n  const onMouseEnter = useCallback(() => {\r\n    setIsMouseOver(true);\r\n  }, []);\r\n  const onMouseLeave = useCallback(() => {\r\n    setIsMouseOver(false);\r\n  }, []);\r\n\r\n  const trackProps = useMemo(() => ({\r\n    renderer: ({ elementRef, style, ...restProps }) => (\r\n      <span\r\n        {...restProps}\r\n        ref={elementRef}\r\n        style={{ ...style, opacity: isShow ? 1 : 0, transition: \"opacity 0.4s ease-in-out\", }}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={onMouseLeave}\r\n      />\r\n    )\r\n  }), [isShow, onMouseEnter, onMouseLeave]);\r\n\r\n  return (\r\n    <ReactScrollbarsCustom\r\n      {...props}\r\n      wrapperProps={{\r\n        renderer: ({ elementRef, style, ...restProps }) => (\r\n          <div {...restProps} ref={elementRef} style={{ ...style, right: 0 }} />\r\n        ),\r\n      }}\r\n      trackXProps={trackProps}\r\n      trackYProps={trackProps}\r\n      onScrollStart={onScrollStart}\r\n      onScrollStop={onScrollStop}\r\n      scrollDetectionThreshold={500} // ms\r\n      ref={ref}\r\n    >\r\n      {children}\r\n    </ReactScrollbarsCustom>\r\n  );\r\n\r\n})\r\nexport default ScrollbarHOC;"]},"metadata":{},"sourceType":"module"}