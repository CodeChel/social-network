{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Friends\\\\FriendsAPIComponent.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching } from '../../redux/friends-reducer';\nimport * as axios from 'axios';\nimport FriendsFunc from './Friends';\nimport Preloader from '../common/Preloader/Preloader';\n\nclass FirendsContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.toggleIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page=\".concat(pageNumber, \"&count=\").concat(this.props.pageSize), {\n        withCredentials: true\n      }).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    getUsers(this.props.currentPage, this.props.pageSize).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }) : null, React.createElement(FriendsFunc, {\n      totalUsersCout: this.props.totalUsersCout,\n      pageSize: this.props.pageSize,\n      onPageChanged: this.onPageChanged,\n      currentPage: this.props.currentPage,\n      users: this.props.users,\n      unfollow: this.props.unfollow,\n      follow: this.props.follow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.FriendsPage.users,\n    pageSize: state.FriendsPage.pageSize,\n    totalUsersCout: state.FriendsPage.totalUsersCout,\n    currentPage: state.FriendsPage.currentPage,\n    isFetching: state.FriendsPage.isFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching\n})(FirendsContainer);","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Friends\\FriendsAPIComponent.jsx"],"names":["React","connect","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","axios","FriendsFunc","Preloader","FirendsContainer","Component","onPageChanged","pageNumber","props","get","pageSize","withCredentials","then","response","data","items","componentDidMount","getUsers","currentPage","totalCount","render","isFetching","totalUsersCout","users","mapStateToProps","state","FriendsPage"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching } from '../../redux/friends-reducer';\r\nimport * as axios from 'axios';\r\nimport FriendsFunc from './Friends';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\n\r\n \r\n\r\n\r\nclass FirendsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n        getUsers(this.props.currentPage,this.props.pageSize).then(response => {\r\n            this.props.toggleIsFetching(false);\r\n            this.props.setUsers(response.data.items);\r\n            this.props.setTotalUsersCount(response.data.totalCount);\r\n        })\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.toggleIsFetching(true);\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`,\r\n            {withCredentials: true}\r\n        ).then(response => {\r\n            this.props.toggleIsFetching(false);\r\n            this.props.setUsers(response.data.items)\r\n        })\r\n    }\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n\r\n            <FriendsFunc totalUsersCout={this.props.totalUsersCout}\r\n                pageSize={this.props.pageSize}\r\n                onPageChanged={this.onPageChanged}\r\n                currentPage={this.props.currentPage}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.FriendsPage.users,\r\n        pageSize: state.FriendsPage.pageSize,\r\n        totalUsersCout: state.FriendsPage.totalUsersCout,\r\n        currentPage: state.FriendsPage.currentPage,\r\n        isFetching: state.FriendsPage.isFetching\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching\r\n})(FirendsContainer);"]},"metadata":{},"sourceType":"module"}