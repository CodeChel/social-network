{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\common\\\\PopUp\\\\PopUpMessage.jsx\";\nimport React, { useState } from 'react';\nimport avatar from '../../../assets/img/ava.jpg';\nimport styles from './popUpMessage.module.css';\nimport { NavLink } from 'react-router-dom';\nimport { reduxForm } from 'redux-form';\nimport { createField } from '../FormControls/FormControls';\nimport { required, voidValue } from '../../../utils/validators/validator';\nimport { Redirect } from 'react-router-dom';\nimport { messageFromPopUp } from '../../../redux/messages-reducer';\nimport { connect } from 'react-redux';\n\nconst PopUpMessage = ({\n  user,\n  closePopup,\n  messageFromPopUp\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        redirect = _useState2[0],\n        setRedirect = _useState2[1];\n\n  const id = user.id || user.userId;\n  const name = user.name || user.fullName;\n  return redirect ? React.createElement(Redirect, {\n    to: \"/messages/\".concat(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: styles.popup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.headerPopup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"New message\"), React.createElement(\"div\", {\n    className: styles.linkMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/messages/\".concat(id),\n    onClick: () => {\n      messageFromPopUp({\n        messagePopup: ''\n      }, user);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Open full chat with \", name)), React.createElement(\"div\", {\n    onClick: closePopup,\n    className: styles.closePopup,\n    role: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.popupBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.userHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"profile/\".concat(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: user.photos.small != null ? user.photos.small : avatar,\n    alt: \"\",\n    className: styles.popupAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: styles.usernameBlock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"profile/\".concat(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: styles.popupUserName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, name)), React.createElement(\"p\", {\n    className: styles.onlineStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Offline\")))), React.createElement(AddMessagePopupFormRedux, {\n    onSubmit: data => {\n      messageFromPopUp(data, user);\n      setRedirect(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n};\n\nconst addMessagePopup = props => {\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    className: styles.messageForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, createField(null, 'messagePopup', [required, voidValue], 'textarea', null, null, {\n    cols: 57.5,\n    rows: 8\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: styles.buttonForm,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Send\")));\n};\n\nconst AddMessagePopupFormRedux = reduxForm({\n  form: 'message-popup'\n})(addMessagePopup);\nexport default connect(null, {\n  messageFromPopUp\n})(PopUpMessage);","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\common\\PopUp\\PopUpMessage.jsx"],"names":["React","useState","avatar","styles","NavLink","reduxForm","createField","required","voidValue","Redirect","messageFromPopUp","connect","PopUpMessage","user","closePopup","redirect","setRedirect","id","userId","name","fullName","popup","headerPopup","linkMessage","messagePopup","popupBody","userHeader","photos","small","popupAvatar","usernameBlock","popupUserName","onlineStatus","data","addMessagePopup","props","handleSubmit","messageForm","cols","rows","buttonForm","AddMessagePopupFormRedux","form"],"mappings":"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","sourcesContent":["\r\nimport React, {useState} from 'react'\r\nimport avatar from '../../../assets/img/ava.jpg'\r\nimport styles from './popUpMessage.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { reduxForm} from 'redux-form'\r\nimport {  createField } from '../FormControls/FormControls'\r\nimport { required, voidValue} from '../../../utils/validators/validator'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {messageFromPopUp} from '../../../redux/messages-reducer'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst PopUpMessage = ({ user, closePopup, messageFromPopUp }) => {\r\n\r\n    const [redirect, setRedirect] = useState(false)\r\n    const id = user.id || user.userId\r\n    const name = user.name || user.fullName\r\n\r\n    return redirect \r\n    ? <Redirect to={`/messages/${id}`} />\r\n    :<div className={styles.popup}>\r\n        <div className={styles.headerPopup}>\r\n            <div>New message</div> \r\n            <div className={styles.linkMessage}>\r\n                <NavLink to={`/messages/${id}`} onClick={()=>{ messageFromPopUp({messagePopup: ''}, user)}}>Open full chat with {name}</NavLink>\r\n            </div>\r\n            <div onClick={closePopup} className={styles.closePopup} role='button'></div>\r\n        </div>\r\n        <div className={styles.popupBody}>\r\n            <div className={styles.userHeader}>\r\n                <div>\r\n                    <NavLink to={`profile/${id}`}>\r\n                        <img src={user.photos.small != null ? user.photos.small : avatar} alt=\"\" className={styles.popupAvatar} />\r\n                    </NavLink>\r\n                </div>\r\n                <div className={styles.usernameBlock}>\r\n                    <NavLink to={`profile/${id}`}>\r\n                        <p className={styles.popupUserName}>{name}</p>\r\n                    </NavLink>\r\n                    <p className={styles.onlineStatus}>Offline</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <AddMessagePopupFormRedux onSubmit={(data) => { \r\n            messageFromPopUp(data, user)\r\n            setRedirect(true)\r\n        }}/>\r\n    </div>\r\n}\r\nconst addMessagePopup = (props) => {\r\n    return <form onSubmit={props.handleSubmit} className={styles.messageForm}>\r\n        {createField(null, 'messagePopup', [required, voidValue], 'textarea', null, null,{cols: 57.5, rows: 8})}\r\n        <div>\r\n            <button className={styles.buttonForm} type='submit'>Send</button>\r\n        </div>\r\n    </form>\r\n}\r\nconst AddMessagePopupFormRedux = reduxForm({form: 'message-popup'})(addMessagePopup)\r\nexport default connect(null, {messageFromPopUp})(PopUpMessage)"]},"metadata":{},"sourceType":"module"}