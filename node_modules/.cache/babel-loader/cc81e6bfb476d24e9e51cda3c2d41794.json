{"ast":null,"code":"import React,{useEffect}from'react';import styles from'./Friends.module.css';import avatar from'../../assets/img/ava.jpg';import{NavLink}from'react-router-dom';var User=function User(_ref){var user=_ref.user,follow=_ref.follow,unfollow=_ref.unfollow,followingInProgress=_ref.followingInProgress,setMessageMode=_ref.setMessageMode;useEffect(function(){return function(){setMessageMode(false,user.id);};},[setMessageMode,user.id]);return React.createElement(\"div\",{className:styles.userContainer},React.createElement(\"div\",{className:styles.avatar},React.createElement(NavLink,{to:'/profile/'+user.id},React.createElement(\"img\",{src:user.photos.small!=null?user.photos.small:avatar,alt:\"\",className:styles.usersAvatar}))),React.createElement(\"div\",{className:styles.userMenu},React.createElement(\"div\",{className:styles.hideMenu},user.followed?React.createElement(\"button\",{onClick:function onClick(){return unfollow(user.id);},disabled:followingInProgress.some(function(id){return id===user.id;})},\"Unfollow\"):React.createElement(\"button\",{onClick:function onClick(){return follow(user.id);},disabled:followingInProgress.some(function(id){return id===user.id;})},\"Follow\"),React.createElement(\"button\",{onClick:function onClick(){setMessageMode(true,user.id);}},\"Send Message\"),React.createElement(\"button\",null,\"Show Friends\"))),React.createElement(\"div\",{className:styles.userInfo},React.createElement(\"span\",null,React.createElement(NavLink,{to:'/profile/'+user.id},\" \",React.createElement(\"div\",{className:styles.userName},user.name))),React.createElement(\"span\",{className:styles.userStatus},user.status?user.status.length>20?user.status.slice(0,20)+'...':user.status:'no status')));};export default User;","map":{"version":3,"sources":["C:/Users/WOW/Documents/GitHub/react/react-test/src/components/Friends/User.jsx"],"names":["React","useEffect","styles","avatar","NavLink","User","user","follow","unfollow","followingInProgress","setMessageMode","id","userContainer","photos","small","usersAvatar","userMenu","hideMenu","followed","some","userInfo","userName","name","userStatus","status","length","slice"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,OAASC,OAAT,KAAwB,kBAAxB,CAKA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAqE,IAAlEC,CAAAA,IAAkE,MAAlEA,IAAkE,CAA5DC,MAA4D,MAA5DA,MAA4D,CAApDC,QAAoD,MAApDA,QAAoD,CAA1CC,mBAA0C,MAA1CA,mBAA0C,CAArBC,cAAqB,MAArBA,cAAqB,CAC9ET,SAAS,CAAC,UAAM,CAEZ,MAAO,WAAM,CACTS,cAAc,CAAC,KAAD,CAAQJ,IAAI,CAACK,EAAb,CAAd,CACH,CAFD,CAGH,CALQ,CAKN,CAACD,cAAD,CAAgBJ,IAAI,CAACK,EAArB,CALM,CAAT,CAOA,MAAO,4BAAK,SAAS,CAAET,MAAM,CAACU,aAAvB,EAEC,2BAAK,SAAS,CAAEV,MAAM,CAACC,MAAvB,EACI,oBAAC,OAAD,EAAS,EAAE,CAAE,YAAcG,IAAI,CAACK,EAAhC,EACI,2BAAK,GAAG,CAAEL,IAAI,CAACO,MAAL,CAAYC,KAAZ,EAAqB,IAArB,CAA4BR,IAAI,CAACO,MAAL,CAAYC,KAAxC,CAAgDX,MAA1D,CAAkE,GAAG,CAAC,EAAtE,CAAyE,SAAS,CAAED,MAAM,CAACa,WAA3F,EADJ,CADJ,CAFD,CAOC,2BAAK,SAAS,CAAEb,MAAM,CAACc,QAAvB,EACI,2BAAK,SAAS,CAAEd,MAAM,CAACe,QAAvB,EACKX,IAAI,CAACY,QAAL,CACK,8BAAQ,OAAO,CAAE,yBAAMV,CAAAA,QAAQ,CAACF,IAAI,CAACK,EAAN,CAAd,EAAjB,CACE,QAAQ,CAAEF,mBAAmB,CAACU,IAApB,CAAyB,SAAAR,EAAE,QAAIA,CAAAA,EAAE,GAAKL,IAAI,CAACK,EAAhB,EAA3B,CADZ,aADL,CAGK,8BAAQ,OAAO,CAAE,yBAAMJ,CAAAA,MAAM,CAACD,IAAI,CAACK,EAAN,CAAZ,EAAjB,CACE,QAAQ,CAAEF,mBAAmB,CAACU,IAApB,CAAyB,SAAAR,EAAE,QAAIA,CAAAA,EAAE,GAAKL,IAAI,CAACK,EAAhB,EAA3B,CADZ,WAJV,CAOI,8BAAQ,OAAO,CAAE,kBAAM,CAAED,cAAc,CAAC,IAAD,CAAOJ,IAAI,CAACK,EAAZ,CAAd,CAA+B,CAAxD,iBAPJ,CAQI,iDARJ,CADJ,CAPD,CAoBH,2BAAK,SAAS,CAAET,MAAM,CAACkB,QAAvB,EACI,gCACI,oBAAC,OAAD,EAAS,EAAE,CAAE,YAAcd,IAAI,CAACK,EAAhC,MAAqC,2BAAK,SAAS,CAAET,MAAM,CAACmB,QAAvB,EAAkCf,IAAI,CAACgB,IAAvC,CAArC,CADJ,CADJ,CAII,4BAAM,SAAS,CAAEpB,MAAM,CAACqB,UAAxB,EAEQjB,IAAI,CAACkB,MAAL,CACMlB,IAAI,CAACkB,MAAL,CAAYC,MAAZ,CAAqB,EAArB,CAA0BnB,IAAI,CAACkB,MAAL,CAAYE,KAAZ,CAAkB,CAAlB,CAAqB,EAArB,EAA0B,KAApD,CAA4DpB,IAAI,CAACkB,MADvE,CAEM,WAJd,CAJJ,CApBG,CAAP,CAoCH,CA5CD,CA8CA,cAAenB,CAAAA,IAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport styles from './Friends.module.css'\r\nimport avatar from '../../assets/img/ava.jpg'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nconst User = ({ user, follow, unfollow, followingInProgress, setMessageMode }) => {\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            setMessageMode(false, user.id)\r\n        };\r\n    }, [setMessageMode,user.id]);\r\n\r\n    return <div className={styles.userContainer}>\r\n        \r\n            <div className={styles.avatar}>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : avatar} alt=\"\" className={styles.usersAvatar} />\r\n                </NavLink>\r\n            </div>\r\n            <div className={styles.userMenu}>\r\n                <div className={styles.hideMenu}>\r\n                    {user.followed\r\n                        ? <button onClick={() => unfollow(user.id)}\r\n                            disabled={followingInProgress.some(id => id === user.id)}>Unfollow</button>\r\n                        : <button onClick={() => follow(user.id)}\r\n                            disabled={followingInProgress.some(id => id === user.id)}>Follow</button>\r\n                    }\r\n                    <button onClick={() => { setMessageMode(true, user.id) }}>Send Message</button>\r\n                    <button>Show Friends</button>\r\n                </div>\r\n            </div>\r\n        \r\n        <div className={styles.userInfo}>\r\n            <span>\r\n                <NavLink to={'/profile/' + user.id}> <div className={styles.userName}>{user.name}</div></NavLink>\r\n            </span>\r\n            <span className={styles.userStatus}>\r\n                {\r\n                    user.status\r\n                        ? user.status.length > 20 ? user.status.slice(0, 20) +'...' : user.status\r\n                        : 'no status'\r\n                }\r\n            </span>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n}\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}