{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Profile\\\\ProfileInfo\\\\ProfileDescription.jsx\";\nimport React from 'react';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport { reduxForm, Field } from 'redux-form';\nimport { createField, Input, Textarea } from '../../common/FormControls/FormControls';\nimport { required } from '../../../utils/validators/validator';\nimport { Prompt } from 'react-router';\nimport SideBar from '../../SideBar/SideBar';\nimport styles from './profileDescription.module.css';\nimport AboutProfile from './AboutProfile';\n\nconst ProfileDescrition = (_ref) => {\n  let setEditProfile = _ref.setEditProfile,\n      isEditMode = _ref.isEditMode,\n      profile = _ref.profile,\n      isMyPage = _ref.isMyPage,\n      props = _objectWithoutProperties(_ref, [\"setEditProfile\", \"isEditMode\", \"profile\", \"isMyPage\"]);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: styles.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, profile.fullName), React.createElement(ProfileStatusWithHooks, {\n    isMyPage: isMyPage,\n    updateStatus: props.updateStatus,\n    status: props.status,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(AboutProfile, {\n    setEditProfile: setEditProfile,\n    isEditMode: isEditMode,\n    profile: profile,\n    isMyPage: isMyPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), profile.aboutMe && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Description: \", profile.aboutMe, \" \"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Looking for a job: \", profile.lookingForAJob ? 'yes' : 'no'), profile.lookingForAJobDescription && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Description: \", profile.lookingForAJobDescription, \" \"), !isEditMode && Object.keys(profile.contacts).map(keys => {\n    if (profile.contacts[keys]) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"\".concat(keys, \" : \").concat(profile.contacts[keys]));\n    }\n  }), isMyPage && !isEditMode && React.createElement(\"button\", {\n    onClick: () => {\n      setEditProfile(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Edit\"), isMyPage && isEditMode && React.createElement(ProfileEditorReduxForm, {\n    isEditMode: isEditMode,\n    initialValues: profile,\n    onSubmit: onSubmit,\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nexport default ProfileDescrition;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Profile\\ProfileInfo\\ProfileDescription.jsx"],"names":["React","ProfileStatusWithHooks","reduxForm","Field","createField","Input","Textarea","required","Prompt","SideBar","styles","AboutProfile","ProfileDescrition","setEditProfile","isEditMode","profile","isMyPage","props","name","fullName","updateStatus","status","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","map","onSubmit"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,SAASC,WAAT,EAAsBC,KAAtB,EAA6BC,QAA7B,QAA6C,wCAA7C;AACA,SAASC,QAAT,QAAyB,qCAAzB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AACA,MAAMC,iBAAiB,GAAG,UAAiE;AAAA,MAA9DC,cAA8D,QAA9DA,cAA8D;AAAA,MAA9CC,UAA8C,QAA9CA,UAA8C;AAAA,MAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AAIvF,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEH;AAAI,IAAA,SAAS,EAAEP,MAAM,CAACQ,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BH,OAAO,CAACI,QAArC,CAFG,EAGH,oBAAC,sBAAD;AAAwB,IAAA,QAAQ,EAAEH,QAAlC;AAA4C,IAAA,YAAY,EAAEC,KAAK,CAACG,YAAhE;AAA8E,IAAA,MAAM,EAAEH,KAAK,CAACI,MAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHG,EAIH,oBAAC,YAAD;AAAc,IAAA,cAAc,EAAER,cAA9B;AAA8C,IAAA,UAAU,EAAEC,UAA1D;AAAsE,IAAA,OAAO,EAAEC,OAA/E;AAAwF,IAAA,QAAQ,EAAEC,QAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJG,EAKFD,OAAO,CAACO,OAAR,IAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmBP,OAAO,CAACO,OAA3B,MALjB,EAMH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAyBP,OAAO,CAACQ,cAAR,GAAyB,KAAzB,GAAiC,IAA1D,CANG,EAOFR,OAAO,CAACS,yBAAR,IAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmBT,OAAO,CAACS,yBAA3B,MAPnC,EAQF,CAACV,UAAD,IAAeW,MAAM,CAACC,IAAP,CAAYX,OAAO,CAACY,QAApB,EAA8BC,GAA9B,CAAmCF,IAAD,IAAU;AACxD,QAAIX,OAAO,CAACY,QAAR,CAAiBD,IAAjB,CAAJ,EAA4B;AACxB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAASA,IAAT,gBAAmBX,OAAO,CAACY,QAAR,CAAiBD,IAAjB,CAAnB,EAAP;AACH;AACJ,GAJe,CARb,EAaFV,QAAQ,IAAI,CAACF,UAAb,IAA2B;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAED,MAAAA,cAAc,CAAC,IAAD,CAAd;AAAsB,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbzB,EAcFG,QAAQ,IAAIF,UAAZ,IAA0B,oBAAC,sBAAD;AAAwB,IAAA,UAAU,EAAEA,UAApC;AAAgD,IAAA,aAAa,EAAEC,OAA/D;AAAwE,IAAA,QAAQ,EAAEc,QAAlF;AAA4F,IAAA,OAAO,EAAEd,OAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdxB,CAAP;AAgBH,CApBD;;AAwBA,eAAeH,iBAAf","sourcesContent":["import React from 'react';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { createField, Input, Textarea } from '../../common/FormControls/FormControls';\r\nimport { required } from '../../../utils/validators/validator';\r\nimport { Prompt } from 'react-router'\r\nimport SideBar from '../../SideBar/SideBar';\r\nimport styles from './profileDescription.module.css'\r\nimport AboutProfile from './AboutProfile'\r\nconst ProfileDescrition = ({ setEditProfile, isEditMode, profile, isMyPage, ...props }) => {\r\n\r\n\r\n    \r\n    return <div >\r\n\r\n        <h2 className={styles.name}>{profile.fullName}</h2>\r\n        <ProfileStatusWithHooks isMyPage={isMyPage} updateStatus={props.updateStatus} status={props.status} />\r\n        <AboutProfile setEditProfile={setEditProfile} isEditMode={isEditMode} profile={profile} isMyPage={isMyPage}/>\r\n        {profile.aboutMe && <div>Description: {profile.aboutMe} </div>}\r\n        <div>Looking for a job: {profile.lookingForAJob ? 'yes' : 'no'}</div>\r\n        {profile.lookingForAJobDescription && <div>Description: {profile.lookingForAJobDescription} </div>}\r\n        {!isEditMode && Object.keys(profile.contacts).map((keys) => {\r\n            if (profile.contacts[keys]) {\r\n                return <div>{`${keys} : ${profile.contacts[keys]}`}</div>\r\n            }\r\n        })}\r\n        {isMyPage && !isEditMode && <button onClick={() => { setEditProfile(true) }}>Edit</button>}\r\n        {isMyPage && isEditMode && <ProfileEditorReduxForm isEditMode={isEditMode} initialValues={profile} onSubmit={onSubmit} profile={profile} />}\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default ProfileDescrition;"]},"metadata":{},"sourceType":"module"}