{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Messages-container\\\\Messages\\\\DialogSession.jsx\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport MessageItem from '../MessageItem/MessageItem';\nimport ScrollbarHOC from '../../common/HOCScrollBar/HOCScrollbarCusctom';\nimport { NavLink } from 'react-router-dom';\nimport AddMessageFormWithConnect from './AddMessageFormWithConnect';\n\nconst DialogSession = props => {\n  let messageItems = props.messages.map((item, index) => React.createElement(MessageItem, {\n    time: item.timeFormat,\n    key: index,\n    right: item.right,\n    message: item.message,\n    id: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n  const scrollBar = useRef();\n  useEffect(() => {\n    !props.isSearchMode && document.querySelector(\"textarea[name=message\".concat(props.userId, \"]\")).focus();\n  });\n  useEffect(() => {\n    scrollBar.current.scrollToBottom();\n  }, [messageItems]);\n  return React.createElement(\"div\", {\n    className: styles.dialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.dialogHead,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.avatarContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/profile/\".concat(props.userId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: styles.avatar,\n    src: props.avatar,\n    alt: \"avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))), React.createElement(\"span\", {\n    className: styles.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/profile/\".concat(props.userId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, props.name))), React.createElement(ScrollbarHOC, {\n    children: React.createElement(\"div\", {\n      className: styles.messagesFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, messageItems),\n    autoHide: true,\n    ref: scrollBar,\n    removeTrackYWhenNotUsed: true,\n    style: {\n      width: \"100%\",\n      height: \"75%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.formContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(AddMessageFormWithConnect, {\n    userId: props.userId,\n    name: props.name,\n    onSubmit: data => {\n      props.sendMessage(data[\"message\".concat(props.userId)], props.userId);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })));\n};\n\nexport default DialogSession;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Messages-container\\Messages\\DialogSession.jsx"],"names":["React","useEffect","useRef","useState","MessageItem","ScrollbarHOC","NavLink","AddMessageFormWithConnect","DialogSession","props","messageItems","messages","map","item","index","timeFormat","right","message","id","scrollBar","isSearchMode","document","querySelector","userId","focus","current","scrollToBottom","styles","dialog","dialogHead","avatarContainer","avatar","name","messagesFill","width","height","formContainer","data","sendMessage"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\n\r\nimport MessageItem from '../MessageItem/MessageItem'\r\n\r\n\r\nimport ScrollbarHOC from '../../common/HOCScrollBar/HOCScrollbarCusctom';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nimport AddMessageFormWithConnect from './AddMessageFormWithConnect'\r\n\r\n\r\nconst DialogSession = (props) => {\r\n    let messageItems = props.messages.map((item, index) => <MessageItem time={item.timeFormat} key={index} right={item.right} message={item.message} id={item.id} />)\r\n\r\n    const scrollBar = useRef()\r\n\r\n    useEffect(() => {\r\n        !props.isSearchMode && document.querySelector(`textarea[name=message${props.userId}]`).focus()\r\n    })\r\n\r\n    useEffect(() => {\r\n        scrollBar.current.scrollToBottom();\r\n    }, [messageItems])\r\n    return <div className={styles.dialog}>\r\n        <div className={styles.dialogHead}>\r\n            <div className={styles.avatarContainer}>\r\n                <NavLink to={`/profile/${props.userId}`}>\r\n                    <img className={styles.avatar} src={props.avatar} alt=\"avatar\" />\r\n                </NavLink>\r\n            </div>\r\n            <span className={styles.name}>\r\n                <NavLink to={`/profile/${props.userId}`}>\r\n                    {props.name}\r\n                </NavLink>\r\n            </span>\r\n        </div>\r\n        <ScrollbarHOC children={<div className={styles.messagesFill}>{messageItems}</div>} autoHide ref={scrollBar} removeTrackYWhenNotUsed={true} style={{ width: \"100%\", height: \"75%\" }} />\r\n\r\n        <div className={styles.formContainer}>\r\n            <AddMessageFormWithConnect userId={props.userId} name={props.name} onSubmit={(data) => { props.sendMessage(data[`message${props.userId}`], props.userId) }} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default DialogSession;"]},"metadata":{},"sourceType":"module"}