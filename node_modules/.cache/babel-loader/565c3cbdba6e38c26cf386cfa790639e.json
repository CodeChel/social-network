{"ast":null,"code":"import * as axios from 'axios';\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\n    \"API-KEY\": \"d9c4ba29-f4a9-4d2d-8ba9-f90ead9fae9c\"\n  }\n});\nexport const usersAPI = {\n  getUsers(currentPage = 1, pageSize = 10) {\n    return instance.get(\"users?page=\".concat(currentPage, \"&count=\").concat(pageSize)).then(response => response.data);\n  },\n\n  postFollow(id) {\n    return instance.post(\"follow/\".concat(id), {}).then(response => response.data);\n  },\n\n  deleteFollow(id) {\n    return instance.delete(\"follow/\".concat(id), {}).then(response => response.data);\n  }\n\n};\nexport const authAPI = {\n  getAuth() {\n    return instance.get('auth/me').then(response => response.data);\n  },\n\n  logIn(dataForm) {\n    return instance.post('auth/login', {\n      email: dataForm.login,\n      password: dataForm.password,\n      rememberMe: dataForm.rememberMe\n    }).then(response => response.data);\n  },\n\n  logOut() {\n    return instance.delete('auth/login').then(response => response.data);\n  }\n\n};\nexport const profileAPI = {\n  getProfile(id) {\n    return instance.get(\"profile/\".concat(id)).then(response => response.data);\n  },\n\n  getUserStatus(id) {\n    return instance.get(\"profile/status/\".concat(id)).then(response => response.data);\n  },\n\n  updateUserStatus(status) {\n    return instance.put('profile/status', {\n      status: status\n    }).then(response => response.data);\n  }\n\n};","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\API\\api.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","postFollow","id","post","deleteFollow","delete","authAPI","getAuth","logIn","dataForm","email","login","password","rememberMe","logOut","profileAPI","getProfile","getUserStatus","updateUserStatus","status","put"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,eAAe,EAAE,IADS;AAE1BC,EAAAA,OAAO,EAAE,+CAFiB;AAG1BC,EAAAA,OAAO,EAAE;AACL,eAAW;AADN;AAHiB,CAAb,CAAjB;AAOA,OAAO,MAAMC,QAAQ,GAAG;AACpBC,EAAAA,QAAQ,CAACC,WAAW,GAAG,CAAf,EAAkBC,QAAQ,GAAG,EAA7B,EAAiC;AACrC,WAAOR,QAAQ,CAACS,GAAT,sBAA2BF,WAA3B,oBAAgDC,QAAhD,GACFE,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IADxB,CAAP;AAEH,GAJmB;;AAKpBC,EAAAA,UAAU,CAACC,EAAD,EAAK;AACX,WAAOd,QAAQ,CAACe,IAAT,kBAAwBD,EAAxB,GAA8B,EAA9B,EAAkCJ,IAAlC,CAAuCC,QAAQ,IAAIA,QAAQ,CAACC,IAA5D,CAAP;AACH,GAPmB;;AAQpBI,EAAAA,YAAY,CAACF,EAAD,EAAK;AACb,WAAOd,QAAQ,CAACiB,MAAT,kBAA0BH,EAA1B,GAAgC,EAAhC,EAAoCJ,IAApC,CAAyCC,QAAQ,IAAIA,QAAQ,CAACC,IAA9D,CAAP;AACH;;AAVmB,CAAjB;AAaP,OAAO,MAAMM,OAAO,GAAG;AACnBC,EAAAA,OAAO,GAAG;AACN,WAAOnB,QAAQ,CAACS,GAAT,CAAa,SAAb,EAAwBC,IAAxB,CAA6BC,QAAQ,IAAIA,QAAQ,CAACC,IAAlD,CAAP;AACH,GAHkB;;AAInBQ,EAAAA,KAAK,CAACC,QAAD,EAAW;AACZ,WAAOrB,QAAQ,CAACe,IAAT,CAAc,YAAd,EAA4B;AAAEO,MAAAA,KAAK,EAAED,QAAQ,CAACE,KAAlB;AAAyBC,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAA5C;AAAsDC,MAAAA,UAAU,EAAEJ,QAAQ,CAACI;AAA3E,KAA5B,EACFf,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IADxB,CAAP;AAEH,GAPkB;;AAQnBc,EAAAA,MAAM,GAAG;AACL,WAAO1B,QAAQ,CAACiB,MAAT,CAAgB,YAAhB,EAA8BP,IAA9B,CAAmCC,QAAQ,IAAIA,QAAQ,CAACC,IAAxD,CAAP;AACH;;AAVkB,CAAhB;AAaP,OAAO,MAAMe,UAAU,GAAG;AACtBC,EAAAA,UAAU,CAACd,EAAD,EAAK;AACX,WAAOd,QAAQ,CAACS,GAAT,mBAAwBK,EAAxB,GAA8BJ,IAA9B,CAAmCC,QAAQ,IAAIA,QAAQ,CAACC,IAAxD,CAAP;AACH,GAHqB;;AAItBiB,EAAAA,aAAa,CAACf,EAAD,EAAK;AACd,WAAOd,QAAQ,CAACS,GAAT,0BAA+BK,EAA/B,GAAqCJ,IAArC,CAA0CC,QAAQ,IAAIA,QAAQ,CAACC,IAA/D,CAAP;AACH,GANqB;;AAOtBkB,EAAAA,gBAAgB,CAACC,MAAD,EAAS;AAErB,WAAO/B,QAAQ,CAACgC,GAAT,CAAa,gBAAb,EAA+B;AAAED,MAAAA,MAAM,EAAEA;AAAV,KAA/B,EAAmDrB,IAAnD,CAAyDC,QAAD,IAAcA,QAAQ,CAACC,IAA/E,CAAP;AAEH;;AAXqB,CAAnB","sourcesContent":["import * as axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"d9c4ba29-f4a9-4d2d-8ba9-f90ead9fae9c\"\r\n    }\r\n})\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    postFollow(id) {\r\n        return instance.post(`follow/${id}`, {}).then(response => response.data)\r\n    },\r\n    deleteFollow(id) {\r\n        return instance.delete(`follow/${id}`, {}).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get('auth/me').then(response => response.data)\r\n    },\r\n    logIn(dataForm) {\r\n        return instance.post('auth/login', { email: dataForm.login, password: dataForm.password, rememberMe: dataForm.rememberMe })\r\n            .then(response => response.data)\r\n    },\r\n    logOut() {\r\n        return instance.delete('auth/login').then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(id) {\r\n        return instance.get(`profile/${id}`).then(response => response.data)\r\n    },\r\n    getUserStatus(id) {\r\n        return instance.get(`profile/status/${id}`).then(response => response.data)\r\n    },\r\n    updateUserStatus(status) {\r\n\r\n        return instance.put('profile/status', { status: status }).then((response) => response.data);\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}