{"ast":null,"code":"const options = {\n  year: 'numeric',\n  month: 'short',\n  day: 'numeric',\n  timezone: 'UTC',\n  hour: 'numeric',\n  minute: 'numeric'\n};\nconst today = {\n  hour: 'numeric',\n  minute: 'numeric'\n};\nconst month = {\n  month: 'long',\n  day: 'numeric'\n};\nconst year = {\n  month: 'long'\n};\nconst other = {\n  month: 'long',\n  year: 'numeric'\n};\n\nconst formatTime = date => {\n  if (isToday(date)) return date.toLocaleString(\"en-US\", today);else if (isMonth(date)) return date.toLocaleString(\"en-US\", month);else if (isYear(date)) return date.toLocaleString('en-US', year);\n  return date.toLocaleString('en-US', other);\n};\n\nconst isToday = someDate => {\n  const today = new Date();\n  return someDate.getDate() == today.getDate() && someDate.getMonth() == today.getMonth() && someDate.getFullYear() == today.getFullYear();\n};\n\nconst isMonth = someDate => {\n  const today = new Date();\n  return someDate.getMonth() == today.getMonth() && someDate.getFullYear() == today.getFullYear();\n};\n\nconst isYear = someDate => {\n  const today = new Date();\n  return someDate.getFullYear() == today.getFullYear();\n};\n\nexport default formatTime;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\utils\\timeFormat.js"],"names":["options","year","month","day","timezone","hour","minute","today","other","formatTime","date","isToday","toLocaleString","isMonth","isYear","someDate","Date","getDate","getMonth","getFullYear"],"mappings":"AACA,MAAMA,OAAO,GAAG;AACZC,EAAAA,IAAI,EAAE,SADM;AAEZC,EAAAA,KAAK,EAAE,OAFK;AAGZC,EAAAA,GAAG,EAAE,SAHO;AAIZC,EAAAA,QAAQ,EAAE,KAJE;AAKZC,EAAAA,IAAI,EAAE,SALM;AAMZC,EAAAA,MAAM,EAAE;AANI,CAAhB;AAQA,MAAMC,KAAK,GAAG;AACVF,EAAAA,IAAI,EAAE,SADI;AAEVC,EAAAA,MAAM,EAAE;AAFE,CAAd;AAIA,MAAMJ,KAAK,GAAG;AACVA,EAAAA,KAAK,EAAE,MADG;AAEVC,EAAAA,GAAG,EAAE;AAFK,CAAd;AAIA,MAAMF,IAAI,GAAG;AACTC,EAAAA,KAAK,EAAE;AADE,CAAb;AAGA,MAAMM,KAAK,GAAG;AACVN,EAAAA,KAAK,EAAE,MADG;AAEVD,EAAAA,IAAI,EAAE;AAFI,CAAd;;AAIC,MAAMQ,UAAU,GAAIC,IAAD,IAAS;AAEzB,MAAGC,OAAO,CAACD,IAAD,CAAV,EAAkB,OAAOA,IAAI,CAACE,cAAL,CAAoB,OAApB,EAA6BL,KAA7B,CAAP,CAAlB,KACK,IAAGM,OAAO,CAACH,IAAD,CAAV,EAAkB,OAAOA,IAAI,CAACE,cAAL,CAAoB,OAApB,EAA6BV,KAA7B,CAAP,CAAlB,KACA,IAAGY,MAAM,CAACJ,IAAD,CAAT,EAAiB,OAAOA,IAAI,CAACE,cAAL,CAAoB,OAApB,EAA6BX,IAA7B,CAAP;AACtB,SAAOS,IAAI,CAACE,cAAL,CAAoB,OAApB,EAA6BJ,KAA7B,CAAP;AACH,CANA;;AAQD,MAAMG,OAAO,GAAII,QAAD,IAAc;AAC1B,QAAMR,KAAK,GAAG,IAAIS,IAAJ,EAAd;AACA,SAAOD,QAAQ,CAACE,OAAT,MAAsBV,KAAK,CAACU,OAAN,EAAtB,IACLF,QAAQ,CAACG,QAAT,MAAuBX,KAAK,CAACW,QAAN,EADlB,IAELH,QAAQ,CAACI,WAAT,MAA0BZ,KAAK,CAACY,WAAN,EAF5B;AAGD,CALH;;AAME,MAAMN,OAAO,GAAIE,QAAD,IAAc;AAC5B,QAAMR,KAAK,GAAG,IAAIS,IAAJ,EAAd;AACA,SAAOD,QAAQ,CAACG,QAAT,MAAuBX,KAAK,CAACW,QAAN,EAAvB,IACLH,QAAQ,CAACI,WAAT,MAA0BZ,KAAK,CAACY,WAAN,EAD5B;AAED,CAJD;;AAKA,MAAML,MAAM,GAAIC,QAAD,IAAc;AAC3B,QAAMR,KAAK,GAAG,IAAIS,IAAJ,EAAd;AACA,SAAOD,QAAQ,CAACI,WAAT,MAA0BZ,KAAK,CAACY,WAAN,EAAjC;AACD,CAHD;;AAIA,eAAeV,UAAf","sourcesContent":["\r\nconst options = {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    timezone: 'UTC',\r\n    hour: 'numeric',\r\n    minute: 'numeric'\r\n}\r\nconst today = {\r\n    hour: 'numeric',\r\n    minute: 'numeric'\r\n}\r\nconst month = {\r\n    month: 'long',\r\n    day: 'numeric'\r\n}\r\nconst year = {\r\n    month: 'long'\r\n}\r\nconst other = {\r\n    month: 'long',\r\n    year: 'numeric'\r\n}\r\n const formatTime = (date) =>{\r\n\r\n    if(isToday(date)) return date.toLocaleString(\"en-US\", today)\r\n    else if(isMonth(date)) return date.toLocaleString(\"en-US\", month)\r\n    else if(isYear(date)) return date.toLocaleString('en-US', year)\r\n    return date.toLocaleString('en-US', other)\r\n}\r\n\r\nconst isToday = (someDate) => {\r\n    const today = new Date()\r\n    return someDate.getDate() == today.getDate() &&\r\n      someDate.getMonth() == today.getMonth() &&\r\n      someDate.getFullYear() == today.getFullYear()\r\n  }\r\n  const isMonth = (someDate) => {\r\n    const today = new Date()\r\n    return someDate.getMonth() == today.getMonth() &&\r\n      someDate.getFullYear() == today.getFullYear()\r\n  }\r\n  const isYear = (someDate) => {\r\n    const today = new Date()\r\n    return someDate.getFullYear() == today.getFullYear()\r\n  }\r\n  export default formatTime;"]},"metadata":{},"sourceType":"module"}