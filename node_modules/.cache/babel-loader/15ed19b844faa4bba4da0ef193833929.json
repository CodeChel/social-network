{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Messages-container\\\\Messages\\\\AddMessageFormWithConnect.jsx\";\nimport React from 'react';\nimport { reduxForm, reset } from 'redux-form';\nimport { createField } from '../../common/FormControls/FormControls';\nimport { required, voidValue } from '../../../utils/validators/validator';\nimport EmojiPicker from '../../common/EmojiPicker/EmojiPicker';\nimport { connect } from 'react-redux';\nimport styles from './Messages.module.css';\n\nconst AddMessageForm = props => {\n  const onKeyHandler = e => {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      if (e.target.name === \"message\".concat(props.userId)) {\n        e.preventDefault();\n        props.handleSubmit();\n      }\n    }\n  };\n\n  return React.createElement(\"form\", {\n    onKeyDown: onKeyHandler,\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, createField(\"write message to \".concat(props.name), \"message\".concat(props.userId), [required, voidValue], 'textarea', null, null, {}), props.dirty && React.createElement(\"button\", {\n    className: styles.buttonForm,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(EmojiPicker, {\n    formName: \"addMessageForm\",\n    fieldName: \"message\".concat(props.userId),\n    Form: props.addMessageForm,\n    styles: styles,\n    dispatch: props.dispatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n};\n\nconst afterSumbit = (result, dispatch) => {\n  dispatch(reset('addMessageForm'));\n};\n\nconst AddMessageFormRedux = reduxForm({\n  form: 'addMessageForm',\n  onSubmitSuccess: afterSumbit\n})(AddMessageForm);\n\nconst mapStateToPropse = state => ({\n  addMessageForm: state.form.addMessageForm\n});\n\nconst AddMessageFormWithConnect = connect(mapStateToPropse)(AddMessageFormRedux);\nexport default AddMessageFormWithConnect;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Messages-container\\Messages\\AddMessageFormWithConnect.jsx"],"names":["React","reduxForm","reset","createField","required","voidValue","EmojiPicker","connect","styles","AddMessageForm","props","onKeyHandler","e","keyCode","shiftKey","target","name","userId","preventDefault","handleSubmit","dirty","buttonForm","addMessageForm","dispatch","afterSumbit","result","AddMessageFormRedux","form","onSubmitSuccess","mapStateToPropse","state","AddMessageFormWithConnect"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,SAASC,WAAT,QAA4B,wCAA5B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,qCAApC;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAE9B,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxB,QAAIA,CAAC,CAACC,OAAF,KAAc,EAAd,IAAoBD,CAAC,CAACE,QAAF,KAAe,KAAvC,EAA8C;AAC1C,UAAIF,CAAC,CAACG,MAAF,CAASC,IAAT,sBAA4BN,KAAK,CAACO,MAAlC,CAAJ,EAAgD;AAC5CL,QAAAA,CAAC,CAACM,cAAF;AACAR,QAAAA,KAAK,CAACS,YAAN;AAEH;AACJ;AACJ,GARD;;AAUA,SAAO;AAAM,IAAA,SAAS,EAAER,YAAjB;AAA+B,IAAA,QAAQ,EAAED,KAAK,CAACS,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFhB,WAAW,4BAAqBO,KAAK,CAACM,IAA3B,oBAA6CN,KAAK,CAACO,MAAnD,GAA6D,CAACb,QAAD,EAAWC,SAAX,CAA7D,EAAoF,UAApF,EAAgG,IAAhG,EAAsG,IAAtG,EAA4G,EAA5G,CADT,EAGFK,KAAK,CAACU,KAAN,IAAe;AAAQ,IAAA,SAAS,EAAEZ,MAAM,CAACa,UAA1B;AAAsC,IAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHb,EAIH,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAC,gBAAtB;AAAuC,IAAA,SAAS,mBAAYX,KAAK,CAACO,MAAlB,CAAhD;AAA4E,IAAA,IAAI,EAAEP,KAAK,CAACY,cAAxF;AAAwG,IAAA,MAAM,EAAEd,MAAhH;AAAwH,IAAA,QAAQ,EAAEE,KAAK,CAACa,QAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJG,CAAP;AASH,CArBD;;AAsBA,MAAMC,WAAW,GAAG,CAACC,MAAD,EAASF,QAAT,KAAsB;AACtCA,EAAAA,QAAQ,CAACrB,KAAK,CAAC,gBAAD,CAAN,CAAR;AACH,CAFD;;AAGA,MAAMwB,mBAAmB,GAAGzB,SAAS,CAAC;AAClC0B,EAAAA,IAAI,EAAE,gBAD4B;AAElCC,EAAAA,eAAe,EAAEJ;AAFiB,CAAD,CAAT,CAGzBf,cAHyB,CAA5B;;AAIA,MAAMoB,gBAAgB,GAAIC,KAAD,KAAY;AACjCR,EAAAA,cAAc,EAAEQ,KAAK,CAACH,IAAN,CAAWL;AADM,CAAZ,CAAzB;;AAIC,MAAMS,yBAAyB,GAAGxB,OAAO,CAACsB,gBAAD,CAAP,CAA0BH,mBAA1B,CAAlC;AAEA,eAAeK,yBAAf","sourcesContent":["\r\nimport React from 'react'\r\nimport { reduxForm, reset } from 'redux-form'\r\nimport { createField } from '../../common/FormControls/FormControls'\r\nimport { required, voidValue } from '../../../utils/validators/validator'\r\nimport EmojiPicker from '../../common/EmojiPicker/EmojiPicker'\r\nimport { connect } from 'react-redux'\r\nimport styles from './Messages.module.css'\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    const onKeyHandler = (e) => {\r\n        if (e.keyCode === 13 && e.shiftKey === false) {\r\n            if (e.target.name === `message${props.userId}`) {\r\n                e.preventDefault()\r\n                props.handleSubmit()\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    return <form onKeyDown={onKeyHandler} onSubmit={props.handleSubmit}>\r\n        {createField(`write message to ${props.name}`, `message${props.userId}`, [required, voidValue], 'textarea', null, null, { })}\r\n\r\n        {props.dirty && <button className={styles.buttonForm} type=\"submit\"></button>}\r\n        <EmojiPicker formName='addMessageForm' fieldName={`message${props.userId}`} Form={props.addMessageForm} styles={styles} dispatch={props.dispatch} />\r\n\r\n\r\n\r\n    </form>\r\n}\r\nconst afterSumbit = (result, dispatch) => {\r\n    dispatch(reset('addMessageForm'))\r\n}\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: 'addMessageForm',\r\n    onSubmitSuccess: afterSumbit\r\n})(AddMessageForm)\r\nconst mapStateToPropse = (state) => ({\r\n    addMessageForm: state.form.addMessageForm\r\n})\r\n\r\n const AddMessageFormWithConnect = connect(mapStateToPropse)(AddMessageFormRedux)\r\n\r\n export default AddMessageFormWithConnect"]},"metadata":{},"sourceType":"module"}