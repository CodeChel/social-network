{"ast":null,"code":"import _objectWithoutProperties from\"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React,{useEffect,useRef}from'react';import MessageItem from'./MessageItem/MessageItem';import styles from'./Messages.module.css';import ScrollbarHOC from'../../common/HOCScrollBar/HOCScrollbarCusctom';import{NavLink}from'react-router-dom';import avatar from'../../../assets/img/ava.jpg';import AddMessageFormWithConnect from'./AddMessageFormWithConnect';import Preloader from'../../common/Preloader/Preloader';import EmptyDialogMessages from'./EmpyDialogSession';var DialogSession=function DialogSession(_ref){var currentDialog=_ref.currentDialog,props=_objectWithoutProperties(_ref,[\"currentDialog\"]);return currentDialog?React.createElement(DialogSessionWithHistory,Object.assign({currentDialog:currentDialog},props)):React.createElement(DialogSessionWithOutHistory,props);};var DialogSessionWithHistory=function DialogSessionWithHistory(_ref2){var currentDialog=_ref2.currentDialog,props=_objectWithoutProperties(_ref2,[\"currentDialog\"]);var messageItems=currentDialog.messages.map(function(item,index){return React.createElement(MessageItem,{time:item.timeFormat,key:index,right:item.right,message:item.message,id:item.id});});var scrollBar=useRef();useEffect(function(){!props.isSearchMode&&document.querySelector(\"textarea[name=message\".concat(props.userId,\"]\")).focus();});useEffect(function(){scrollBar.current.scrollToBottom();},[messageItems]);return React.createElement(\"div\",{className:styles.dialog},React.createElement(\"div\",{className:styles.dialogHead},React.createElement(\"div\",{className:styles.avatarContainer},React.createElement(NavLink,{to:\"/profile/\".concat(props.userId)},React.createElement(\"img\",{className:styles.avatar,src:currentDialog.avatar,alt:\"avatar\"}))),React.createElement(\"span\",{className:styles.name},React.createElement(NavLink,{to:\"/profile/\".concat(props.userId)},currentDialog.name)),React.createElement(NavLink,{className:styles.arrowBack,to:\"/messages/\"})),React.createElement(ScrollbarHOC,{children:React.createElement(\"div\",{className:styles.messagesFill},messageItems),ref:scrollBar,removeTrackYWhenNotUsed:true,style:{width:\"100%\",height:props.historyChatHeight}}),React.createElement(\"div\",{className:styles.formContainer},React.createElement(AddMessageFormWithConnect,{userId:props.userId,name:currentDialog.name,onSubmit:function onSubmit(data){props.sendMessage(data[\"message\".concat(props.userId)],props.userId);}})));};var DialogSessionWithOutHistory=function DialogSessionWithOutHistory(_ref3){var getUserForMessages=_ref3.getUserForMessages,setUserForMessages=_ref3.setUserForMessages,props=_objectWithoutProperties(_ref3,[\"getUserForMessages\",\"setUserForMessages\"]);useEffect(function(){getUserForMessages(props.userId);return function(){setUserForMessages(null);};},[props.userId,getUserForMessages,setUserForMessages]);return props.isFetching?React.createElement(Preloader,null):!props.userForMessage?React.createElement(EmptyDialogMessages,null):React.createElement(\"div\",{className:styles.dialog},React.createElement(\"div\",{className:styles.dialogHead},React.createElement(\"div\",{className:styles.avatarContainer},React.createElement(NavLink,{to:\"/profile/\".concat(props.userId)},React.createElement(\"img\",{className:styles.avatar,src:props.userForMessage.photo||avatar,alt:\"avatar\"}))),React.createElement(\"span\",{className:styles.name},React.createElement(NavLink,{to:\"/profile/\".concat(props.userId)},props.userForMessage.name)),React.createElement(NavLink,{className:styles.arrowBack,to:\"/messages/\"})),React.createElement(\"div\",{className:styles.newChat},React.createElement(\"div\",{className:styles.emptyChatText},\"Yet no messages with \",props.userForMessage.name),\" \"),React.createElement(\"div\",{className:styles.formContainer},React.createElement(AddMessageFormWithConnect,{userId:props.userId,name:props.userForMessage.name,onSubmit:function onSubmit(data){props.setNewDialog(data[\"message\".concat(props.userId)],props.userId,props.userForMessage.photo,props.userForMessage.name);}})));};export default DialogSession;","map":{"version":3,"sources":["C:/Users/WOW/Documents/GitHub/react/react-test/src/components/Messages-container/Messages/DialogSession.jsx"],"names":["React","useEffect","useRef","MessageItem","styles","ScrollbarHOC","NavLink","avatar","AddMessageFormWithConnect","Preloader","EmptyDialogMessages","DialogSession","currentDialog","props","DialogSessionWithHistory","messageItems","messages","map","item","index","timeFormat","right","message","id","scrollBar","isSearchMode","document","querySelector","userId","focus","current","scrollToBottom","dialog","dialogHead","avatarContainer","name","arrowBack","messagesFill","width","height","historyChatHeight","formContainer","data","sendMessage","DialogSessionWithOutHistory","getUserForMessages","setUserForMessages","isFetching","userForMessage","photo","newChat","emptyChatText","setNewDialog"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef} from 'react'\r\n\r\nimport MessageItem from './MessageItem/MessageItem'\r\nimport styles from './Messages.module.css'\r\n\r\nimport ScrollbarHOC from '../../common/HOCScrollBar/HOCScrollbarCusctom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport avatar from '../../../assets/img/ava.jpg'\r\n\r\n\r\n\r\n\r\nimport AddMessageFormWithConnect from './AddMessageFormWithConnect'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport EmptyDialogMessages from './EmpyDialogSession';\r\n\r\n\r\nconst DialogSession = ({currentDialog, ...props}) => {\r\n    return currentDialog\r\n    ? <DialogSessionWithHistory currentDialog={currentDialog}  {...props}/>\r\n    : <DialogSessionWithOutHistory {...props}/>\r\n    \r\n    \r\n}\r\n\r\n\r\n\r\nconst DialogSessionWithHistory = ({currentDialog, ...props}) =>{\r\n    \r\n    const messageItems = currentDialog.messages.map((item, index) => <MessageItem time={item.timeFormat} key={index} right={item.right} message={item.message} id={item.id} />)\r\n\r\n    const scrollBar = useRef()\r\n    \r\n    useEffect(() => {   \r\n        !props.isSearchMode && document.querySelector(`textarea[name=message${props.userId}]`).focus()\r\n    })\r\n\r\n    useEffect(() => {\r\n        scrollBar.current.scrollToBottom()\r\n    }, [messageItems])\r\n\r\n    return <div className={styles.dialog}>\r\n        <div className={styles.dialogHead}>\r\n            <div className={styles.avatarContainer}>\r\n                <NavLink to={`/profile/${props.userId}`}>\r\n                    <img className={styles.avatar} src={currentDialog.avatar} alt=\"avatar\" />\r\n                </NavLink>\r\n            </div>\r\n            <span className={styles.name}>\r\n                <NavLink to={`/profile/${props.userId}`}>\r\n                    {currentDialog.name}\r\n                </NavLink>\r\n            </span>\r\n            <NavLink className={styles.arrowBack} to={`/messages/`}/>          \r\n        </div>\r\n        <ScrollbarHOC children={<div className={styles.messagesFill}>{messageItems}</div>}  ref={scrollBar} removeTrackYWhenNotUsed={true} style={{ width: \"100%\", height: props.historyChatHeight}} />\r\n\r\n        <div className={styles.formContainer}>\r\n            <AddMessageFormWithConnect userId={props.userId} name={currentDialog.name} onSubmit={(data) => { props.sendMessage(data[`message${props.userId}`], props.userId) }} />\r\n        </div>\r\n    </div>\r\n    \r\n}\r\nconst DialogSessionWithOutHistory = ({getUserForMessages, setUserForMessages, ...props}) => {\r\n    useEffect(()=>{\r\n        getUserForMessages(props.userId)\r\n        return ()=>{\r\n            setUserForMessages(null)\r\n        }\r\n    },[props.userId,getUserForMessages, setUserForMessages ])\r\n     \r\n    return props.isFetching ?\r\n           <Preloader />\r\n           : !props.userForMessage \r\n                ? <EmptyDialogMessages />\r\n                : <div className={styles.dialog}>\r\n                    <div className={styles.dialogHead}>\r\n                        <div className={styles.avatarContainer}>\r\n                            <NavLink to={`/profile/${props.userId}`}>\r\n                                <img className={styles.avatar} src={props.userForMessage.photo || avatar}  alt=\"avatar\" />\r\n                            </NavLink>\r\n                        </div>\r\n                        <span className={styles.name}>\r\n                            <NavLink to={`/profile/${props.userId}`}>\r\n                                {props.userForMessage.name}\r\n                            </NavLink>\r\n                        </span>\r\n                        <NavLink className={styles.arrowBack} to={`/messages/`}/>\r\n                    </div>\r\n                    <div className={styles.newChat}><div className={styles.emptyChatText}>\r\n                        Yet no messages with {props.userForMessage.name}\r\n                    </div> </div>\r\n\r\n                    <div className={styles.formContainer}>\r\n                        <AddMessageFormWithConnect userId={props.userId} name={props.userForMessage.name} onSubmit={(data) => { props.setNewDialog(data[`message${props.userId}`], props.userId,\r\n                        props.userForMessage.photo, props.userForMessage.name) }} />\r\n                    </div>\r\n                </div>\r\n}\r\n\r\n\r\nexport default DialogSession;"]},"metadata":{},"sourceType":"module"}