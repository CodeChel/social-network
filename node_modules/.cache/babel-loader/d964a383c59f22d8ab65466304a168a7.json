{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import styles from'./DialogWithUser.module.css';import{formatTimeToLastMessage}from'../../../../utils/timeFormat';import{NavLink}from'react-router-dom';var DialogWithUser=function DialogWithUser(props){useEffect(function(){setLastMessageTime(formatTimeToLastMessage(new Date(props.date)));},[props.date]);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),lastMessageTime=_useState2[0],setLastMessageTime=_useState2[1];return React.createElement(NavLink,{to:\"/messages/\".concat(props.id)},React.createElement(\"div\",{onClick:function onClick(){props.isSearchMode&&props.outSearch();},ref:props.dialogRef,className:styles.items+' '+(props.currentDialogId===props.id?styles.selectedDialog:'')},React.createElement(\"div\",null,React.createElement(\"img\",{className:styles.avatar,src:props.avatar,alt:\"avatar\"})),React.createElement(\"div\",null,React.createElement(\"div\",{className:styles.name},props.name),React.createElement(\"span\",{className:styles.message},props.isYoursMessage?React.createElement(\"span\",{className:styles.yourMessage},\"You: \"):'',props.lastMessage.length>50?props.lastMessage.slice(0,50)+'...':props.lastMessage)),React.createElement(\"span\",{className:styles.timeLastMessage},lastMessageTime)));};export default DialogWithUser;","map":{"version":3,"sources":["C:/Users/WOW/Documents/GitHub/react/react-test/src/components/Messages-container/Messages/DialogsList/DialogWithUser.jsx"],"names":["React","useState","useEffect","styles","formatTimeToLastMessage","NavLink","DialogWithUser","props","setLastMessageTime","Date","date","lastMessageTime","id","isSearchMode","outSearch","dialogRef","items","currentDialogId","selectedDialog","avatar","name","message","isYoursMessage","yourMessage","lastMessage","length","slice","timeLastMessage"],"mappings":"gLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,6BAAnB,CACA,OAASC,uBAAT,KAAwC,8BAAxC,CACA,OAAQC,OAAR,KAAsB,kBAAtB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAE9BL,SAAS,CAAC,UAAM,CACZM,kBAAkB,CAACJ,uBAAuB,CAAC,GAAIK,CAAAA,IAAJ,CAASF,KAAK,CAACG,IAAf,CAAD,CAAxB,CAAlB,CACH,CAFQ,CAEN,CAACH,KAAK,CAACG,IAAP,CAFM,CAAT,CAF8B,cAMgBT,QAAQ,CAAC,IAAD,CANxB,wCAMvBU,eANuB,eAMNH,kBANM,eAS9B,MAAO,qBAAC,OAAD,EAAU,EAAE,qBAAeD,KAAK,CAACK,EAArB,CAAZ,EACH,2BAAK,OAAO,CAAE,kBAAM,CACpBL,KAAK,CAACM,YAAN,EAAsBN,KAAK,CAACO,SAAN,EAAtB,CACH,CAFG,CAED,GAAG,CAAEP,KAAK,CAACQ,SAFV,CAGA,SAAS,CAAEZ,MAAM,CAACa,KAAP,CAAe,GAAf,EAAuBT,KAAK,CAACU,eAAN,GAA0BV,KAAK,CAACK,EAAhC,CAAqCT,MAAM,CAACe,cAA5C,CAA6D,EAApF,CAHX,EAIA,+BACI,2BAAK,SAAS,CAAEf,MAAM,CAACgB,MAAvB,CAA+B,GAAG,CAAEZ,KAAK,CAACY,MAA1C,CAAkD,GAAG,CAAC,QAAtD,EADJ,CAJA,CAOA,+BACI,2BAAK,SAAS,CAAEhB,MAAM,CAACiB,IAAvB,EACKb,KAAK,CAACa,IADX,CADJ,CAII,4BAAM,SAAS,CAAEjB,MAAM,CAACkB,OAAxB,EAAkCd,KAAK,CAACe,cAAN,CAAuB,4BAAM,SAAS,CAAEnB,MAAM,CAACoB,WAAxB,UAAvB,CAA2E,EAA7G,CACMhB,KAAK,CAACiB,WAAN,CAAkBC,MAAlB,CAA2B,EAA3B,CAAgClB,KAAK,CAACiB,WAAN,CAAkBE,KAAlB,CAAwB,CAAxB,CAA2B,EAA3B,EAAiC,KAAjE,CAAyEnB,KAAK,CAACiB,WADrF,CAJJ,CAPA,CAeA,4BAAM,SAAS,CAAErB,MAAM,CAACwB,eAAxB,EAA0ChB,eAA1C,CAfA,CADG,CAAP,CAmBH,CA5BD,CA8BA,cAAeL,CAAAA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport styles from './DialogWithUser.module.css'\r\nimport { formatTimeToLastMessage } from '../../../../utils/timeFormat'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst DialogWithUser = (props) => {\r\n\r\n    useEffect(() => {\r\n        setLastMessageTime(formatTimeToLastMessage(new Date(props.date)))\r\n    }, [props.date])\r\n\r\n    const [lastMessageTime, setLastMessageTime] = useState(null);\r\n\r\n  \r\n    return <NavLink  to={`/messages/${props.id}`}>\r\n        <div onClick={() => {\r\n        props.isSearchMode && props.outSearch()\r\n    }} ref={props.dialogRef}\r\n        className={styles.items + ' ' + ( props.currentDialogId === props.id ? styles.selectedDialog : '')}>\r\n        <div>\r\n            <img className={styles.avatar} src={props.avatar} alt=\"avatar\" />\r\n        </div>\r\n        <div>\r\n            <div className={styles.name}>\r\n                {props.name}\r\n            </div>\r\n            <span className={styles.message}>{props.isYoursMessage ? <span className={styles.yourMessage}>You: </span> : ''}\r\n                {(props.lastMessage.length > 50 ? props.lastMessage.slice(0, 50) + '...' : props.lastMessage)}</span>\r\n\r\n        </div>\r\n        <span className={styles.timeLastMessage}>{lastMessageTime}</span>\r\n    </div>\r\n    </NavLink> \r\n}\r\n\r\nexport default DialogWithUser;"]},"metadata":{},"sourceType":"module"}