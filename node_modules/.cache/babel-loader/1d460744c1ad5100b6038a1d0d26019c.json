{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Messages-container\\\\Messages\\\\Messages.jsx\";\nimport React, { useEffect, useRef } from 'react';\nimport styles from './Messages.module.css';\nimport DialogItem from '../../DialogItem/DialogItem';\nimport MessageItem from '../../MessageItem/MessageItem';\nimport { reduxForm, Field } from 'redux-form';\nimport { createField } from '../../common/FormControls/FormControls';\nimport { required, maxLengthCreator } from '../../../utils/validators/validator';\nimport CustomScroll from 'react-custom-scroll';\nimport Scrollbars from \"react-scrollbars-custom\";\nimport ScrollbarHOC from '../../common/HOCScrollBar/HOCScrollbarCusctom';\nconst maxLength30 = maxLengthCreator(30);\n\nconst Messages = props => {\n  let messageItems = props.Messages.messagesData.map(item => React.createElement(MessageItem, {\n    right: item.right,\n    message: item.message,\n    id: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n  let dialogItems = props.Messages.dialogItemsData.map(item => React.createElement(DialogItem, {\n    name: item.name,\n    id: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n  const scrollBar = useRef();\n  useEffect(() => {\n    scrollBar.current.scrollToBottom();\n  }, [messageItems]);\n  return React.createElement(\"div\", {\n    className: styles.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.dialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.dialogHead,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(ScrollbarHOC, {\n    children: React.createElement(\"div\", {\n      className: styles.messagesFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, messageItems),\n    autoHide: true,\n    ref: scrollBar,\n    removeTrackYWhenNotUsed: true,\n    style: {\n      width: \"100%\",\n      height: \"70%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(AddMessageFormRedux, {\n    onSubmit: props.sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.dialogItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.dialogSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.dialogsList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, dialogItems)));\n};\n\nconst addMessageForm = props => {\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, createField(null, 'message', [required], 'textarea', null, null, {\n    cols: 100,\n    rows: 4\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: styles.buttonForm,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Send\")));\n};\n\nconst AddMessageFormRedux = reduxForm({\n  form: 'addMessageForm'\n})(addMessageForm);\nexport default Messages;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Messages-container\\Messages\\Messages.jsx"],"names":["React","useEffect","useRef","styles","DialogItem","MessageItem","reduxForm","Field","createField","required","maxLengthCreator","CustomScroll","Scrollbars","ScrollbarHOC","maxLength30","Messages","props","messageItems","messagesData","map","item","right","message","id","dialogItems","dialogItemsData","name","scrollBar","current","scrollToBottom","messages","dialog","dialogHead","messagesFill","width","height","sendMessage","dialogSearch","dialogsList","addMessageForm","handleSubmit","cols","rows","buttonForm","AddMessageFormRedux","form"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef} from 'react'\r\n\r\nimport styles from './Messages.module.css'\r\nimport DialogItem from '../../DialogItem/DialogItem'\r\nimport MessageItem from '../../MessageItem/MessageItem'\r\n\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { createField } from '../../common/FormControls/FormControls';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validator';\r\nimport CustomScroll from 'react-custom-scroll';\r\nimport Scrollbars from \"react-scrollbars-custom\";\r\nimport ScrollbarHOC from '../../common/HOCScrollBar/HOCScrollbarCusctom';\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\n\r\nconst Messages = (props) => {\r\n    let messageItems = props.Messages.messagesData.map(item => <MessageItem right={item.right} message={item.message} id={item.id} />)\r\n    let dialogItems = props.Messages.dialogItemsData.map((item) => <DialogItem name={item.name} id={item.id} />)\r\n\r\n    const scrollBar = useRef()\r\n\r\n    useEffect(()=>{\r\n        scrollBar.current.scrollToBottom();\r\n    },[messageItems])\r\n\r\n    return <div className={styles.messages}>\r\n        <div className={styles.dialog}>\r\n            <div className={styles.dialogHead}></div>\r\n        \r\n            {/* <CustomScroll  keepAtBottom={true}  >\r\n                <div  className={styles.messagesFill}>\r\n                    {messageItems}\r\n                    \r\n            </CustomScroll>\r\n              */}\r\n              <ScrollbarHOC children={<div className={styles.messagesFill}>{messageItems}</div>} autoHide   ref={scrollBar}   removeTrackYWhenNotUsed={true} style={{ width: \"100%\", height: \"70%\" }}/>\r\n          \r\n            <AddMessageFormRedux onSubmit={props.sendMessage}/> \r\n        </div>\r\n        <div className={styles.dialogItems}>\r\n            <div className={styles.dialogSearch}></div>\r\n            <div className={styles.dialogsList}>\r\n                {dialogItems}\r\n                \r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst addMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        {createField(null, 'message', [required], 'textarea', null, null,{cols: 100, rows: 4})}\r\n        <div>\r\n            <button className={styles.buttonForm} type='submit'>Send</button>\r\n        </div>\r\n    </form>\r\n}\r\nconst AddMessageFormRedux = reduxForm({form: 'addMessageForm'})(addMessageForm);\r\n\r\nexport default Messages;"]},"metadata":{},"sourceType":"module"}