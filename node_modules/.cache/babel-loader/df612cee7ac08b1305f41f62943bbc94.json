{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { profileAPI } from '../API/api';\nimport { stopSubmit } from 'redux-form';\nimport { usersAPI } from '../API/api';\nconst SEND_POST = 'profile-reducer/SEND_POST';\nconst SET_USER_PROFILE = 'profile-reducer/SET_USER_PROFILE';\nconst SET_USER_STATUS = 'profile-reducer/SET_USER_STATUS';\nconst SET_PHOTO_PROFILE = 'profile-reducer/SET_PHOTO_PROFILE';\nconst SET_EDIT_PROFILE = 'profile-reducer/SET_EDIT_PROFILE';\nconst RESET_USER_POFILE = 'profile-reducer/RESET_USER_POFILE';\nconst FOLLOW_UNFOLLOW_SUCCESS = 'profile-reducer/FOLLOW_UNFOLLOW_SUCCESS';\nconst TOGGLE_IS_FETCHING = 'profile-reducer/TOGGLE_IS_FETCHING';\nconst SEND_MESSAGE_MODE = 'profile-reducer/SEND_MESSAGE_MODE';\nconst SET_POPPUP_AVATAR = 'profile-reducer/SET_POPPUP_AVATAR';\nconst TOGGLE_LIKE_SUCCESS = 'profile-reducer/TOGGLE_LIKE_SUCCESS';\nconst DELETE_POST_SUCCESS = 'profile-reducer/DELETE_POST_SUCCESS';\nconst SORT_BY_TIME = 'profile-reducer/SORT_BY_TIME';\nconst SORT_BY_LIKES = 'profile-reducer/SORT_BY_LIKES';\nconst IS_USER_EXIST = 'profile-reducer/IS_USER_EXIST';\nconst options = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  timezone: 'UTC',\n  hour: 'numeric',\n  minute: 'numeric'\n};\nconst initialState = {\n  posts: [{\n    name: 'ChelCode',\n    userId: '1601',\n    avatar: 'https://social-network.samuraijs.com/activecontent/images/users/1601/user-small.jpg?v=13',\n    text: 'Whats up??!',\n    id: 2,\n    likesCount: 0,\n    time: 1574713363365,\n    timeFormat: 'November 11, 2019, 10:20 PM',\n    liked: false\n  }, {\n    name: 'ChelCode',\n    avatar: 'https://social-network.samuraijs.com/activecontent/images/users/1601/user-small.jpg?v=13',\n    text: 'hello world!!',\n    userId: '1601',\n    id: 1,\n    likesCount: 12,\n    time: 1574713324589,\n    timeFormat: 'November 9, 2019, 2:46 PM',\n    liked: false\n  }],\n  currentTextPost: '',\n  profile: null,\n  status: '',\n  isEditMode: false,\n  isFollowed: false,\n  isFetching: false,\n  sendMessageMode: false,\n  avatarPopup: false\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEND_POST:\n      return _objectSpread({}, state, {\n        posts: [{\n          text: action.post.postBody,\n          time: action.time,\n          id: state.posts.length + 1,\n          likesCount: 0,\n          timeFormat: action.timeFormat,\n          liked: false,\n          name: action.name,\n          avatar: action.avatar,\n          userId: action.userId\n        }, ...state.posts]\n      });\n\n    case SET_USER_PROFILE:\n      return _objectSpread({}, state, {\n        profile: action.profile\n      });\n\n    case SET_USER_STATUS:\n      return _objectSpread({}, state, {\n        status: action.status\n      });\n\n    case SET_PHOTO_PROFILE:\n      return _objectSpread({}, state, {\n        profile: _objectSpread({}, state.profile, {\n          photos: action.photos\n        })\n      });\n\n    case SET_EDIT_PROFILE:\n      return _objectSpread({}, state, {\n        isEditMode: action.mode\n      });\n\n    case RESET_USER_POFILE:\n      return initialState;\n\n    case FOLLOW_UNFOLLOW_SUCCESS:\n      return _objectSpread({}, state, {\n        isFollowed: action.isFollow\n      });\n\n    case TOGGLE_IS_FETCHING:\n      return _objectSpread({}, state, {\n        isFetching: action.isFetching\n      });\n\n    case SEND_MESSAGE_MODE:\n      return _objectSpread({}, state, {\n        sendMessageMode: action.isSendMode\n      });\n\n    case SET_POPPUP_AVATAR:\n      return _objectSpread({}, state, {\n        avatarPopup: action.isPopup\n      });\n\n    case TOGGLE_LIKE_SUCCESS:\n      return _objectSpread({}, state, {\n        posts: state.posts.map(p => action.idPost === p.id ? _objectSpread({}, p, {\n          liked: action.isLiked,\n          likesCount: action.isLiked ? p.likesCount + 1 : p.likesCount - 1\n        }) : p)\n      });\n\n    case DELETE_POST_SUCCESS:\n      return _objectSpread({}, state, {\n        posts: state.posts.filter(p => p.id !== action.idPost).map((p, index) => {\n          return _objectSpread({}, p, {\n            id: index + 1\n          });\n        })\n      });\n\n    case SORT_BY_TIME:\n      return _objectSpread({}, state, {\n        posts: [...state.posts.sort((a, b) => {\n          return b.time - a.time;\n        })]\n      });\n\n    case SORT_BY_LIKES:\n      return _objectSpread({}, state, {\n        posts: [...state.posts.sort((a, b) => {\n          return b.likesCount - a.likesCount;\n        })]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const resetProfile = () => ({\n  type: RESET_USER_POFILE\n});\nexport const sendPost = (post, name, avatar, userId) => ({\n  type: SEND_POST,\n  post,\n  timeFormat: new Date().toLocaleString(\"en-US\", options),\n  time: Date.now(),\n  name,\n  avatar,\n  userId\n});\nexport const setEditProfile = mode => ({\n  type: SET_EDIT_PROFILE,\n  mode\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setUserStatus = status => ({\n  type: SET_USER_STATUS,\n  status\n});\nexport const setFollowUnfollow = isFollow => ({\n  type: FOLLOW_UNFOLLOW_SUCCESS,\n  isFollow\n});\nexport const setMessageMode = isSendMode => ({\n  type: SEND_MESSAGE_MODE,\n  isSendMode\n});\nexport const setPopupAvatar = isPopup => ({\n  type: SET_POPPUP_AVATAR,\n  isPopup\n});\nexport const likesToggle = (isLiked, idPost) => ({\n  type: TOGGLE_LIKE_SUCCESS,\n  isLiked,\n  idPost\n});\nexport const deletePost = idPost => ({\n  type: DELETE_POST_SUCCESS,\n  idPost\n});\nexport const sortByTime = () => ({\n  type: SORT_BY_TIME\n});\nexport const sortByLikes = () => ({\n  type: SORT_BY_LIKES\n});\nexport const isUserExist = isExist => ({\n  type: IS_USER_EXIST,\n  payload: isExist\n});\nexport const sendPostThunk = post => (dispatch, getState) => {\n  const name = getState().auth.login;\n  const avatar = getState().auth.avatar;\n  const userId = getState().auth.id;\n  dispatch(sendPost(post, name, avatar, userId));\n};\nexport const getProfileThunk = userId => async dispatch => {\n  const data = await profileAPI.getProfile(userId);\n\n  if (data.resultCode === 0) {\n    dispatch(setUserProfile(data));\n  }\n};\n\nconst savePhotoSucсess = photos => ({\n  type: SET_PHOTO_PROFILE,\n  photos\n});\n\nexport const getStatusThunk = userId => async dispatch => {\n  const data = await profileAPI.getUserStatus(userId);\n  dispatch(setUserStatus(data));\n};\nexport const updateStatusThunk = status => async dispatch => {\n  const data = await profileAPI.updateUserStatus(status);\n\n  if (data.resultCode === 0) {\n    dispatch(setUserStatus(status));\n  }\n};\nexport const savePhotoThunk = photo => async dispatch => {\n  const data = await profileAPI.updatePhoto(photo);\n\n  if (data.resultCode === 0) {\n    dispatch(savePhotoSucсess(data.data.photos));\n  }\n};\nexport const saveProfileData = profile => async (dispatch, getState) => {\n  const userId = getState().auth.id;\n  const response = await profileAPI.saveProfileData(profile);\n\n  if (response.resultCode === 0) {\n    dispatch(getProfileThunk(userId));\n    dispatch(setEditProfile(false));\n  } else {\n    let number = response.messages[0].indexOf('>');\n    let test = response.messages[0].slice(number + 1, -1).toLowerCase();\n    dispatch(stopSubmit('edit-profile', {\n      'contacts': {\n        [test]: test + ' incorrect'\n      }\n    }));\n  }\n};\nexport const getFollowedThunk = id => async dispatch => {\n  const data = await usersAPI.getFollow(id);\n  dispatch(setFollowUnfollow(data));\n};\nexport const followUnfollow = (isFollow, id) => async dispatch => {\n  dispatch(toggleIsFetching(true));\n  const data = isFollow ? await usersAPI.postFollow(id) : await usersAPI.deleteFollow(id);\n\n  if (data.resultCode === 0) {\n    dispatch(setFollowUnfollow(isFollow));\n    dispatch(toggleIsFetching(false));\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\redux\\profile-reducer.js"],"names":["profileAPI","stopSubmit","usersAPI","SEND_POST","SET_USER_PROFILE","SET_USER_STATUS","SET_PHOTO_PROFILE","SET_EDIT_PROFILE","RESET_USER_POFILE","FOLLOW_UNFOLLOW_SUCCESS","TOGGLE_IS_FETCHING","SEND_MESSAGE_MODE","SET_POPPUP_AVATAR","TOGGLE_LIKE_SUCCESS","DELETE_POST_SUCCESS","SORT_BY_TIME","SORT_BY_LIKES","IS_USER_EXIST","options","year","month","day","timezone","hour","minute","initialState","posts","name","userId","avatar","text","id","likesCount","time","timeFormat","liked","currentTextPost","profile","status","isEditMode","isFollowed","isFetching","sendMessageMode","avatarPopup","profileReducer","state","action","type","post","postBody","length","photos","mode","isFollow","isSendMode","isPopup","map","p","idPost","isLiked","filter","index","sort","a","b","toggleIsFetching","resetProfile","sendPost","Date","toLocaleString","now","setEditProfile","setUserProfile","setUserStatus","setFollowUnfollow","setMessageMode","setPopupAvatar","likesToggle","deletePost","sortByTime","sortByLikes","isUserExist","isExist","payload","sendPostThunk","dispatch","getState","auth","login","getProfileThunk","data","getProfile","resultCode","savePhotoSucсess","getStatusThunk","getUserStatus","updateStatusThunk","updateUserStatus","savePhotoThunk","photo","updatePhoto","saveProfileData","response","number","messages","indexOf","test","slice","toLowerCase","getFollowedThunk","getFollow","followUnfollow","postFollow","deleteFollow"],"mappings":"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","sourcesContent":["import { profileAPI } from '../API/api'\r\nimport { stopSubmit } from 'redux-form'\r\nimport { usersAPI } from '../API/api'\r\n\r\n\r\n\r\nconst SEND_POST = 'profile-reducer/SEND_POST'\r\nconst SET_USER_PROFILE = 'profile-reducer/SET_USER_PROFILE'\r\nconst SET_USER_STATUS = 'profile-reducer/SET_USER_STATUS'\r\nconst SET_PHOTO_PROFILE = 'profile-reducer/SET_PHOTO_PROFILE'\r\nconst SET_EDIT_PROFILE = 'profile-reducer/SET_EDIT_PROFILE'\r\nconst RESET_USER_POFILE = 'profile-reducer/RESET_USER_POFILE'\r\nconst FOLLOW_UNFOLLOW_SUCCESS = 'profile-reducer/FOLLOW_UNFOLLOW_SUCCESS'\r\nconst TOGGLE_IS_FETCHING = 'profile-reducer/TOGGLE_IS_FETCHING'\r\nconst SEND_MESSAGE_MODE = 'profile-reducer/SEND_MESSAGE_MODE'\r\nconst SET_POPPUP_AVATAR = 'profile-reducer/SET_POPPUP_AVATAR'\r\nconst TOGGLE_LIKE_SUCCESS = 'profile-reducer/TOGGLE_LIKE_SUCCESS'\r\nconst DELETE_POST_SUCCESS = 'profile-reducer/DELETE_POST_SUCCESS'\r\nconst SORT_BY_TIME = 'profile-reducer/SORT_BY_TIME'\r\nconst SORT_BY_LIKES = 'profile-reducer/SORT_BY_LIKES'\r\nconst IS_USER_EXIST = 'profile-reducer/IS_USER_EXIST'\r\n\r\nconst options = {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    timezone: 'UTC',\r\n    hour: 'numeric',\r\n    minute: 'numeric'\r\n}\r\n\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {\r\n            name: 'ChelCode', userId: '1601', avatar: 'https://social-network.samuraijs.com/activecontent/images/users/1601/user-small.jpg?v=13',\r\n            text: 'Whats up??!', id: 2, likesCount: 0, time: 1574713363365, timeFormat: 'November 11, 2019, 10:20 PM', liked: false\r\n        },\r\n        {\r\n            name: 'ChelCode', avatar: 'https://social-network.samuraijs.com/activecontent/images/users/1601/user-small.jpg?v=13',\r\n            text: 'hello world!!', userId: '1601', id: 1, likesCount: 12, time: 1574713324589, timeFormat: 'November 9, 2019, 2:46 PM', liked: false\r\n        }],\r\n    currentTextPost: '',\r\n    profile: null,\r\n    status: '',\r\n    isEditMode: false,\r\n    isFollowed: false,\r\n    isFetching: false,\r\n    sendMessageMode: false,\r\n    avatarPopup: false\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SEND_POST:\r\n            return {\r\n                ...state,\r\n                posts: [{\r\n                    text: action.post.postBody, time: action.time, id: state.posts.length + 1, likesCount: 0, timeFormat: action.timeFormat, liked: false,\r\n                    name: action.name, avatar: action.avatar, userId: action.userId\r\n                }, ...state.posts],\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return { ...state, profile: action.profile }\r\n        case SET_USER_STATUS:\r\n            return { ...state, status: action.status }\r\n        case SET_PHOTO_PROFILE:\r\n            return { ...state, profile: { ...state.profile, photos: action.photos } }\r\n        case SET_EDIT_PROFILE:\r\n            return { ...state, isEditMode: action.mode }\r\n        case RESET_USER_POFILE:\r\n            return initialState\r\n        case FOLLOW_UNFOLLOW_SUCCESS:\r\n            return { ...state, isFollowed: action.isFollow }\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n        case SEND_MESSAGE_MODE:\r\n            return { ...state, sendMessageMode: action.isSendMode }\r\n        case SET_POPPUP_AVATAR:\r\n            return { ...state, avatarPopup: action.isPopup }\r\n        case TOGGLE_LIKE_SUCCESS:\r\n            return { ...state, posts: state.posts.map(p => action.idPost === p.id ? { ...p, liked: action.isLiked, likesCount: action.isLiked ? p.likesCount + 1 : p.likesCount - 1 } : p) }\r\n        case DELETE_POST_SUCCESS:\r\n            return { ...state, posts: state.posts.filter(p => p.id !== action.idPost).map((p, index) => { return { ...p, id: index + 1 } }) }\r\n        case SORT_BY_TIME:\r\n            return { ...state, posts: [...state.posts.sort((a, b) => { return b.time - a.time })] }\r\n        case SORT_BY_LIKES:\r\n            return { ...state, posts: [...state.posts.sort((a, b) => { return b.likesCount - a.likesCount })] }\r\n        default: return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const resetProfile = () => ({ type: RESET_USER_POFILE })\r\nexport const sendPost = (post, name, avatar, userId) => ({ type: SEND_POST, post, timeFormat: new Date().toLocaleString(\"en-US\", options), time: Date.now(), name, avatar, userId })\r\n\r\n\r\nexport const setEditProfile = (mode) => ({ type: SET_EDIT_PROFILE, mode })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setUserStatus = (status) => ({ type: SET_USER_STATUS, status })\r\nexport const setFollowUnfollow = (isFollow) => ({ type: FOLLOW_UNFOLLOW_SUCCESS, isFollow })\r\nexport const setMessageMode = (isSendMode) => ({ type: SEND_MESSAGE_MODE, isSendMode })\r\nexport const setPopupAvatar = (isPopup) => ({ type: SET_POPPUP_AVATAR, isPopup })\r\nexport const likesToggle = (isLiked, idPost) => ({ type: TOGGLE_LIKE_SUCCESS, isLiked, idPost })\r\nexport const deletePost = (idPost) => ({ type: DELETE_POST_SUCCESS, idPost })\r\nexport const sortByTime = () => ({ type: SORT_BY_TIME })\r\nexport const sortByLikes = () => ({ type: SORT_BY_LIKES })\r\nexport const isUserExist = (isExist) => ({ type: IS_USER_EXIST, payload: isExist })\r\n\r\nexport const sendPostThunk = (post) => (dispatch, getState) => {\r\n\r\n    const name = getState().auth.login\r\n    const avatar = getState().auth.avatar\r\n    const userId = getState().auth.id\r\n    dispatch(sendPost(post, name, avatar, userId))\r\n}\r\nexport const getProfileThunk = (userId) => async (dispatch) => {\r\n\r\n    const data = await (profileAPI.getProfile(userId))\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserProfile(data))\r\n    }\r\n\r\n}\r\nconst savePhotoSucсess = (photos) => ({ type: SET_PHOTO_PROFILE, photos })\r\n\r\nexport const getStatusThunk = (userId) => async (dispatch) => {\r\n    const data = await (profileAPI.getUserStatus(userId))\r\n\r\n    dispatch(setUserStatus(data))\r\n\r\n}\r\nexport const updateStatusThunk = (status) => async (dispatch) => {\r\n    const data = await (profileAPI.updateUserStatus(status))\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserStatus(status))\r\n    }\r\n\r\n}\r\nexport const savePhotoThunk = (photo) => async (dispatch) => {\r\n    const data = await (profileAPI.updatePhoto(photo))\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(savePhotoSucсess(data.data.photos))\r\n    }\r\n\r\n}\r\nexport const saveProfileData = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.id\r\n    const response = await (profileAPI.saveProfileData(profile))\r\n\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(getProfileThunk(userId))\r\n        dispatch(setEditProfile(false))\r\n    } else {\r\n        let number = response.messages[0].indexOf('>')\r\n        let test = response.messages[0].slice(number + 1, -1).toLowerCase()\r\n        dispatch(stopSubmit('edit-profile', { 'contacts': { [test]: test + ' incorrect' } }))\r\n    }\r\n}\r\nexport const getFollowedThunk = (id) => async (dispatch) => {\r\n    const data = await (usersAPI.getFollow(id))\r\n    dispatch(setFollowUnfollow(data))\r\n\r\n}\r\nexport const followUnfollow = (isFollow, id) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    const data =\r\n        isFollow\r\n            ? await usersAPI.postFollow(id)\r\n            : await usersAPI.deleteFollow(id)\r\n    if (data.resultCode === 0) {\r\n        dispatch(setFollowUnfollow(isFollow))\r\n        dispatch(toggleIsFetching(false))\r\n    }\r\n\r\n\r\n}\r\nexport default profileReducer"]},"metadata":{},"sourceType":"module"}