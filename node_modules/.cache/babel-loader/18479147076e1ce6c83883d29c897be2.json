{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React,{useState,useEffect,useRef}from'react';import styles from'./profileStatus.module.css';import{EmojiPickerStatus}from'../../../common/EmojiPicker/EmojiPicker';var ProfileStatusWithHooks=function ProfileStatusWithHooks(_ref){var updateStatus=_ref.updateStatus,isMyPage=_ref.isMyPage,props=_objectWithoutProperties(_ref,[\"updateStatus\",\"isMyPage\"]);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editMode=_useState2[0],setEditMode=_useState2[1];var _useState3=useState(props.status),_useState4=_slicedToArray(_useState3,2),status=_useState4[0],setStatus=_useState4[1];var nodeStatus=useRef();useEffect(function(){var handlerClick=function handlerClick(e){if(nodeStatus.current&&e.target!==nodeStatus.current&&!nodeStatus.current.contains(e.target)){document.removeEventListener('click',handlerClick);setEditMode(false);setStatus(props.status);}};if(nodeStatus.current){document.addEventListener('click',handlerClick);}else{document.removeEventListener('click',handlerClick);}return function(){document.removeEventListener('click',handlerClick);};},[editMode,props.status]);useEffect(function(){setStatus(props.status);},[props.status]);var outEditMode=function outEditMode(e){updateStatus(status);setEditMode(false);};return React.createElement(\"div\",{className:styles.statusWrap},isMyPage?React.createElement(\"div\",{className:styles.statusContainer},React.createElement(\"div\",null,React.createElement(\"span\",{onClick:function onClick(){setEditMode(true);},className:styles.status},props.status&&(props.status.length>40?props.status.slice(0,40)+'...':props.status)||'set a status message')),editMode&&React.createElement(\"div\",{className:styles.changeStatusContainer,ref:nodeStatus},React.createElement(\"div\",null,React.createElement(\"input\",{className:styles.inputStatus,autoFocus:true,onChange:function onChange(e){setStatus(e.currentTarget.value);},value:status})),React.createElement(EmojiPickerStatus,{status:status,setStatus:setStatus,styles:styles}),React.createElement(\"button\",{className:styles.saveButton,onClick:function onClick(){outEditMode();}},\"Save\"))):React.createElement(\"div\",null,props.status?props.status.length>100?props.status.slice(0,100):props.status:null));};export default ProfileStatusWithHooks;","map":{"version":3,"sources":["C:/Users/WOW/Documents/GitHub/react/react-test/src/components/Profile/ProfileInfo/ProfileDescription/ProfileStatusWithHooks.jsx"],"names":["React","useState","useEffect","useRef","styles","EmojiPickerStatus","ProfileStatusWithHooks","updateStatus","isMyPage","props","editMode","setEditMode","status","setStatus","nodeStatus","handlerClick","e","current","target","contains","document","removeEventListener","addEventListener","outEditMode","statusWrap","statusContainer","length","slice","changeStatusContainer","inputStatus","currentTarget","value","saveButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\n\r\nimport styles from './profileStatus.module.css'\r\nimport { EmojiPickerStatus } from '../../../common/EmojiPicker/EmojiPicker'\r\n\r\nconst ProfileStatusWithHooks = ({ updateStatus, isMyPage, ...props }) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    const nodeStatus = useRef()\r\n\r\n\r\n    useEffect(() => {\r\n        const handlerClick = (e) => {\r\n\r\n            if (nodeStatus.current && e.target !== nodeStatus.current && !(nodeStatus.current.contains(e.target))) {\r\n                document.removeEventListener('click', handlerClick)\r\n                setEditMode(false)\r\n                setStatus(props.status)\r\n            }\r\n        }\r\n\r\n        if (nodeStatus.current) {\r\n            document.addEventListener('click', handlerClick)\r\n        }\r\n        else {\r\n            document.removeEventListener('click', handlerClick)\r\n        }\r\n        return () => {\r\n            document.removeEventListener('click', handlerClick)\r\n\r\n        }\r\n    }, [editMode, props.status])\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const outEditMode = (e) => {\r\n        updateStatus(status)\r\n        setEditMode(false)\r\n    }\r\n\r\n\r\n\r\n    return <div className={styles.statusWrap}>\r\n        {isMyPage\r\n            ? <div className={styles.statusContainer} >\r\n                <div>\r\n                    <span onClick={() => { setEditMode(true) }} className={styles.status}>{(props.status && (props.status.length > 40 ? props.status.slice(0, 40) + '...' : props.status)) || 'set a status message'}</span>\r\n                </div>\r\n                {editMode &&\r\n                    <div className={styles.changeStatusContainer} ref={nodeStatus}>\r\n                        <div ><input className={styles.inputStatus} autoFocus={true} onChange={(e) => { setStatus(e.currentTarget.value) }} value={status} /></div>\r\n                        <EmojiPickerStatus status={status} setStatus={setStatus} styles={styles} />\r\n                        <button className={styles.saveButton} onClick={() => { outEditMode() }}>Save</button>\r\n                    </div>}\r\n            </div>\r\n            : <div >\r\n                {\r\n                    props.status\r\n                        ? props.status.length > 100 ? props.status.slice(0, 100) : props.status\r\n                        : null\r\n                }\r\n            </div>\r\n        }\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks"]},"metadata":{},"sourceType":"module"}