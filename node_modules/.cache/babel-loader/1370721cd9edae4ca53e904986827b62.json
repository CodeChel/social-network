{"ast":null,"code":"export const sendMessageActionCreater = () => ({\n  type: 'SEND-MESSAGE'\n});\nexport const updateTextActionCreater = text => ({\n  type: 'UPDATE-TEXT-MESSAGE',\n  newText: text\n});\nlet store = {\n  _state: {\n    Messages: {\n      dialogItemsData: [{\n        name: 'Henry Dinn',\n        id: 1\n      }, {\n        name: 'Michael Ross',\n        id: 2\n      }, {\n        name: 'Dick Irvin',\n        id: 3\n      }, {\n        name: 'Dafna Grass',\n        id: 4\n      }],\n      messagesData: [{\n        message: 'Hey,how are you?',\n        id: 1\n      }, {\n        message: 'Great! How are you?',\n        id: 2,\n        right: true\n      }, {\n        message: 'Im fine! Go work!',\n        id: 3\n      }, {\n        message: 'Lets go!!!',\n        id: 4,\n        right: true\n      }],\n      currentText: ''\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  callSubscriber() {\n    console.log('state changed');\n  },\n\n  subscribe(observer) {\n    this.callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    if (action.type === 'SEND-MESSAGE') {\n      let newMessage = {\n        id: 5,\n        message: this._state.Messages.currentText,\n        right: true\n      };\n\n      this._state.Messages.messagesData.push(newMessage);\n\n      this._state.Messages.currentText = '';\n      this.callSubscriber(this._state);\n      debugger;\n    } else if (action.type === 'UPDATE-TEXT-MESSAGE') {\n      this._state.Messages.currentText = action.newText;\n      this.callSubscriber(this._state);\n    }\n  }\n\n};\nexport default store;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\redux\\state.js"],"names":["sendMessageActionCreater","type","updateTextActionCreater","text","newText","store","_state","Messages","dialogItemsData","name","id","messagesData","message","right","currentText","getState","callSubscriber","console","log","subscribe","observer","dispatch","action","newMessage","push"],"mappings":"AAAA,OAAO,MAAMA,wBAAwB,GAAG,OAAO;AAACC,EAAAA,IAAI,EAAE;AAAP,CAAP,CAAjC;AACP,OAAO,MAAMC,uBAAuB,GAAIC,IAAD,KAAW;AAACF,EAAAA,IAAI,EAAE,qBAAP;AAA8BG,EAAAA,OAAO,EAAED;AAAvC,CAAX,CAAhC;AAEP,IAAIE,KAAK,GAAG;AACRC,EAAAA,MAAM,EAAE;AACJC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,eAAe,EAAG,CACd;AAACC,QAAAA,IAAI,EAAE,YAAP;AAAsBC,QAAAA,EAAE,EAAE;AAA1B,OADc,EAEd;AAACD,QAAAA,IAAI,EAAE,cAAP;AAAwBC,QAAAA,EAAE,EAAE;AAA5B,OAFc,EAGd;AAACD,QAAAA,IAAI,EAAE,YAAP;AAAsBC,QAAAA,EAAE,EAAE;AAA1B,OAHc,EAId;AAACD,QAAAA,IAAI,EAAE,aAAP;AAAuBC,QAAAA,EAAE,EAAE;AAA3B,OAJc,CADZ;AAONC,MAAAA,YAAY,EAAE,CACV;AAACC,QAAAA,OAAO,EAAE,kBAAV;AAA8BF,QAAAA,EAAE,EAAE;AAAlC,OADU,EAEV;AAACE,QAAAA,OAAO,EAAE,qBAAV;AAAiCF,QAAAA,EAAE,EAAE,CAArC;AAAwCG,QAAAA,KAAK,EAAE;AAA/C,OAFU,EAGV;AAACD,QAAAA,OAAO,EAAE,mBAAV;AAA+BF,QAAAA,EAAE,EAAE;AAAnC,OAHU,EAIV;AAACE,QAAAA,OAAO,EAAE,YAAV;AAAwBF,QAAAA,EAAE,EAAE,CAA5B;AAA+BG,QAAAA,KAAK,EAAE;AAAtC,OAJU,CAPR;AAaNC,MAAAA,WAAW,EAAE;AAbP;AADN,GADA;;AAkBRC,EAAAA,QAAQ,GAAE;AACN,WAAO,KAAKT,MAAZ;AACH,GApBO;;AAqBRU,EAAAA,cAAc,GAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,GAvBO;;AAyBRC,EAAAA,SAAS,CAAEC,QAAF,EAAY;AACjB,SAAKJ,cAAL,GAAuBI,QAAvB;AACH,GA3BO;;AA6BRC,EAAAA,QAAQ,CAACC,MAAD,EAAQ;AACZ,QAAGA,MAAM,CAACrB,IAAP,KAAgB,cAAnB,EAAkC;AAC9B,UAAIsB,UAAU,GAAG;AACbb,QAAAA,EAAE,EAAE,CADS;AAEbE,QAAAA,OAAO,EAAE,KAAKN,MAAL,CAAYC,QAAZ,CAAqBO,WAFjB;AAGbD,QAAAA,KAAK,EAAE;AAHM,OAAjB;;AAKA,WAAKP,MAAL,CAAYC,QAAZ,CAAqBI,YAArB,CAAkCa,IAAlC,CAAuCD,UAAvC;;AACA,WAAKjB,MAAL,CAAYC,QAAZ,CAAqBO,WAArB,GAAmC,EAAnC;AACA,WAAKE,cAAL,CAAoB,KAAKV,MAAzB;AACA;AACH,KAVD,MAWK,IAAGgB,MAAM,CAACrB,IAAP,KAAgB,qBAAnB,EAAyC;AAC1C,WAAKK,MAAL,CAAYC,QAAZ,CAAqBO,WAArB,GAAmCQ,MAAM,CAAClB,OAA1C;AACA,WAAKY,cAAL,CAAoB,KAAKV,MAAzB;AACH;AAEJ;;AA9CO,CAAZ;AAmDA,eAAeD,KAAf","sourcesContent":["export const sendMessageActionCreater = () => ({type: 'SEND-MESSAGE'}); \r\nexport const updateTextActionCreater = (text) => ({type: 'UPDATE-TEXT-MESSAGE', newText: text}); \r\n\r\nlet store = {\r\n    _state: {\r\n        Messages: {\r\n            dialogItemsData : [\r\n                {name: 'Henry Dinn' , id: 1 },\r\n                {name: 'Michael Ross' , id: 2 },\r\n                {name: 'Dick Irvin' , id: 3 },\r\n                {name: 'Dafna Grass' , id: 4 }\r\n            ],\r\n            messagesData: [\r\n                {message: 'Hey,how are you?', id: 1 },\r\n                {message: 'Great! How are you?', id: 2, right: true},\r\n                {message: 'Im fine! Go work!', id: 3},\r\n                {message: 'Lets go!!!', id: 4, right: true},\r\n            ],\r\n            currentText: ''\r\n        }\r\n    },\r\n    getState(){\r\n        return this._state;\r\n    },\r\n    callSubscriber () {\r\n        console.log('state changed');\r\n    },\r\n    \r\n    subscribe (observer) {\r\n        this.callSubscriber  = observer;\r\n    },\r\n  \r\n    dispatch(action){\r\n        if(action.type === 'SEND-MESSAGE'){\r\n            let newMessage = {\r\n                id: 5,\r\n                message: this._state.Messages.currentText,\r\n                right: true\r\n            }\r\n            this._state.Messages.messagesData.push(newMessage);\r\n            this._state.Messages.currentText = '';\r\n            this.callSubscriber(this._state);\r\n            debugger;\r\n        }\r\n        else if(action.type === 'UPDATE-TEXT-MESSAGE'){\r\n            this._state.Messages.currentText = action.newText;\r\n            this.callSubscriber(this._state);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}