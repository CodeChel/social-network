{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Friends\\\\Friends-container.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { followAC, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching } from '../../redux/friends-reducer';\nimport axios from 'axios';\nimport FriendsFunc from './Friends';\nimport Preloader from '../common/Preloader/Preloader';\n\nclass FirendsContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.toggleIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page=\".concat(pageNumber, \"&count=\").concat(this.props.pageSize)).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page=\".concat(this.props.currentPage, \"&count=\").concat(this.props.pageSize)).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }) : null, React.createElement(FriendsFunc, {\n      totalUsersCout: this.props.totalUsersCout,\n      pageSize: this.props.pageSize,\n      onPageChanged: this.onPageChanged,\n      currentPage: this.props.currentPage,\n      users: this.props.users,\n      unfollow: this.props.unfollow,\n      follow: this.props.follow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.FriendsPage.users,\n    pageSize: state.FriendsPage.pageSize,\n    totalUsersCout: state.FriendsPage.totalUsersCout,\n    currentPage: state.FriendsPage.currentPage,\n    isFetching: state.FriendsPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => dispatch(followAC(userId)),\n    unfollow: userId => dispatch(unfollowAC(userId)),\n    setUsers: users => dispatch(setUsersAC(users)),\n    setCurrentPage: currentPage => dispatch(setCurrentPageAC(currentPage)),\n    setTotalUsersCount: count => dispatch(setTotalUsersCountAC(count)),\n    toggleIsFetching: isFetching => dispatch(toggleIsFetchingAC(isFetching))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FirendsContainer);","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Friends\\Friends-container.jsx"],"names":["React","connect","followAC","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","axios","FriendsFunc","Preloader","FirendsContainer","Component","onPageChanged","pageNumber","props","get","pageSize","then","response","data","items","componentDidMount","currentPage","totalCount","render","isFetching","totalUsersCout","users","follow","mapStateToProps","state","FriendsPage","mapDispatchToProps","dispatch","userId","unfollowAC","setUsersAC","setCurrentPageAC","count","setTotalUsersCountAC","toggleIsFetchingAC"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { followAC, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching } from '../../redux/friends-reducer';\r\nimport axios from 'axios';\r\nimport FriendsFunc from './Friends';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\n\r\n\r\n\r\n\r\nclass FirendsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.toggleIsFetching(false);\r\n            this.props.setUsers(response.data.items);\r\n            this.props.setTotalUsersCount(response.data.totalCount);\r\n        })\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.toggleIsFetching(true);\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.toggleIsFetching(false);\r\n            this.props.setUsers(response.data.items)\r\n        })\r\n    }\r\n    render() {\r\n        return <>\r\n        {this.props.isFetching ? <Preloader/> : null}\r\n\r\n         <FriendsFunc totalUsersCout={this.props.totalUsersCout}\r\n            pageSize={this.props.pageSize}\r\n            onPageChanged={this.onPageChanged}\r\n            currentPage={this.props.currentPage}\r\n            users={this.props.users}\r\n            unfollow={this.props.unfollow}\r\n            follow={this.props.follow}\r\n        />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.FriendsPage.users,\r\n        pageSize: state.FriendsPage.pageSize,\r\n        totalUsersCout: state.FriendsPage.totalUsersCout,\r\n        currentPage: state.FriendsPage.currentPage,\r\n        isFetching: state.FriendsPage.isFetching\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => dispatch(followAC(userId)),\r\n        unfollow: (userId) => dispatch(unfollowAC(userId)),\r\n        setUsers: (users) => dispatch(setUsersAC(users)),\r\n        setCurrentPage: (currentPage) => dispatch(setCurrentPageAC(currentPage)),\r\n        setTotalUsersCount: (count) => dispatch(setTotalUsersCountAC(count)),\r\n        toggleIsFetching: (isFetching) => dispatch(toggleIsFetchingAC(isFetching))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FirendsContainer);"]},"metadata":{},"sourceType":"module"}