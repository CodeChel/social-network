{"ast":null,"code":"import * as axios from 'axios';\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\n    \"API-KEY\": \"d9c4ba29-f4a9-4d2d-8ba9-f90ead9fae9c\"\n  }\n});\nexport const usersAPI = {\n  getUsers(currentPage, pageSize = 10) {\n    return instance.get(\"users?page=\".concat(currentPage, \"&count=\").concat(pageSize)).then(response => response.data);\n  },\n\n  postFollow(id) {\n    return instance.post(\"follow/\".concat(id), {}).then(response => response.data);\n  },\n\n  deleteFollow(id) {\n    return instance.delete(\"follow/\".concat(id), {}).then(response => response.data);\n  },\n\n  getFollow(id) {\n    return instance.get(\"follow/\".concat(id), {}).then(response => response.data);\n  }\n\n};\nexport const authAPI = {\n  getAuth() {\n    return instance.get('auth/me').then(response => response.data);\n  },\n\n  logIn(dataForm) {\n    return instance.post('auth/login', {\n      email: dataForm.login,\n      password: dataForm.password,\n      rememberMe: dataForm.rememberMe,\n      captcha: dataForm.captcha\n    }).then(response => response.data);\n  },\n\n  logOut() {\n    return instance.delete('auth/login').then(response => response.data);\n  }\n\n};\nexport const securityAPI = {\n  getCaptcha() {\n    return instance.get('security/get-captcha-url').then(response => response.data);\n  }\n\n};\nexport const profileAPI = {\n  getProfile(id) {\n    return instance.get(\"profile/\".concat(id)).then(response => {\n      debugger;\n    });\n  },\n\n  getUserStatus(id) {\n    return instance.get(\"profile/status/\".concat(id)).then(response => response.data);\n  },\n\n  updateUserStatus(status) {\n    return instance.put('profile/status', {\n      status: status\n    }).then(response => response.data);\n  },\n\n  updatePhoto(photo) {\n    const formData = new FormData();\n    formData.append(\"image\", photo);\n    return instance.put('profile/photo', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => response.data);\n  },\n\n  saveProfileData(profile) {\n    return instance.put(\"profile\", profile).then(response => response.data);\n  }\n\n};","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\API\\api.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","postFollow","id","post","deleteFollow","delete","getFollow","authAPI","getAuth","logIn","dataForm","email","login","password","rememberMe","captcha","logOut","securityAPI","getCaptcha","profileAPI","getProfile","getUserStatus","updateUserStatus","status","put","updatePhoto","photo","formData","FormData","append","saveProfileData","profile"],"mappings":"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","sourcesContent":["import * as axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"d9c4ba29-f4a9-4d2d-8ba9-f90ead9fae9c\"\r\n    }\r\n})\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    postFollow(id) {\r\n        return instance.post(`follow/${id}`, {}).then(response => response.data)\r\n    },\r\n    deleteFollow(id) {\r\n        return instance.delete(`follow/${id}`, {}).then(response => response.data)\r\n    },\r\n    getFollow(id){\r\n        return instance.get(`follow/${id}`, {}).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get('auth/me').then(response => response.data)\r\n    },\r\n    logIn(dataForm) {\r\n        return instance.post('auth/login', { email: dataForm.login, password: dataForm.password, rememberMe: dataForm.rememberMe, captcha: dataForm.captcha })\r\n            .then(response => response.data)\r\n    },\r\n    logOut() {\r\n        return instance.delete('auth/login').then(response => response.data)\r\n    },\r\n\r\n}\r\nexport const securityAPI = {\r\n    getCaptcha() {\r\n        return instance.get('security/get-captcha-url').then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(id) {\r\n        return instance.get(`profile/${id}`).then(response => {debugger} )\r\n    },\r\n    getUserStatus(id) {\r\n        return instance.get(`profile/status/${id}`).then(response => response.data)\r\n    },\r\n    updateUserStatus(status) {\r\n        return instance.put('profile/status', { status: status }).then((response) => response.data);\r\n    },\r\n    updatePhoto(photo) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photo);\r\n\r\n        return instance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then((response) => response.data);\r\n    },\r\n    saveProfileData(profile) {\r\n        return instance.put(`profile`, profile).then(response => response.data)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}