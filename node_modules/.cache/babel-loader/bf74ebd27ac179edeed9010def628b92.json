{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { authAPI } from '../API/api';\nconst SET_USER = 'SET_USER';\nconst RESET_USER = 'RESET_USER';\nlet initialState = {\n  id: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER:\n      return _objectSpread({}, state, action.data, {\n        isAuth: true\n      });\n\n    case RESET_USER:\n      return _objectSpread({}, initialState);\n\n    default:\n      return state;\n  }\n};\n\nexport const setUserAuth = data => ({\n  type: SET_USER,\n  data\n});\nexport const deleteUserAuth = data => ({\n  type: RESET_USER,\n  data\n});\nexport const getAuthThunk = () => dispatch => {\n  authAPI.getAuth().then(data => {\n    if (data.resultCode === 0) {\n      dispatch(setUserAuth(data.data));\n    }\n  });\n};\nexport const logInThunk = dataForm => dispatch => {\n  authAPI.logIn(dataForm).then(data => {\n    if (data.resultCode === 0) {\n      dispatch(getAuthThunk(data.data));\n    }\n  });\n};\nexport const logOutThunk = dataForm => dispatch => {\n  authAPI.logOut().then(data => {\n    if (data.resultCode === 0) {\n      dispatch();\n    }\n  });\n};\nexport default authReducer;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\redux\\auth-reducer.js"],"names":["authAPI","SET_USER","RESET_USER","initialState","id","email","login","isAuth","authReducer","state","action","type","data","setUserAuth","deleteUserAuth","getAuthThunk","dispatch","getAuth","then","resultCode","logInThunk","dataForm","logIn","logOutThunk","logOut"],"mappings":";AAAA,SAAQA,OAAR,QAAsB,YAAtB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,UAAU,GAAG,YAAnB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,EAAE,EAAE,IADW;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAnB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAElD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,QAAL;AACI,+BAEOQ,KAFP,EAGOC,MAAM,CAACE,IAHd;AAIIL,QAAAA,MAAM,EAAE;AAJZ;;AAMJ,SAAKL,UAAL;AACI,+BACOC,YADP;;AAGJ;AAAS,aAAOM,KAAP;AAZb;AAgBH,CAlBD;;AAoBA,OAAO,MAAMI,WAAW,GAAID,IAAD,KAAW;AAAED,EAAAA,IAAI,EAAEV,QAAR;AAAkBW,EAAAA;AAAlB,CAAX,CAApB;AACP,OAAO,MAAME,cAAc,GAAIF,IAAD,KAAW;AAAED,EAAAA,IAAI,EAAET,UAAR;AAAoBU,EAAAA;AAApB,CAAX,CAAvB;AAEP,OAAO,MAAMG,YAAY,GAAG,MAAOC,QAAD,IAAc;AAC5ChB,EAAAA,OAAO,CAACiB,OAAR,GAAkBC,IAAlB,CAAuBN,IAAI,IAAI;AAC3B,QAAIA,IAAI,CAACO,UAAL,KAAoB,CAAxB,EAA2B;AACvBH,MAAAA,QAAQ,CAACH,WAAW,CAACD,IAAI,CAACA,IAAN,CAAZ,CAAR;AACH;AACJ,GAJD;AAKH,CANM;AAOP,OAAO,MAAMQ,UAAU,GAAIC,QAAD,IAAeL,QAAD,IAAc;AAClDhB,EAAAA,OAAO,CAACsB,KAAR,CAAcD,QAAd,EAAwBH,IAAxB,CAA6BN,IAAI,IAAI;AACjC,QAAGA,IAAI,CAACO,UAAL,KAAoB,CAAvB,EAAyB;AACrBH,MAAAA,QAAQ,CAACD,YAAY,CAACH,IAAI,CAACA,IAAN,CAAb,CAAR;AACH;AACJ,GAJD;AAKH,CANM;AAOP,OAAO,MAAMW,WAAW,GAAIF,QAAD,IAAeL,QAAD,IAAc;AACnDhB,EAAAA,OAAO,CAACwB,MAAR,GAAiBN,IAAjB,CAAsBN,IAAI,IAAI;AAC1B,QAAGA,IAAI,CAACO,UAAL,KAAoB,CAAvB,EAAyB;AACrBH,MAAAA,QAAQ;AACX;AACJ,GAJD;AAKH,CANM;AAQP,eAAeR,WAAf","sourcesContent":["import {authAPI} from '../API/api'\r\n\r\nconst SET_USER = 'SET_USER';\r\nconst RESET_USER = 'RESET_USER';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER:\r\n            return {\r\n                \r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        case RESET_USER:\r\n            return{\r\n                ...initialState\r\n            }\r\n        default: return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const setUserAuth = (data) => ({ type: SET_USER, data });\r\nexport const deleteUserAuth = (data) => ({ type: RESET_USER, data });\r\n\r\nexport const getAuthThunk = () => (dispatch) => {\r\n    authAPI.getAuth().then(data => {\r\n        if (data.resultCode === 0) {\r\n            dispatch(setUserAuth(data.data));\r\n        }\r\n    })\r\n}\r\nexport const logInThunk = (dataForm) => (dispatch) => {\r\n    authAPI.logIn(dataForm).then(data => {\r\n        if(data.resultCode === 0){\r\n            dispatch(getAuthThunk(data.data));\r\n        }\r\n    })\r\n}\r\nexport const logOutThunk = (dataForm) => (dispatch) => {\r\n    authAPI.logOut().then(data => {\r\n        if(data.resultCode === 0){\r\n            dispatch();\r\n        }\r\n    })\r\n}\r\n\r\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}