{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Messages-container\\\\Messages\\\\Messages.jsx\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport styles from './Messages.module.css';\nimport DialogWithUser from '../DialogsList/DialogWithUser';\nimport Dialog from './Dialog';\n\nconst Messages = (_ref) => {\n  let dialogItemsData = _ref.dialogItemsData,\n      currentDialogId = _ref.currentDialogId,\n      props = _objectWithoutProperties(_ref, [\"dialogItemsData\", \"currentDialogId\"]);\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchWord = _useState2[0],\n        setSearchWord = _useState2[1];\n\n  const handleSearch = e => {\n    console.log(e.currentTarget.value);\n  };\n\n  let dialogItems = dialogItemsData.map((item, index) => React.createElement(DialogWithUser, {\n    currentDialogId: currentDialogId,\n    avatar: item.avatar,\n    lastMessage: item.messages[item.messages.length - 1].message,\n    setDialogID: props.setDialogID,\n    key: index + 1,\n    name: item.name,\n    id: item.userId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n  const dialog = useRef();\n  const currentDialog = dialogItemsData[dialogItemsData.findIndex(i => {\n    return i.userId === currentDialogId;\n  })];\n  useEffect(() => {}, [dialog]);\n  return React.createElement(\"div\", {\n    className: styles.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, currentDialogId === 0 ? React.createElement(\"div\", {\n    className: styles.emptyMessages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.iconMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.selectDialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Please select a dialog\")) : React.createElement(Dialog, {\n    ref: dialog,\n    userId: currentDialog.userId,\n    sendMessage: props.sendMessage,\n    name: currentDialog.name,\n    avatar: currentDialog.avatar,\n    messages: currentDialog.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.dialogItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.dialogSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: e => handleSearch(e),\n    type: \"text\",\n    name: \"\",\n    id: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.dialogsList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, dialogItems)));\n};\n\nexport default Messages;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Messages-container\\Messages\\Messages.jsx"],"names":["React","useEffect","useRef","useState","styles","DialogWithUser","Dialog","Messages","dialogItemsData","currentDialogId","props","searchWord","setSearchWord","handleSearch","e","console","log","currentTarget","value","dialogItems","map","item","index","avatar","messages","length","message","setDialogID","name","userId","dialog","currentDialog","findIndex","i","emptyMessages","iconMessage","selectDialog","sendMessage","dialogSearch","dialogsList"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\r\n\r\nimport styles from './Messages.module.css'\r\nimport DialogWithUser from '../DialogsList/DialogWithUser'\r\nimport Dialog from './Dialog'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Messages = ({dialogItemsData, currentDialogId, ...props}) => {\r\n    const [searchWord, setSearchWord] = useState(null);\r\n    const handleSearch = (e)=>{\r\n        console.log(e.currentTarget.value);\r\n    }\r\n\r\n    let dialogItems = dialogItemsData.map((item, index) => <DialogWithUser currentDialogId={currentDialogId} avatar={item.avatar}\r\n    lastMessage={ item.messages[item.messages.length-1].message} setDialogID={props.setDialogID}   key={index+1} name={item.name} id={item.userId} />)\r\n    const dialog = useRef();\r\n    const currentDialog = dialogItemsData[dialogItemsData.findIndex((i)=>{return i.userId === currentDialogId})];\r\n    useEffect(()=>{\r\n       \r\n    },[dialog])\r\n\r\n    return <div className={styles.messages}>\r\n        {currentDialogId === 0\r\n            ? <div className={styles.emptyMessages}>\r\n                <div className={styles.iconMessage}></div>\r\n                <div className={styles.selectDialog}>\r\n                    Please select a dialog\r\n                </div>\r\n             </div>\r\n            : <Dialog ref={dialog} userId={currentDialog.userId} sendMessage={props.sendMessage} name={currentDialog.name} \r\n            avatar={currentDialog.avatar}  messages={currentDialog.messages} />}\r\n\r\n        <div className={styles.dialogItems}>\r\n            <div className={styles.dialogSearch}><input  onChange={e=>handleSearch(e)} type=\"text\" name=\"\" id=\"\"/></div>\r\n            <div className={styles.dialogsList}>\r\n                {dialogItems}\r\n\r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n}\r\n\r\n\r\nexport default Messages;"]},"metadata":{},"sourceType":"module"}