{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Messages-container\\\\Messages\\\\Dialog.jsx\";\nimport React, { useEffect, useRef } from 'react';\nimport MessageItem from '../../MessageItem/MessageItem';\nimport styles from './Messages.module.css';\nimport { reduxForm, Field } from 'redux-form';\nimport { createField } from '../../common/FormControls/FormControls';\nimport { required, maxLengthCreator } from '../../../utils/validators/validator';\nimport ScrollbarHOC from '../../common/HOCScrollBar/HOCScrollbarCusctom';\n\nconst addMessageForm = props => {\n  const onKeyHandler = e => {\n    if (e.keyCode == 13 && e.shiftKey == false) {\n      if (e.target.name == 'message') {\n        e.preventDefault();\n        props.handleSubmit();\n      }\n    }\n  };\n\n  return React.createElement(\"form\", {\n    onKeyDown: onKeyHandler,\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, createField(null, 'message', [required], 'textarea', null, null));\n};\n\nconst AddMessageFormRedux = reduxForm({\n  form: 'addMessageForm'\n})(addMessageForm);\n\nconst Dialog = props => {\n  let messageItems = props.messages.map((item, index) => React.createElement(MessageItem, {\n    key: index,\n    right: item.right,\n    message: item.message,\n    id: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n  const scrollBar = useRef();\n  useEffect(() => {\n    scrollBar.current.scrollToBottom();\n  }, [messageItems]);\n  return React.createElement(\"div\", {\n    className: styles.dialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.dialogHead,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(ScrollbarHOC, {\n    children: React.createElement(\"div\", {\n      className: styles.messagesFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, messageItems),\n    autoHide: true,\n    ref: scrollBar,\n    removeTrackYWhenNotUsed: true,\n    style: {\n      width: \"100%\",\n      height: \"75%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.formContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(AddMessageFormRedux, {\n    onSubmit: props.sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })));\n};\n\nexport default Dialog;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Messages-container\\Messages\\Dialog.jsx"],"names":["React","useEffect","useRef","MessageItem","styles","reduxForm","Field","createField","required","maxLengthCreator","ScrollbarHOC","addMessageForm","props","onKeyHandler","e","keyCode","shiftKey","target","name","preventDefault","handleSubmit","AddMessageFormRedux","form","Dialog","messageItems","messages","map","item","index","right","message","id","scrollBar","current","scrollToBottom","dialog","dialogHead","messagesFill","width","height","formContainer","sendMessage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,SAASC,WAAT,QAA4B,wCAA5B;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,qCAA3C;AACA,OAAOC,YAAP,MAAyB,+CAAzB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxB,QAAIA,CAAC,CAACC,OAAF,IAAa,EAAb,IAAmBD,CAAC,CAACE,QAAF,IAAc,KAArC,EAA4C;AACxC,UAAIF,CAAC,CAACG,MAAF,CAASC,IAAT,IAAiB,SAArB,EAAgC;AAC5BJ,QAAAA,CAAC,CAACK,cAAF;AACAP,QAAAA,KAAK,CAACQ,YAAN;AACH;AACJ;AACJ,GAPD;;AAQA,SAAO;AAAM,IAAA,SAAS,EAAEP,YAAjB;AAA+B,IAAA,QAAQ,EAAED,KAAK,CAACQ,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFb,WAAW,CAAC,IAAD,EAAO,SAAP,EAAkB,CAACC,QAAD,CAAlB,EAA8B,UAA9B,EAA0C,IAA1C,EAAgD,IAAhD,CADT,CAAP;AAKH,CAdD;;AAeA,MAAMa,mBAAmB,GAAGhB,SAAS,CAAC;AAAEiB,EAAAA,IAAI,EAAE;AAAR,CAAD,CAAT,CAAsCX,cAAtC,CAA5B;;AAEA,MAAMY,MAAM,GAAIX,KAAD,IAAW;AACtB,MAAIY,YAAY,GAAGZ,KAAK,CAACa,QAAN,CAAeC,GAAf,CAAmB,CAACC,IAAD,EAAOC,KAAP,KAAiB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,KAAlB;AAAyB,IAAA,KAAK,EAAED,IAAI,CAACE,KAArC;AAA4C,IAAA,OAAO,EAAEF,IAAI,CAACG,OAA1D;AAAmE,IAAA,EAAE,EAAEH,IAAI,CAACI,EAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApC,CAAnB;AAEA,QAAMC,SAAS,GAAG9B,MAAM,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ+B,IAAAA,SAAS,CAACC,OAAV,CAAkBC,cAAlB;AACH,GAFQ,EAEN,CAACV,YAAD,CAFM,CAAT;AAGA,SAAO;AAAK,IAAA,SAAS,EAAEpB,MAAM,CAAC+B,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAK,IAAA,SAAS,EAAE/B,MAAM,CAACgC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,EAEH,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAE;AAAK,MAAA,SAAS,EAAEhC,MAAM,CAACiC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCb,YAAtC,CAAxB;AAAmF,IAAA,QAAQ,MAA3F;AAA4F,IAAA,GAAG,EAAEQ,SAAjG;AAA4G,IAAA,uBAAuB,EAAE,IAArI;AAA2I,IAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAAlJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,EAIH;AAAK,IAAA,SAAS,EAAEnC,MAAM,CAACoC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,mBAAD;AAAqB,IAAA,QAAQ,EAAE5B,KAAK,CAAC6B,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJG,CAAP;AAQH,CAhBD;;AAkBA,eAAelB,MAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\r\n\r\nimport MessageItem from '../../MessageItem/MessageItem'\r\nimport styles from './Messages.module.css'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { createField } from '../../common/FormControls/FormControls';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validator';\r\nimport ScrollbarHOC from '../../common/HOCScrollBar/HOCScrollbarCusctom';\r\n\r\nconst addMessageForm = (props) => {\r\n    const onKeyHandler = (e) => {\r\n        if (e.keyCode == 13 && e.shiftKey == false) {\r\n            if (e.target.name == 'message') {\r\n                e.preventDefault();\r\n                props.handleSubmit();\r\n            }\r\n        }\r\n    }\r\n    return <form onKeyDown={onKeyHandler} onSubmit={props.handleSubmit}>\r\n        {createField(null, 'message', [required], 'textarea', null, null)}\r\n\r\n        {/* <button className={styles.buttonForm} type=\"submit\">Send</button> */}\r\n    </form>\r\n}\r\nconst AddMessageFormRedux = reduxForm({ form: 'addMessageForm' })(addMessageForm);\r\n\r\nconst Dialog = (props) => {\r\n    let messageItems = props.messages.map((item, index) => <MessageItem key={index} right={item.right} message={item.message} id={item.id} />)\r\n\r\n    const scrollBar = useRef()\r\n\r\n    useEffect(() => {\r\n        scrollBar.current.scrollToBottom();\r\n    }, [messageItems])\r\n    return <div className={styles.dialog}>\r\n        <div className={styles.dialogHead}></div>\r\n        <ScrollbarHOC children={<div className={styles.messagesFill}>{messageItems}</div>} autoHide ref={scrollBar} removeTrackYWhenNotUsed={true} style={{ width: \"100%\", height: \"75%\" }} />\r\n\r\n        <div className={styles.formContainer}>\r\n            <AddMessageFormRedux onSubmit={props.sendMessage} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Dialog;"]},"metadata":{},"sourceType":"module"}