{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { usersAPI } from '../API/api';\nimport { async } from 'q';\nconst FOLLOW = 'friends-reducer/FOLLOW';\nconst UNFOLLOW = 'friends-reducer/UNFOLLOW';\nconst SET_USERS = 'friends-reducer/SET-USERS';\nconst SET_CURRENT_PAGE = 'friends-reducer/SET_CURRENT_PAGE';\nconst SET_TOTAL_COUNT = 'friends-reducer/SET_TOTAL_COUNT';\nconst TOGGLE_IS_FETCHING = 'friends-reducer/TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLOWING_PROGRESS = 'friends-reducer/TOGGLE_IS_FOLOWING_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCout: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n};\n\nconst friendsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return _objectSpread({}, state, {\n        users: state.users.map(u => action.id === u.id ? _objectSpread({}, u, {\n          followed: true\n        }) : u)\n      });\n\n    case UNFOLLOW:\n      return _objectSpread({}, state, {\n        users: state.users.map(u => action.id === u.id ? _objectSpread({}, u, {\n          followed: false\n        }) : u)\n      });\n\n    case SET_USERS:\n      return _objectSpread({}, state, {\n        users: action.users\n      });\n\n    case SET_CURRENT_PAGE:\n      return _objectSpread({}, state, {\n        currentPage: action.currentPage\n      });\n\n    case SET_TOTAL_COUNT:\n      return _objectSpread({}, state, {\n        totalUsersCout: action.count\n      });\n\n    case TOGGLE_IS_FETCHING:\n      return _objectSpread({}, state, {\n        isFetching: action.isFetching\n      });\n\n    case TOGGLE_IS_FOLOWING_PROGRESS:\n      return _objectSpread({}, state, {\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(userId => userId !== action.userId)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const follow = id => ({\n  type: FOLLOW,\n  id\n});\nexport const unfollow = id => ({\n  type: UNFOLLOW,\n  id\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = count => ({\n  type: SET_TOTAL_COUNT,\n  count\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLOWING_PROGRESS,\n  isFetching,\n  userId\n});\nexport const getUsersThunk = (currentPage, pageSize) => async dispatch => {\n  dispatch(toggleIsFetching(true));\n  const data = await usersAPI.getUsers(currentPage, pageSize);\n  dispatch(toggleIsFetching(false));\n  dispatch(setUsers(data.items));\n  dispatch(setTotalUsersCount(data.totalCount));\n};\nexport const changeCurrentPageThunk = (pageNumber, pageSize) => async dispatch => {\n  dispatch(setCurrentPage(pageNumber));\n  dispatch(toggleIsFetching(true));\n  const data = await usersAPI.getUsers(pageNumber, pageSize);\n  dispatch(toggleIsFetching(false));\n  ;\n  dispatch(setUsers(data.items));\n};\n\nconst followUnfollowFlow = async (dispatch, request, action, id) => {\n  dispatch(toggleFollowingProgress(true, id));\n  const data = await request(id);\n\n  if (data.resultCode === 0) {\n    dispatch(action(id));\n    dispatch(toggleFollowingProgress(false, id));\n  }\n};\n\nexport const unFollowThunk = id => async dispatch => {\n  followUnfollowFlow(usersAPI.deleteFollow.bind(usersAPI), unfollow, id); // dispatch(toggleFollowingProgress(true, id));\n  // const data = await (usersAPI.deleteFollow(id));\n  // if (data.resultCode === 0) {\n  //     dispatch(unfollow(id));\n  //     dispatch(toggleFollowingProgress(false, id));\n  // }\n};\nexport const followThunk = id => async dispatch => {\n  followUnfollowFlow(usersAPI.postFollow.bind(usersAPI), follow, id);\n  dispatch(toggleFollowingProgress(true, id));\n  const data = usersAPI.postFollow(id);\n\n  if (data.resultCode === 0) {\n    dispatch(follow(id));\n    dispatch(toggleFollowingProgress(false, id));\n  }\n};\nexport default friendsReducer;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\redux\\friends-reducer.js"],"names":["usersAPI","async","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLOWING_PROGRESS","initialState","users","pageSize","totalUsersCout","currentPage","isFetching","followingInProgress","friendsReducer","state","action","type","map","u","id","followed","count","userId","filter","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","getUsersThunk","dispatch","data","getUsers","items","totalCount","changeCurrentPageThunk","pageNumber","followUnfollowFlow","request","resultCode","unFollowThunk","deleteFollow","bind","followThunk","postFollow"],"mappings":"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","sourcesContent":["import { usersAPI } from '../API/api'\r\nimport { async } from 'q';\r\n\r\nconst FOLLOW = 'friends-reducer/FOLLOW';\r\nconst UNFOLLOW = 'friends-reducer/UNFOLLOW';\r\nconst SET_USERS = 'friends-reducer/SET-USERS';\r\nconst SET_CURRENT_PAGE = 'friends-reducer/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_COUNT = 'friends-reducer/SET_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'friends-reducer/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLOWING_PROGRESS = 'friends-reducer/TOGGLE_IS_FOLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCout: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => action.id === u.id ? { ...u, followed: true } : u)\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => action.id === u.id ? { ...u, followed: false } : u)\r\n            }\r\n        case SET_USERS:\r\n            return { ...state, users: action.users }\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n        case SET_TOTAL_COUNT:\r\n            return { ...state, totalUsersCout: action.count }\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n        case TOGGLE_IS_FOLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(userId => userId !== action.userId)\r\n\r\n            }\r\n        default: return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const follow = (id) => ({ type: FOLLOW, id });\r\nexport const unfollow = (id) => ({ type: UNFOLLOW, id });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setTotalUsersCount = (count) => ({ type: SET_TOTAL_COUNT, count });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const getUsersThunk = (currentPage, pageSize) => async (dispatch) => {\r\n\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    const data = await (usersAPI.getUsers(currentPage, pageSize));\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n}\r\nexport const changeCurrentPageThunk = (pageNumber, pageSize) => async (dispatch) => {\r\n    dispatch(setCurrentPage(pageNumber));\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    const data = await (usersAPI.getUsers(pageNumber, pageSize));\r\n    dispatch(toggleIsFetching(false));;\r\n    dispatch(setUsers(data.items));\r\n\r\n}\r\n\r\nconst followUnfollowFlow = async(dispatch, request, action, id) => {\r\n    dispatch(toggleFollowingProgress(true, id));\r\n    const data = await (request(id));\r\n    if (data.resultCode === 0) {\r\n        dispatch(action(id));\r\n        dispatch(toggleFollowingProgress(false, id));\r\n    }\r\n\r\n}\r\nexport const unFollowThunk = (id) => async (dispatch) => {\r\n    followUnfollowFlow( usersAPI.deleteFollow.bind(usersAPI), unfollow, id );\r\n    // dispatch(toggleFollowingProgress(true, id));\r\n    // const data = await (usersAPI.deleteFollow(id));\r\n    // if (data.resultCode === 0) {\r\n    //     dispatch(unfollow(id));\r\n    //     dispatch(toggleFollowingProgress(false, id));\r\n    // }\r\n\r\n}\r\nexport const followThunk = (id) => async (dispatch) => {\r\n    followUnfollowFlow( usersAPI.postFollow.bind(usersAPI), follow, id );\r\n    dispatch(toggleFollowingProgress(true, id));\r\n\r\n    const data = usersAPI.postFollow(id);\r\n    if (data.resultCode === 0) {\r\n        dispatch(follow(id));\r\n        dispatch(toggleFollowingProgress(false, id));\r\n    }\r\n\r\n}\r\nexport default friendsReducer;"]},"metadata":{},"sourceType":"module"}