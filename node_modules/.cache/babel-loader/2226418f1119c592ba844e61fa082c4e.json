{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { profileAPI } from '../API/api';\nimport { stopSubmit } from 'redux-form';\nimport { usersAPI } from '../API/api';\nexport const SEND_POST = 'profile-reducer/SEND_POST';\nexport const SET_USER_PROFILE = 'profile-reducer/SET_USER_PROFILE';\nexport const SET_USER_STATUS = 'profile-reducer/SET_USER_STATUS';\nexport const SET_PHOTO_PROFILE = 'profile-reducer/SET_PHOTO_PROFILE';\nexport const SET_EDIT_PROFILE = 'profile-reducer/SET_EDIT_PROFILE';\nexport const RESET_USER_POFILE = 'profile-reducer/RESET_USER_POFILE';\nexport const FOLLOW_UNFOLLOW_SUCCESS = 'profile-reducer/FOLLOW_UNFOLLOW_SUCCESS';\nexport const TOGGLE_IS_FETCHING = 'profile-reducer/TOGGLE_IS_FETCHING';\nexport const SEND_MESSAGE_MODE = 'profile-reducer/SEND_MESSAGE_MODE';\nexport const SET_POPPUP_AVATAR = 'profile-reducer/SET_POPPUP_AVATAR';\nexport const TOGGLE_LIKE_SUCCESS = 'profile-reducer/TOGGLE_LIKE_SUCCESS';\nexport const DELETE_POST_SUCCESS = 'profile-reducer/DELETE_POST_SUCCESS';\nexport const SORT_BY_TIME = 'profile-reducer/SORT_BY_TIME';\nexport const SORT_BY_LIKES = 'profile-reducer/SORT_BY_LIKES';\nexport const IS_USER_EXIST = 'profile-reducer/IS_USER_EXIST';\nconst options = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  timezone: 'UTC',\n  hour: 'numeric',\n  minute: 'numeric'\n};\nconst initialState = {\n  posts: [{\n    name: 'ChelCode',\n    userId: '1601',\n    avatar: 'https://social-network.samuraijs.com/activecontent/images/users/1601/user-small.jpg?v=13',\n    text: 'Whats up??!',\n    id: 2,\n    likesCount: 0,\n    time: 1574713363365,\n    timeFormat: 'November 11, 2019, 10:20 PM',\n    liked: false\n  }, {\n    name: 'ChelCode',\n    avatar: 'https://social-network.samuraijs.com/activecontent/images/users/1601/user-small.jpg?v=13',\n    text: 'hello world!!',\n    userId: '1601',\n    id: 1,\n    likesCount: 12,\n    time: 1574713324589,\n    timeFormat: 'November 9, 2019, 2:46 PM',\n    liked: false\n  }],\n  currentTextPost: '',\n  profile: null,\n  status: '',\n  isEditMode: false,\n  isFollowed: false,\n  isFetching: false,\n  sendMessageMode: false,\n  avatarPopup: false,\n  isUserExist: true\n};\nexport const profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEND_POST:\n      return _objectSpread({}, state, {\n        posts: [{\n          text: action.payload.post.postBody,\n          time: action.payload.time,\n          id: state.posts.length + 1,\n          likesCount: 0,\n          timeFormat: action.payload.timeFormat,\n          liked: false,\n          name: action.payload.name,\n          avatar: action.payload.avatar,\n          userId: action.payload.userId\n        }, ...state.posts]\n      });\n\n    case SET_USER_PROFILE:\n      return _objectSpread({}, state, {\n        profile: action.payload\n      });\n\n    case SET_USER_STATUS:\n      return _objectSpread({}, state, {\n        status: action.payload\n      });\n\n    case SET_PHOTO_PROFILE:\n      return _objectSpread({}, state, {\n        profile: _objectSpread({}, state.profile, {\n          photos: action.photos\n        })\n      });\n\n    case SET_EDIT_PROFILE:\n      return _objectSpread({}, state, {\n        isEditMode: action.payload\n      });\n\n    case RESET_USER_POFILE:\n      return initialState;\n\n    case FOLLOW_UNFOLLOW_SUCCESS:\n      return _objectSpread({}, state, {\n        isFollowed: action.payload\n      });\n\n    case TOGGLE_IS_FETCHING:\n      return _objectSpread({}, state, {\n        isFetching: action.payload\n      });\n\n    case SEND_MESSAGE_MODE:\n      return _objectSpread({}, state, {\n        sendMessageMode: action.payload\n      });\n\n    case SET_POPPUP_AVATAR:\n      return _objectSpread({}, state, {\n        avatarPopup: action.payload\n      });\n\n    case TOGGLE_LIKE_SUCCESS:\n      return _objectSpread({}, state, {\n        posts: state.posts.map(p => action.payload.idPost === p.id ? _objectSpread({}, p, {\n          liked: action.payload.isLiked,\n          likesCount: action.payload.isLiked ? p.likesCount + 1 : p.likesCount - 1\n        }) : p)\n      });\n\n    case DELETE_POST_SUCCESS:\n      return _objectSpread({}, state, {\n        posts: state.posts.filter(p => p.id !== action.payload).map((p, index) => {\n          return _objectSpread({}, p, {\n            id: index + 1\n          });\n        })\n      });\n\n    case SORT_BY_TIME:\n      return _objectSpread({}, state, {\n        posts: [...state.posts.sort((a, b) => {\n          return b.time - a.time;\n        })]\n      });\n\n    case SORT_BY_LIKES:\n      return _objectSpread({}, state, {\n        posts: [...state.posts.sort((a, b) => {\n          return b.likesCount - a.likesCount;\n        })]\n      });\n\n    case IS_USER_EXIST:\n      return _objectSpread({}, state, {}, action.payload);\n\n    default:\n      return state;\n  }\n};\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  payload: isFetching\n});\nexport const resetProfile = () => ({\n  type: RESET_USER_POFILE\n});\nexport const sendPost = (post, name, avatar, userId) => ({\n  type: SEND_POST,\n  payload: {\n    post,\n    timeFormat: new Date(Date.now()).toLocaleString(\"en-US\", options),\n    time: Date.now(),\n    name,\n    avatar,\n    userId\n  }\n});\nexport const setEditProfile = mode => ({\n  type: SET_EDIT_PROFILE,\n  payload: mode\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  payload: profile\n});\nexport const setUserStatus = status => ({\n  type: SET_USER_STATUS,\n  payload: status\n});\nexport const setFollowUnfollow = isFollow => ({\n  type: FOLLOW_UNFOLLOW_SUCCESS,\n  payload: isFollow\n});\nexport const setMessageMode = isSendMode => ({\n  type: SEND_MESSAGE_MODE,\n  payload: {\n    isSendMode\n  }\n});\nexport const setPopupAvatar = isPopup => ({\n  type: SET_POPPUP_AVATAR,\n  payload: {\n    isPopup\n  }\n});\nexport const likesToggle = (isLiked, idPost) => ({\n  type: TOGGLE_LIKE_SUCCESS,\n  payload: {\n    isLiked,\n    idPost\n  }\n});\nexport const deletePost = idPost => ({\n  type: DELETE_POST_SUCCESS,\n  payload: idPost\n});\nexport const sortByTime = () => ({\n  type: SORT_BY_TIME\n});\nexport const sortByLikes = () => ({\n  type: SORT_BY_LIKES\n});\nexport const setIsUserExist = isUserExist => ({\n  type: IS_USER_EXIST,\n  payload: {\n    isUserExist\n  }\n});\nexport const sendPostThunk = post => (dispatch, getState) => {\n  const name = getState().auth.login;\n  const avatar = getState().auth.avatar;\n  const userId = getState().auth.id;\n  dispatch(sendPost(post, name, avatar, userId));\n};\nexport const getProfileThunk = userId => async dispatch => {\n  const response = await profileAPI.getProfile(userId).catch(() => {\n    dispatch(setIsUserExist(false));\n  });\n\n  if (response) {\n    dispatch(setUserProfile(response.data));\n  }\n};\n\nconst savePhotoSucсess = photos => ({\n  type: SET_PHOTO_PROFILE,\n  photos\n});\n\nexport const getStatusThunk = userId => async dispatch => {\n  const data = await profileAPI.getUserStatus(userId);\n  dispatch(setUserStatus(data));\n};\nexport const updateStatusThunk = status => async dispatch => {\n  const data = await profileAPI.updateUserStatus(status);\n\n  if (data.resultCode === 0) {\n    dispatch(setUserStatus(status));\n  }\n};\nexport const savePhotoThunk = photo => async dispatch => {\n  const data = await profileAPI.updatePhoto(photo);\n\n  if (data.resultCode === 0) {\n    dispatch(savePhotoSucсess(data.data.photos));\n  }\n};\nexport const saveProfileData = profile => async (dispatch, getState) => {\n  const userId = getState().auth.id;\n  const response = await profileAPI.saveProfileData(profile);\n\n  if (response.resultCode === 0) {\n    dispatch(getProfileThunk(userId));\n    dispatch(setEditProfile(false));\n  } else {\n    let number = response.messages[0].indexOf('>');\n    let test = response.messages[0].slice(number + 1, -1).toLowerCase();\n    dispatch(stopSubmit('edit-profile', {\n      'contacts': {\n        [test]: test + ' incorrect'\n      }\n    }));\n  }\n};\nexport const getFollowedThunk = id => async dispatch => {\n  const data = await usersAPI.getFollow(id);\n  dispatch(setFollowUnfollow(data));\n};\nexport const followUnfollow = (isFollow, id) => async dispatch => {\n  dispatch(toggleIsFetching(true));\n  const data = isFollow ? await usersAPI.postFollow(id) : await usersAPI.deleteFollow(id);\n\n  if (data.resultCode === 0) {\n    dispatch(setFollowUnfollow(isFollow));\n    dispatch(toggleIsFetching(false));\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["C:/Users/WOW/Documents/GitHub/react/react-test/src/redux/profile-reducer.js"],"names":["profileAPI","stopSubmit","usersAPI","SEND_POST","SET_USER_PROFILE","SET_USER_STATUS","SET_PHOTO_PROFILE","SET_EDIT_PROFILE","RESET_USER_POFILE","FOLLOW_UNFOLLOW_SUCCESS","TOGGLE_IS_FETCHING","SEND_MESSAGE_MODE","SET_POPPUP_AVATAR","TOGGLE_LIKE_SUCCESS","DELETE_POST_SUCCESS","SORT_BY_TIME","SORT_BY_LIKES","IS_USER_EXIST","options","year","month","day","timezone","hour","minute","initialState","posts","name","userId","avatar","text","id","likesCount","time","timeFormat","liked","currentTextPost","profile","status","isEditMode","isFollowed","isFetching","sendMessageMode","avatarPopup","isUserExist","profileReducer","state","action","type","payload","post","postBody","length","photos","map","p","idPost","isLiked","filter","index","sort","a","b","toggleIsFetching","resetProfile","sendPost","Date","now","toLocaleString","setEditProfile","mode","setUserProfile","setUserStatus","setFollowUnfollow","isFollow","setMessageMode","isSendMode","setPopupAvatar","isPopup","likesToggle","deletePost","sortByTime","sortByLikes","setIsUserExist","sendPostThunk","dispatch","getState","auth","login","getProfileThunk","response","getProfile","catch","data","savePhotoSucсess","getStatusThunk","getUserStatus","updateStatusThunk","updateUserStatus","resultCode","savePhotoThunk","photo","updatePhoto","saveProfileData","number","messages","indexOf","test","slice","toLowerCase","getFollowedThunk","getFollow","followUnfollow","postFollow","deleteFollow"],"mappings":"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","sourcesContent":["import { profileAPI } from '../API/api'\r\nimport { stopSubmit } from 'redux-form'\r\nimport { usersAPI } from '../API/api'\r\n\r\n\r\n\r\nexport const SEND_POST = 'profile-reducer/SEND_POST'\r\nexport const SET_USER_PROFILE = 'profile-reducer/SET_USER_PROFILE'\r\nexport const SET_USER_STATUS = 'profile-reducer/SET_USER_STATUS'\r\nexport const SET_PHOTO_PROFILE = 'profile-reducer/SET_PHOTO_PROFILE'\r\nexport const SET_EDIT_PROFILE = 'profile-reducer/SET_EDIT_PROFILE'\r\nexport const RESET_USER_POFILE = 'profile-reducer/RESET_USER_POFILE'\r\nexport const FOLLOW_UNFOLLOW_SUCCESS = 'profile-reducer/FOLLOW_UNFOLLOW_SUCCESS'\r\nexport const TOGGLE_IS_FETCHING = 'profile-reducer/TOGGLE_IS_FETCHING'\r\nexport const SEND_MESSAGE_MODE = 'profile-reducer/SEND_MESSAGE_MODE'\r\nexport const SET_POPPUP_AVATAR = 'profile-reducer/SET_POPPUP_AVATAR'\r\nexport const TOGGLE_LIKE_SUCCESS = 'profile-reducer/TOGGLE_LIKE_SUCCESS'\r\nexport const DELETE_POST_SUCCESS = 'profile-reducer/DELETE_POST_SUCCESS'\r\nexport const SORT_BY_TIME = 'profile-reducer/SORT_BY_TIME'\r\nexport const SORT_BY_LIKES = 'profile-reducer/SORT_BY_LIKES'\r\nexport const IS_USER_EXIST = 'profile-reducer/IS_USER_EXIST'\r\n\r\nconst options = {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    timezone: 'UTC',\r\n    hour: 'numeric',\r\n    minute: 'numeric'\r\n}\r\n\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {\r\n            name: 'ChelCode', userId: '1601', avatar: 'https://social-network.samuraijs.com/activecontent/images/users/1601/user-small.jpg?v=13',\r\n            text: 'Whats up??!', id: 2, likesCount: 0, time: 1574713363365, timeFormat: 'November 11, 2019, 10:20 PM', liked: false\r\n        },\r\n        {\r\n            name: 'ChelCode', avatar: 'https://social-network.samuraijs.com/activecontent/images/users/1601/user-small.jpg?v=13',\r\n            text: 'hello world!!', userId: '1601', id: 1, likesCount: 12, time: 1574713324589, timeFormat: 'November 9, 2019, 2:46 PM', liked: false\r\n        }],\r\n    currentTextPost: '',\r\n    profile: null,\r\n    status: '',\r\n    isEditMode: false,\r\n    isFollowed: false,\r\n    isFetching: false,\r\n    sendMessageMode: false,\r\n    avatarPopup: false,\r\n    isUserExist: true\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SEND_POST:\r\n            return {\r\n                ...state,\r\n                posts: [{\r\n                    text: action.payload.post.postBody, time: action.payload.time, id: state.posts.length + 1, \r\n                    likesCount: 0, timeFormat: action.payload.timeFormat, liked: false, name: action.payload.name, \r\n                    avatar: action.payload.avatar, userId: action.payload.userId\r\n                }, ...state.posts],\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return { ...state, profile: action.payload }\r\n        case SET_USER_STATUS:\r\n            return { ...state, status: action.payload }\r\n        case SET_PHOTO_PROFILE:\r\n            return { ...state, profile: { ...state.profile, photos: action.photos } }\r\n        case SET_EDIT_PROFILE:\r\n            return { ...state, isEditMode: action.payload }\r\n        case RESET_USER_POFILE:\r\n            return initialState\r\n        case FOLLOW_UNFOLLOW_SUCCESS:\r\n            return { ...state, isFollowed: action.payload }\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.payload }\r\n        case SEND_MESSAGE_MODE:\r\n            return { ...state, sendMessageMode: action.payload }\r\n        case SET_POPPUP_AVATAR:\r\n            return { ...state, avatarPopup: action.payload }\r\n        case TOGGLE_LIKE_SUCCESS:\r\n            return { ...state, posts: state.posts.map(p => \r\n                action.payload.idPost === p.id \r\n                ? { ...p, liked: action.payload.isLiked, likesCount: action.payload.isLiked \r\n                    ? p.likesCount + 1 \r\n                    : p.likesCount - 1 } \r\n                : p) }\r\n        case DELETE_POST_SUCCESS:\r\n            return { ...state, posts: state.posts.filter(p => \r\n                p.id !== action.payload).map((p, index) => { return { ...p, id: index + 1 } }) }\r\n        case SORT_BY_TIME:\r\n            return { ...state, posts: [...state.posts.sort((a, b) => { return b.time - a.time })] }\r\n        case SORT_BY_LIKES:\r\n            return { ...state, posts: [...state.posts.sort((a, b) => { return b.likesCount - a.likesCount })] }\r\n        case IS_USER_EXIST:\r\n            return {...state, ...action.payload}    \r\n        default: return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, payload: isFetching })\r\nexport const resetProfile = () => ({ type: RESET_USER_POFILE })\r\nexport const sendPost = (post, name, avatar, userId) => ({ type: SEND_POST, payload: {post, timeFormat: new Date(Date.now()).toLocaleString(\"en-US\", options), time: Date.now(), name, avatar, userId} })\r\n\r\n\r\nexport const setEditProfile = (mode) => ({ type: SET_EDIT_PROFILE, payload: mode })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, payload: profile })\r\nexport const setUserStatus = (status) => ({ type: SET_USER_STATUS, payload: status })\r\nexport const setFollowUnfollow = (isFollow) => ({ type: FOLLOW_UNFOLLOW_SUCCESS, payload: isFollow })\r\nexport const setMessageMode = (isSendMode) => ({ type: SEND_MESSAGE_MODE, payload: {isSendMode} })\r\nexport const setPopupAvatar = (isPopup) => ({ type: SET_POPPUP_AVATAR, payload: {isPopup} })\r\nexport const likesToggle = (isLiked, idPost) => ({ type: TOGGLE_LIKE_SUCCESS, payload: {isLiked, idPost} })\r\nexport const deletePost = (idPost) => ({ type: DELETE_POST_SUCCESS, payload: idPost })\r\nexport const sortByTime = () => ({ type: SORT_BY_TIME })\r\nexport const sortByLikes = () => ({ type: SORT_BY_LIKES })\r\nexport const setIsUserExist = (isUserExist) => ({ type: IS_USER_EXIST, payload: {isUserExist} })\r\n\r\nexport const sendPostThunk = (post) => (dispatch, getState) => {\r\n\r\n    const name = getState().auth.login\r\n    const avatar = getState().auth.avatar\r\n    const userId = getState().auth.id\r\n    dispatch(sendPost(post, name, avatar, userId))\r\n}\r\nexport const getProfileThunk = (userId) => async (dispatch) => {\r\n    \r\n    \r\n    const response = await (profileAPI.getProfile(userId)).catch(()=>{\r\n        dispatch(setIsUserExist(false))\r\n    })\r\n    \r\n      if(response){\r\n          \r\n        dispatch(setUserProfile(response.data))  \r\n    } \r\n\r\n      \r\n    \r\n     \r\n}\r\n\r\nconst savePhotoSucсess = (photos) => ({ type: SET_PHOTO_PROFILE, photos })\r\n\r\nexport const getStatusThunk = (userId) => async (dispatch) => {\r\n    const data = await (profileAPI.getUserStatus(userId))\r\n\r\n    dispatch(setUserStatus(data))\r\n\r\n}\r\nexport const updateStatusThunk = (status) => async (dispatch) => {\r\n    const data = await (profileAPI.updateUserStatus(status))\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserStatus(status))\r\n    }\r\n\r\n}\r\nexport const savePhotoThunk = (photo) => async (dispatch) => {\r\n    const data = await (profileAPI.updatePhoto(photo))\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(savePhotoSucсess(data.data.photos))\r\n    }\r\n\r\n}\r\nexport const saveProfileData = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.id\r\n    const response = await (profileAPI.saveProfileData(profile))\r\n\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(getProfileThunk(userId))\r\n        dispatch(setEditProfile(false))\r\n    } else {\r\n        let number = response.messages[0].indexOf('>')\r\n        let test = response.messages[0].slice(number + 1, -1).toLowerCase()\r\n        dispatch(stopSubmit('edit-profile', { 'contacts': { [test]: test + ' incorrect' } }))\r\n    }\r\n}\r\nexport const getFollowedThunk = (id) => async (dispatch) => {\r\n    const data = await (usersAPI.getFollow(id))\r\n    dispatch(setFollowUnfollow(data))\r\n\r\n}\r\nexport const followUnfollow = (isFollow, id) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    const data =\r\n        isFollow\r\n            ? await usersAPI.postFollow(id)\r\n            : await usersAPI.deleteFollow(id)\r\n    if (data.resultCode === 0) {\r\n        dispatch(setFollowUnfollow(isFollow))\r\n        dispatch(toggleIsFetching(false))\r\n    }\r\n\r\n\r\n}\r\nexport default profileReducer"]},"metadata":{},"sourceType":"module"}