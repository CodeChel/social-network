{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { profileAPI } from '../API/api';\nimport { stopSubmit } from 'redux-form';\nimport { usersAPI } from '../API/api';\nconst SEND_POST = 'profile-reducer/SEND_POST';\nconst SET_USER_PROFILE = 'profile-reducer/SET_USER_PROFILE';\nconst SET_USER_STATUS = 'profile-reducer/SET_USER_STATUS';\nconst SET_PHOTO_PROFILE = 'profile-reducer/SET_PHOTO_PROFILE';\nconst SET_EDIT_PROFILE = 'profile-reducer/SET_EDIT_PROFILE';\nconst RESET_USER_POFILE = 'profile-reducer/RESET_USER_POFILE';\nconst FOLLOW_UNFOLLOW_SUCCESS = 'profile-reducer/FOLLOW_UNFOLLOW_SUCCESS';\nconst TOGGLE_IS_FETCHING = 'profile-reducer/TOGGLE_IS_FETCHING';\nconst SEND_MESSAGE_MODE = 'profile-reducer/SEND_MESSAGE_MODE';\nconst SET_POPPUP_AVATAR = 'profile-reducer/SET_POPPUP_AVATAR';\nconst TOGGLE_LIKE_SUCCESS = 'profile-reducer/TOGGLE_LIKE_SUCCESS';\nconst DELETE_POST_SUCCESS = 'profile-reducer/DELETE_POST_SUCCESS';\nconst SORT_BY_TIME = 'profile-reducer/SORT_BY_TIME';\nconst SORT_BY_LIKES = 'profile-reducer/SORT_BY_LIKES';\nconst options = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  timezone: 'UTC',\n  hour: 'numeric',\n  minute: 'numeric'\n};\nconst initialState = {\n  posts: [{\n    name: 'ChelCode',\n    userId: '1601',\n    avatar: 'https://social-network.samuraijs.com/activecontent/images/users/1601/user-small.jpg?v=13',\n    text: 'Whats up??!',\n    id: 2,\n    likesCount: 0,\n    time: 1574713363365,\n    timeFormat: 'November 11, 2019, 10:20 PM',\n    liked: false\n  }, {\n    name: 'ChelCode',\n    avatar: 'https://social-network.samuraijs.com/activecontent/images/users/1601/user-small.jpg?v=13',\n    text: 'hello world!!',\n    userId: '1601',\n    id: 1,\n    likesCount: 12,\n    time: 1574713324589,\n    timeFormat: 'November 9, 2019, 2:46 PM',\n    liked: false\n  }],\n  currentTextPost: '',\n  profile: null,\n  status: '',\n  isEditMode: false,\n  isFollowed: false,\n  isFetching: false,\n  sendMessageMode: false,\n  avatarPopup: false\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEND_POST:\n      return _objectSpread({}, state, {\n        posts: [{\n          text: action.post.postBody,\n          time: action.time,\n          id: state.posts.length + 1,\n          likesCount: 0,\n          timeFormat: action.timeFormat,\n          liked: false,\n          name: action.name,\n          avatar: action.avatar,\n          userId: action.userId\n        }, ...state.posts]\n      });\n\n    case SET_USER_PROFILE:\n      return _objectSpread({}, state, {\n        profile: action.profile\n      });\n\n    case SET_USER_STATUS:\n      return _objectSpread({}, state, {\n        status: action.status\n      });\n\n    case SET_PHOTO_PROFILE:\n      return _objectSpread({}, state, {\n        profile: _objectSpread({}, state.profile, {\n          photos: action.photos\n        })\n      });\n\n    case SET_EDIT_PROFILE:\n      return _objectSpread({}, state, {\n        isEditMode: action.mode\n      });\n\n    case RESET_USER_POFILE:\n      return initialState;\n\n    case FOLLOW_UNFOLLOW_SUCCESS:\n      return _objectSpread({}, state, {\n        isFollowed: action.isFollow\n      });\n\n    case TOGGLE_IS_FETCHING:\n      return _objectSpread({}, state, {\n        isFetching: action.isFetching\n      });\n\n    case SEND_MESSAGE_MODE:\n      return _objectSpread({}, state, {\n        sendMessageMode: action.isSendMode\n      });\n\n    case SET_POPPUP_AVATAR:\n      return _objectSpread({}, state, {\n        avatarPopup: action.isPopup\n      });\n\n    case TOGGLE_LIKE_SUCCESS:\n      return _objectSpread({}, state, {\n        posts: state.posts.map(p => action.idPost === p.id ? _objectSpread({}, p, {\n          liked: action.isLiked,\n          likesCount: action.isLiked ? p.likesCount + 1 : p.likesCount - 1\n        }) : p)\n      });\n\n    case DELETE_POST_SUCCESS:\n      return _objectSpread({}, state, {\n        posts: state.posts.filter(p => p.id !== action.idPost).map((p, index) => {\n          return _objectSpread({}, p, {\n            id: index + 1\n          });\n        })\n      });\n\n    case SORT_BY_TIME:\n      debugger;\n      return _objectSpread({}, state, {\n        posts: [...state.posts.sort((a, b) => {\n          return b.time - a.time;\n        })]\n      });\n\n    case SORT_BY_LIKES:\n      return _objectSpread({}, state, {\n        posts: [...state.posts.sort((a, b) => {\n          return b.likesCount - a.likesCount;\n        })]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const resetProfile = () => ({\n  type: RESET_USER_POFILE\n});\nexport const sendPost = (post, name, avatar, userId) => ({\n  type: SEND_POST,\n  post,\n  timeFormat: new Date().toLocaleString(\"en-US\", options),\n  time: Date.now(),\n  name,\n  avatar,\n  userId\n});\nexport const setEditProfile = mode => ({\n  type: SET_EDIT_PROFILE,\n  mode\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setUserStatus = status => ({\n  type: SET_USER_STATUS,\n  status\n});\nexport const setFollowUnfollow = isFollow => ({\n  type: FOLLOW_UNFOLLOW_SUCCESS,\n  isFollow\n});\nexport const setMessageMode = isSendMode => ({\n  type: SEND_MESSAGE_MODE,\n  isSendMode\n});\nexport const setPopupAvatar = isPopup => ({\n  type: SET_POPPUP_AVATAR,\n  isPopup\n});\nexport const likesToggle = (isLiked, idPost) => ({\n  type: TOGGLE_LIKE_SUCCESS,\n  isLiked,\n  idPost\n});\nexport const deletePost = idPost => ({\n  type: DELETE_POST_SUCCESS,\n  idPost\n});\nexport const sortByTime = () => ({\n  type: SORT_BY_TIME\n});\nexport const sortByLikes = () => ({\n  type: SORT_BY_LIKES\n});\nexport const sendPostThunk = post => (dispatch, getState) => {\n  const name = getState().auth.login;\n  const avatar = getState().auth.avatar;\n  const userId = getState().auth.id;\n  dispatch(sendPost(post, name, avatar, userId));\n};\nexport const getProfileThunk = userId => async dispatch => {\n  const data = await profileAPI.getProfile(userId);\n  dispatch(setUserProfile(data));\n};\n\nconst savePhotoSucсess = photos => ({\n  type: SET_PHOTO_PROFILE,\n  photos\n});\n\nexport const getStatusThunk = userId => async dispatch => {\n  const data = await profileAPI.getUserStatus(userId);\n  dispatch(setUserStatus(data));\n};\nexport const updateStatusThunk = status => async dispatch => {\n  const data = await profileAPI.updateUserStatus(status);\n\n  if (data.resultCode === 0) {\n    dispatch(setUserStatus(status));\n  }\n};\nexport const savePhotoThunk = photo => async dispatch => {\n  const data = await profileAPI.updatePhoto(photo);\n\n  if (data.resultCode === 0) {\n    dispatch(savePhotoSucсess(data.data.photos));\n  }\n};\nexport const saveProfileData = profile => async (dispatch, getState) => {\n  const userId = getState().auth.id;\n  const response = await profileAPI.saveProfileData(profile);\n\n  if (response.resultCode === 0) {\n    dispatch(getProfileThunk(userId));\n    dispatch(setEditProfile(false));\n  } else {\n    let number = response.messages[0].indexOf('>');\n    let test = response.messages[0].slice(number + 1, -1).toLowerCase();\n    dispatch(stopSubmit('edit-profile', {\n      'contacts': {\n        [test]: test + ' incorrect'\n      }\n    }));\n  }\n};\nexport const getFollowedThunk = id => async dispatch => {\n  const data = await usersAPI.getFollow(id);\n  dispatch(setFollowUnfollow(data));\n};\nexport const followUnfollow = (isFollow, id) => async dispatch => {\n  dispatch(toggleIsFetching(true));\n  const data = isFollow ? await usersAPI.postFollow(id) : await usersAPI.deleteFollow(id);\n\n  if (data.resultCode === 0) {\n    dispatch(setFollowUnfollow(isFollow));\n    dispatch(toggleIsFetching(false));\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\redux\\profile-reducer.js"],"names":["profileAPI","stopSubmit","usersAPI","SEND_POST","SET_USER_PROFILE","SET_USER_STATUS","SET_PHOTO_PROFILE","SET_EDIT_PROFILE","RESET_USER_POFILE","FOLLOW_UNFOLLOW_SUCCESS","TOGGLE_IS_FETCHING","SEND_MESSAGE_MODE","SET_POPPUP_AVATAR","TOGGLE_LIKE_SUCCESS","DELETE_POST_SUCCESS","SORT_BY_TIME","SORT_BY_LIKES","options","year","month","day","timezone","hour","minute","initialState","posts","name","userId","avatar","text","id","likesCount","time","timeFormat","liked","currentTextPost","profile","status","isEditMode","isFollowed","isFetching","sendMessageMode","avatarPopup","profileReducer","state","action","type","post","postBody","length","photos","mode","isFollow","isSendMode","isPopup","map","p","idPost","isLiked","filter","index","sort","a","b","toggleIsFetching","resetProfile","sendPost","Date","toLocaleString","now","setEditProfile","setUserProfile","setUserStatus","setFollowUnfollow","setMessageMode","setPopupAvatar","likesToggle","deletePost","sortByTime","sortByLikes","sendPostThunk","dispatch","getState","auth","login","getProfileThunk","data","getProfile","savePhotoSucсess","getStatusThunk","getUserStatus","updateStatusThunk","updateUserStatus","resultCode","savePhotoThunk","photo","updatePhoto","saveProfileData","response","number","messages","indexOf","test","slice","toLowerCase","getFollowedThunk","getFollow","followUnfollow","postFollow","deleteFollow"],"mappings":"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","sourcesContent":["import { profileAPI } from '../API/api'\r\nimport { stopSubmit } from 'redux-form'\r\nimport { usersAPI } from '../API/api' \r\n\r\n\r\n\r\nconst SEND_POST = 'profile-reducer/SEND_POST'\r\nconst SET_USER_PROFILE = 'profile-reducer/SET_USER_PROFILE'\r\nconst SET_USER_STATUS = 'profile-reducer/SET_USER_STATUS'\r\nconst SET_PHOTO_PROFILE = 'profile-reducer/SET_PHOTO_PROFILE'\r\nconst SET_EDIT_PROFILE = 'profile-reducer/SET_EDIT_PROFILE'\r\nconst RESET_USER_POFILE = 'profile-reducer/RESET_USER_POFILE'\r\nconst FOLLOW_UNFOLLOW_SUCCESS = 'profile-reducer/FOLLOW_UNFOLLOW_SUCCESS'\r\nconst TOGGLE_IS_FETCHING = 'profile-reducer/TOGGLE_IS_FETCHING'\r\nconst SEND_MESSAGE_MODE = 'profile-reducer/SEND_MESSAGE_MODE'\r\nconst SET_POPPUP_AVATAR = 'profile-reducer/SET_POPPUP_AVATAR'\r\nconst TOGGLE_LIKE_SUCCESS = 'profile-reducer/TOGGLE_LIKE_SUCCESS'\r\nconst DELETE_POST_SUCCESS = 'profile-reducer/DELETE_POST_SUCCESS'\r\nconst SORT_BY_TIME = 'profile-reducer/SORT_BY_TIME'\r\nconst SORT_BY_LIKES = 'profile-reducer/SORT_BY_LIKES'\r\nconst options = {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    timezone: 'UTC',\r\n    hour: 'numeric',\r\n    minute: 'numeric'\r\n}\r\n\r\n\r\nconst initialState = {\r\n    posts: [\r\n        { name: 'ChelCode', userId: '1601', avatar: 'https://social-network.samuraijs.com/activecontent/images/users/1601/user-small.jpg?v=13',\r\n         text: 'Whats up??!', id: 2, likesCount: 0, time: 1574713363365, timeFormat: 'November 11, 2019, 10:20 PM', liked: false },\r\n        { name: 'ChelCode', avatar: 'https://social-network.samuraijs.com/activecontent/images/users/1601/user-small.jpg?v=13',\r\n         text: 'hello world!!', userId: '1601', id: 1, likesCount: 12,time: 1574713324589 , timeFormat: 'November 9, 2019, 2:46 PM', liked: false }],\r\n    currentTextPost: '',\r\n    profile: null,\r\n    status: '',\r\n    isEditMode: false,\r\n    isFollowed: false,\r\n    isFetching: false,\r\n    sendMessageMode: false,\r\n    avatarPopup: false\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SEND_POST:\r\n            return {\r\n                ...state,\r\n                posts: [{ text: action.post.postBody, time: action.time, id: state.posts.length+1, likesCount: 0, timeFormat: action.timeFormat, liked: false,\r\n                name: action.name, avatar: action.avatar, userId: action.userId}, ...state.posts],\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return { ...state, profile: action.profile }\r\n        case SET_USER_STATUS:\r\n            return { ...state, status: action.status }\r\n        case SET_PHOTO_PROFILE:\r\n            return { ...state, profile: { ...state.profile, photos: action.photos } }\r\n        case SET_EDIT_PROFILE:\r\n            return { ...state, isEditMode: action.mode }\r\n        case RESET_USER_POFILE:\r\n            return initialState\r\n        case FOLLOW_UNFOLLOW_SUCCESS:\r\n            return { ...state, isFollowed: action.isFollow }\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n        case SEND_MESSAGE_MODE:\r\n            return { ...state, sendMessageMode: action.isSendMode }\r\n        case SET_POPPUP_AVATAR:\r\n            return { ...state, avatarPopup: action.isPopup }\r\n        case TOGGLE_LIKE_SUCCESS:\r\n            return {...state, posts: state.posts.map(p=> action.idPost === p.id ? {...p, liked: action.isLiked, likesCount: action.isLiked ? p.likesCount + 1 : p.likesCount - 1}  : p )}\r\n        case  DELETE_POST_SUCCESS:\r\n            return {...state, posts: state.posts.filter(p=> p.id !== action.idPost).map((p,index)=>{ return {...p, id: index+1}})}\r\n        case SORT_BY_TIME:\r\n            debugger\r\n            return {...state, posts: [...state.posts.sort((a,b)=>{return b.time - a.time})]}\r\n        case SORT_BY_LIKES:\r\n            return {...state, posts: [...state.posts.sort((a,b)=>{return b.likesCount - a.likesCount})]}         \r\n        default: return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const resetProfile = () => ({ type: RESET_USER_POFILE })\r\nexport const sendPost = (post,name,avatar, userId) => ({ type: SEND_POST, post, timeFormat: new Date().toLocaleString(\"en-US\", options), time: Date.now(), name, avatar, userId })\r\n\r\n\r\nexport const setEditProfile = (mode) => ({ type: SET_EDIT_PROFILE, mode })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setUserStatus = (status) => ({ type: SET_USER_STATUS, status })\r\nexport const setFollowUnfollow = (isFollow) => ({ type: FOLLOW_UNFOLLOW_SUCCESS, isFollow })\r\nexport const setMessageMode = (isSendMode) => ({ type: SEND_MESSAGE_MODE, isSendMode })\r\nexport const setPopupAvatar = (isPopup) => ({ type: SET_POPPUP_AVATAR, isPopup })\r\nexport const likesToggle = (isLiked, idPost) => ({ type: TOGGLE_LIKE_SUCCESS, isLiked, idPost})\r\nexport const deletePost = (idPost) => ({ type: DELETE_POST_SUCCESS, idPost })\r\nexport const sortByTime = () => ({type: SORT_BY_TIME})\r\nexport const sortByLikes = () => ({type: SORT_BY_LIKES})\r\n\r\n\r\nexport const sendPostThunk = (post) => (dispatch, getState) => {\r\n    \r\n    const name =  getState().auth.login\r\n    const avatar =  getState().auth.avatar\r\n    const userId = getState().auth.id\r\n    dispatch(sendPost(post,name,avatar, userId))\r\n}\r\nexport const getProfileThunk = (userId) => async (dispatch) => {\r\n    \r\n    const data = await (profileAPI.getProfile(userId))\r\n    \r\n    dispatch(setUserProfile(data))\r\n\r\n}\r\nconst savePhotoSucсess = (photos) => ({ type: SET_PHOTO_PROFILE, photos })\r\n\r\nexport const getStatusThunk = (userId) => async (dispatch) => {\r\n    const data = await (profileAPI.getUserStatus(userId))\r\n\r\n    dispatch(setUserStatus(data))\r\n\r\n}\r\nexport const updateStatusThunk = (status) => async (dispatch) => {\r\n    const data = await (profileAPI.updateUserStatus(status))\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserStatus(status))\r\n    }\r\n\r\n}\r\nexport const savePhotoThunk = (photo) => async (dispatch) => {\r\n    const data = await (profileAPI.updatePhoto(photo))\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(savePhotoSucсess(data.data.photos))\r\n    }\r\n\r\n}\r\nexport const saveProfileData = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.id\r\n    const response = await (profileAPI.saveProfileData(profile))\r\n\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(getProfileThunk(userId))\r\n        dispatch(setEditProfile(false))\r\n    } else {\r\n        let number = response.messages[0].indexOf('>')\r\n        let test = response.messages[0].slice(number + 1, -1).toLowerCase()\r\n        dispatch(stopSubmit('edit-profile', { 'contacts': { [test]: test + ' incorrect' } }))\r\n    }\r\n}\r\nexport const getFollowedThunk = (id) => async (dispatch) => {\r\n    const data = await (usersAPI.getFollow(id))\r\n    dispatch(setFollowUnfollow(data))\r\n\r\n}\r\nexport const followUnfollow = (isFollow, id) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    const data =\r\n        isFollow\r\n            ? await usersAPI.postFollow(id)\r\n            : await usersAPI.deleteFollow(id)\r\n    if (data.resultCode === 0) {\r\n        dispatch(setFollowUnfollow(isFollow))\r\n        dispatch(toggleIsFetching(false))\r\n    }\r\n\r\n\r\n}\r\nexport default profileReducer"]},"metadata":{},"sourceType":"module"}