{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Messages-container\\\\Messages\\\\Messages.jsx\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport styles from './Messages.module.css';\nimport DialogWithUser from './DialogsList/DialogWithUser';\nimport DialogSession from './DialogSession';\nimport ScrollbarHOC from '../../common/HOCScrollBar/HOCScrollbarCusctom';\nimport { Switch } from 'react-router';\nimport { Route } from 'react-router-dom';\nimport EmptyDialogMessages from './EmpyDialogSession';\n\nconst Messages = (_ref) => {\n  let dialogItemsData = _ref.dialogItemsData,\n      setSearch = _ref.setSearch,\n      dialogsFromSearch = _ref.dialogsFromSearch,\n      props = _objectWithoutProperties(_ref, [\"dialogItemsData\", \"setSearch\", \"dialogsFromSearch\"]);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchWord = _useState2[0],\n        setSearchWord = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isSearchMode = _useState4[0],\n        setSearchMode = _useState4[1];\n\n  const breakpoint = 790;\n  useEffect(() => {\n    const outSearhCheck = e => {\n      if (e.target !== searchInput.current && e.target !== dialogRef.current) {\n        outSearch();\n      }\n    };\n\n    if (isSearchMode) {\n      document.addEventListener('click', outSearhCheck);\n    } else {\n      document.removeEventListener('click', outSearhCheck);\n    }\n\n    return () => {\n      document.removeEventListener('click', outSearhCheck);\n    };\n  }, [isSearchMode]);\n  const searchInput = useRef();\n  const dialogRef = useRef();\n\n  const handleSearch = e => {\n    const word = e.currentTarget.value;\n    setSearchWord(word);\n\n    if (word && word.trim() !== '') {\n      setSearch(word);\n      setSearchMode(true);\n    }\n  };\n\n  const outSearch = () => {\n    setSearchMode(false);\n    setSearchWord('');\n  };\n\n  const currentDialogId = +props.match.params.userId ? +props.match.params.userId : 0;\n  const currentDialog = currentDialogId && dialogItemsData[dialogItemsData.findIndex(i => {\n    return i.userId === currentDialogId;\n  })];\n  const dialogItems = dialogItemsData.map((item, index) => React.createElement(DialogWithUser, {\n    avatar: item.avatar,\n    currentDialogId: currentDialogId,\n    date: item.messages[item.messages.length - 1].date,\n    isYoursMessage: item.messages[item.messages.length - 1].right,\n    lastMessage: item.messages[item.messages.length - 1].message,\n    key: index + 1,\n    name: item.name,\n    id: item.userId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }));\n  const dialogItemsSearch = isSearchMode && dialogsFromSearch.map((item, index) => React.createElement(DialogWithUser, {\n    dialogRef: dialogRef,\n    isSearchMode: isSearchMode,\n    avatar: item.avatar,\n    outSearch: outSearch,\n    lastMessage: item.messages[item.messages.length - 1].message,\n    date: item.messages[item.messages.length - 1].date,\n    isYoursMessage: item.messages[item.messages.length - 1].right,\n    key: index + 1,\n    name: item.name,\n    id: item.userId,\n    currentDialogId: currentDialogId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n  return ResponsiveLayout(breakpoint, renderDesktop, renderMobile, _objectSpread({\n    currentDialogId,\n    currentDialog,\n    dialogItemsSearch,\n    dialogItems,\n    handleSearch,\n    isSearchMode,\n    searchInput,\n    searchWord\n  }, props));\n};\n\nconst ResponsiveLayout = ({\n  breakpoint,\n  renderDesktop,\n  renderMobile,\n  props\n}) => {\n  const _useState5 = useState(window.innerWidth),\n        _useState6 = _slicedToArray(_useState5, 2),\n        width = _useState6[0],\n        setWidth = _useState6[1];\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return width > breakpoint ? renderDesktop(props) : renderMobile(props);\n};\n\nconst renderDesktop = props => {\n  return React.createElement(MessagesDesktop, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }));\n};\n\nconst renderMobile = props => {\n  return React.createElement(MessagesMobile, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }));\n};\n\nconst MessagesMobile = (_ref2) => {\n  let currentDialogId = _ref2.currentDialogId,\n      isSearchMode = _ref2.isSearchMode,\n      currentDialog = _ref2.currentDialog,\n      searchInput = _ref2.searchInput,\n      searchWord = _ref2.searchWord,\n      dialogItemsSearch = _ref2.dialogItemsSearch,\n      dialogItems = _ref2.dialogItems,\n      handleSearch = _ref2.handleSearch,\n      props = _objectWithoutProperties(_ref2, [\"currentDialogId\", \"isSearchMode\", \"currentDialog\", \"searchInput\", \"searchWord\", \"dialogItemsSearch\", \"dialogItems\", \"handleSearch\"]);\n\n  return React.createElement(\"div\", {\n    className: styles.messagesMobile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, !!currentDialogId && React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/messages/\",\n    render: () => React.createElement(EmptyDialogMessages, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/:userId\",\n    render: () => React.createElement(DialogSession, {\n      valueMessage: props.valueMessage,\n      isSearchMode: isSearchMode,\n      userId: currentDialogId,\n      sendMessage: props.sendMessage,\n      currentDialog: currentDialog,\n      isFetching: props.isFetching,\n      getUserForMessages: props.getUserForMessages,\n      userForMessage: props.userForMessage,\n      setNewDialog: props.setNewDialog,\n      setUserForMessages: props.setUserForMessages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), !currentDialogId && React.createElement(\"div\", {\n    className: styles.dialogItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.dialogSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: searchInput,\n    placeholder: \"Search\",\n    className: styles.searchInput,\n    value: searchWord,\n    onChange: e => handleSearch(e),\n    type: \"text\",\n    name: \"\",\n    id: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.dialogsList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(ScrollbarHOC, {\n    children: isSearchMode ? dialogItemsSearch : dialogItems,\n    removeTrackYWhenNotUsed: true,\n    style: {\n      width: \"100%\",\n      height: \"85vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }))));\n};\n\nconst MessagesDesktop = (_ref3) => {\n  let currentDialogId = _ref3.currentDialogId,\n      isSearchMode = _ref3.isSearchMode,\n      currentDialog = _ref3.currentDialog,\n      searchInput = _ref3.searchInput,\n      searchWord = _ref3.searchWord,\n      dialogItemsSearch = _ref3.dialogItemsSearch,\n      dialogItems = _ref3.dialogItems,\n      handleSearch = _ref3.handleSearch,\n      props = _objectWithoutProperties(_ref3, [\"currentDialogId\", \"isSearchMode\", \"currentDialog\", \"searchInput\", \"searchWord\", \"dialogItemsSearch\", \"dialogItems\", \"handleSearch\"]);\n\n  return React.createElement(\"div\", {\n    className: styles.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/messages/\",\n    render: () => React.createElement(EmptyDialogMessages, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/:userId\",\n    render: () => React.createElement(DialogSession, {\n      valueMessage: props.valueMessage,\n      isSearchMode: isSearchMode,\n      userId: currentDialogId,\n      sendMessage: props.sendMessage,\n      currentDialog: currentDialog,\n      isFetching: props.isFetching,\n      getUserForMessages: props.getUserForMessages,\n      userForMessage: props.userForMessage,\n      setNewDialog: props.setNewDialog,\n      setUserForMessages: props.setUserForMessages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.dialogItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.dialogSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: searchInput,\n    placeholder: \"Search\",\n    className: styles.searchInput,\n    value: searchWord,\n    onChange: e => handleSearch(e),\n    type: \"text\",\n    name: \"\",\n    id: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.dialogsList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(ScrollbarHOC, {\n    children: isSearchMode ? dialogItemsSearch : dialogItems,\n    removeTrackYWhenNotUsed: true,\n    style: {\n      width: \"100%\",\n      height: \"85vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }))));\n};\n\nexport default Messages;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Messages-container\\Messages\\Messages.jsx"],"names":["React","useState","useRef","useEffect","styles","DialogWithUser","DialogSession","ScrollbarHOC","Switch","Route","EmptyDialogMessages","Messages","dialogItemsData","setSearch","dialogsFromSearch","props","searchWord","setSearchWord","isSearchMode","setSearchMode","breakpoint","outSearhCheck","e","target","searchInput","current","dialogRef","outSearch","document","addEventListener","removeEventListener","handleSearch","word","currentTarget","value","trim","currentDialogId","match","params","userId","currentDialog","findIndex","i","dialogItems","map","item","index","avatar","messages","length","date","right","message","name","dialogItemsSearch","ResponsiveLayout","renderDesktop","renderMobile","window","innerWidth","width","setWidth","handleResize","MessagesMobile","messagesMobile","valueMessage","sendMessage","isFetching","getUserForMessages","userForMessage","setNewDialog","setUserForMessages","dialogSearch","dialogsList","height","MessagesDesktop"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport styles from './Messages.module.css'\r\nimport DialogWithUser from './DialogsList/DialogWithUser'\r\nimport DialogSession from './DialogSession'\r\nimport ScrollbarHOC from '../../common/HOCScrollBar/HOCScrollbarCusctom'\r\nimport { Switch } from 'react-router'\r\nimport { Route } from 'react-router-dom'\r\nimport EmptyDialogMessages from './EmpyDialogSession'\r\n\r\n\r\n\r\n\r\n\r\nconst Messages = ({ dialogItemsData, setSearch, dialogsFromSearch, ...props }) => {\r\n\r\n    const [searchWord, setSearchWord] = useState('');\r\n    const [isSearchMode, setSearchMode] = useState(false);\r\n    const breakpoint= 790;\r\n\r\n    useEffect(() => {\r\n        const outSearhCheck = (e) => {\r\n            if (e.target !== searchInput.current && e.target !== dialogRef.current) {\r\n                outSearch()\r\n            }\r\n\r\n        }\r\n        if (isSearchMode) {\r\n            document.addEventListener('click', outSearhCheck)\r\n        }\r\n        else {\r\n            document.removeEventListener('click', outSearhCheck)\r\n        }\r\n        return () => {\r\n            document.removeEventListener('click', outSearhCheck)\r\n        }\r\n    }, [isSearchMode])\r\n\r\n    const searchInput = useRef();\r\n    const dialogRef = useRef();\r\n\r\n    const handleSearch = (e) => {\r\n        const word = e.currentTarget.value;\r\n        setSearchWord(word);\r\n        if (word && word.trim() !== '') {\r\n            setSearch(word)\r\n            setSearchMode(true)\r\n        }\r\n    }\r\n    const outSearch = () => {\r\n        setSearchMode(false)\r\n        setSearchWord('')\r\n    }\r\n\r\n    const currentDialogId = +props.match.params.userId ? +props.match.params.userId : 0;\r\n    const currentDialog = currentDialogId && dialogItemsData[dialogItemsData.findIndex((i) => { return i.userId === currentDialogId })];\r\n\r\n    const dialogItems = dialogItemsData.map((item, index) => <DialogWithUser avatar={item.avatar} currentDialogId={currentDialogId}\r\n        date={item.messages[item.messages.length - 1].date} isYoursMessage={item.messages[item.messages.length - 1].right}\r\n        lastMessage={item.messages[item.messages.length - 1].message} key={index + 1} name={item.name} id={item.userId} />)\r\n\r\n    const dialogItemsSearch = isSearchMode && dialogsFromSearch.map((item, index) => <DialogWithUser dialogRef={dialogRef} isSearchMode={isSearchMode}\r\n        avatar={item.avatar} outSearch={outSearch} lastMessage={item.messages[item.messages.length - 1].message}\r\n        date={item.messages[item.messages.length - 1].date} isYoursMessage={item.messages[item.messages.length - 1].right}\r\n        key={index + 1} name={item.name} id={item.userId} currentDialogId={currentDialogId} />)\r\n\r\n\r\n\r\n    return ResponsiveLayout(breakpoint, renderDesktop, renderMobile, {currentDialogId,currentDialog,dialogItemsSearch,dialogItems,handleSearch,isSearchMode,searchInput,searchWord, ...props} )\r\n}\r\n\r\n\r\nconst ResponsiveLayout = ({ breakpoint, renderDesktop, renderMobile, props}) => {\r\n    const [width, setWidth] = useState(window.innerWidth)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setWidth(window.innerWidth)\r\n        }\r\n        window.addEventListener('resize', handleResize)\r\n        return () => { window.removeEventListener('resize', handleResize) }\r\n    }, [])\r\n    return (width > breakpoint ? renderDesktop(props) : renderMobile(props))\r\n}\r\n\r\nconst renderDesktop = (props) => {\r\n    return <MessagesDesktop {...props} />\r\n}\r\nconst renderMobile = (props) => {\r\n    return <MessagesMobile {...props} />\r\n}\r\n\r\nconst MessagesMobile = ({ currentDialogId, isSearchMode, currentDialog, searchInput, searchWord, dialogItemsSearch, dialogItems,handleSearch, ...props }) => {\r\n\r\n    return <div className={styles.messagesMobile} >\r\n\r\n        {!!currentDialogId &&\r\n            <Switch>\r\n                <Route exact path={`/messages/`} render={() => <EmptyDialogMessages />} />\r\n                <Route path={`/:userId`} render={() => <DialogSession valueMessage={props.valueMessage} isSearchMode={isSearchMode} userId={currentDialogId}\r\n                    sendMessage={props.sendMessage} currentDialog={currentDialog} isFetching={props.isFetching} getUserForMessages={props.getUserForMessages}\r\n                    userForMessage={props.userForMessage} setNewDialog={props.setNewDialog} setUserForMessages={props.setUserForMessages} />} />\r\n\r\n            </Switch>\r\n\r\n        }\r\n\r\n        {!currentDialogId && <div className={styles.dialogItems}>\r\n            <div className={styles.dialogSearch}>\r\n                <input ref={searchInput} placeholder='Search' className={styles.searchInput} value={searchWord} onChange={e => handleSearch(e)} type=\"text\" name=\"\" id=\"\" />\r\n            </div>\r\n            <div className={styles.dialogsList}>\r\n                <ScrollbarHOC children={isSearchMode ? dialogItemsSearch : dialogItems} removeTrackYWhenNotUsed={true} style={{ width: \"100%\", height: \"85vh\" }} />\r\n            </div>\r\n        </div>}\r\n\r\n    </div>\r\n\r\n}\r\nconst MessagesDesktop = ({ currentDialogId, isSearchMode, currentDialog, searchInput, searchWord, dialogItemsSearch, dialogItems, handleSearch, ...props }) => {\r\n    return <div className={styles.messages} >\r\n\r\n        <Switch>\r\n            <Route exact path={`/messages/`} render={() => <EmptyDialogMessages />} />\r\n            <Route path={`/:userId`} render={() => <DialogSession valueMessage={props.valueMessage} isSearchMode={isSearchMode} userId={currentDialogId}\r\n                sendMessage={props.sendMessage} currentDialog={currentDialog} isFetching={props.isFetching} getUserForMessages={props.getUserForMessages}\r\n                userForMessage={props.userForMessage} setNewDialog={props.setNewDialog} setUserForMessages={props.setUserForMessages} />} />\r\n\r\n        </Switch>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div className={styles.dialogItems}>\r\n            <div className={styles.dialogSearch}>\r\n                <input ref={searchInput} placeholder='Search' className={styles.searchInput} value={searchWord} onChange={e => handleSearch(e)} type=\"text\" name=\"\" id=\"\" />\r\n            </div>\r\n            <div className={styles.dialogsList}>\r\n                <ScrollbarHOC children={isSearchMode ? dialogItemsSearch : dialogItems} removeTrackYWhenNotUsed={true} style={{ width: \"100%\", height: \"85vh\" }} />\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default Messages;"]},"metadata":{},"sourceType":"module"}