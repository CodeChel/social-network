{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Profile\\\\ProfileContainer.jsx\";\nimport React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { setUserProfile, sendPost, updatePost, getProfileThunk, getStatusThunk, updateStatusThunk } from './../../redux/profile-reducer';\nimport { withRouter } from 'react-router-dom';\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.authId;\n    }\n\n    this.props.getProfileThunk(userId);\n    this.props.getStatusThunk(userId);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.userId !== this.props.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return React.createElement(Profile, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  ProfilePage: state.ProfilePage,\n  profile: state.ProfilePage.profile,\n  status: state.ProfilePage.status,\n  posts: state.ProfilePage.posts,\n  isAuth: state.auth.isAuth,\n  authId: state.auth.id\n});\n\nexport default compose(connect(mapStateToProps, {\n  setUserProfile,\n  sendPost,\n  getProfileThunk,\n  getStatusThunk,\n  updateStatusThunk\n}), withRouter, withAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Profile\\ProfileContainer.jsx"],"names":["React","Profile","connect","setUserProfile","sendPost","updatePost","getProfileThunk","getStatusThunk","updateStatusThunk","withRouter","withAuthRedirect","compose","ProfileContainer","Component","refreshProfile","userId","props","match","params","authId","componentDidUpdate","prevProps","prevState","render","mapStateToProps","state","ProfilePage","profile","status","posts","isAuth","auth","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,QAAzB,EAAmCC,UAAnC,EAA+CC,eAA/C,EAAgEC,cAAhE,EAAgFC,iBAAhF,QAAyG,+BAAzG;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,MAAMC,gBAAN,SAA+BZ,KAAK,CAACa,SAArC,CAA+C;AAC1CC,EAAAA,cAAc,GAAE;AACb,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,MAApB;AACH;;AAED,SAAKH,KAAL,CAAWV,eAAX,CAA2BS,MAA3B;AACA,SAAKC,KAAL,CAAWT,cAAX,CAA0BQ,MAA1B;AACH;;AAEDK,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACpC,QAAGD,SAAS,CAACN,MAAV,KAAqB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAhD,EAAuD;AACnD,WAAKD,cAAL;AACH;AACJ;;AACDS,EAAAA,MAAM,GAAG;AACL,WAAO,oBAAC,OAAD,oBAAa,KAAKP,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH;;AAlB0C;;AAsB/C,MAAMQ,eAAe,GAAIC,KAAD,KAAY;AAChCC,EAAAA,WAAW,EAAED,KAAK,CAACC,WADa;AAEhCC,EAAAA,OAAO,EAAEF,KAAK,CAACC,WAAN,CAAkBC,OAFK;AAGhCC,EAAAA,MAAM,EAAEH,KAAK,CAACC,WAAN,CAAkBE,MAHM;AAIhCC,EAAAA,KAAK,EAAEJ,KAAK,CAACC,WAAN,CAAkBG,KAJO;AAKhCC,EAAAA,MAAM,EAAEL,KAAK,CAACM,IAAN,CAAWD,MALa;AAMhCX,EAAAA,MAAM,EAAEM,KAAK,CAACM,IAAN,CAAWC;AANa,CAAZ,CAAxB;;AAUC,eAAerB,OAAO,CACnBT,OAAO,CAACsB,eAAD,EAAkB;AAAErB,EAAAA,cAAF;AAAkBC,EAAAA,QAAlB;AAA6BE,EAAAA,eAA7B;AAA8CC,EAAAA,cAA9C;AAA8DC,EAAAA;AAA9D,CAAlB,CADY,EAEnBC,UAFmB,EAGnBC,gBAHmB,CAAP,CAIdE,gBAJc,CAAf","sourcesContent":["import React from 'react';\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux';\r\nimport { setUserProfile, sendPost, updatePost, getProfileThunk, getStatusThunk, updateStatusThunk } from './../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n     refreshProfile(){\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authId\r\n        }\r\n\r\n        this.props.getProfileThunk(userId);\r\n        this.props.getStatusThunk(userId);\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevProps.userId !== this.props.match.params.userId){\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n    render() {\r\n        return <Profile {...this.props} />\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ProfilePage: state.ProfilePage,\r\n    profile: state.ProfilePage.profile,\r\n    status: state.ProfilePage.status,\r\n    posts: state.ProfilePage.posts,\r\n    isAuth: state.auth.isAuth,\r\n    authId: state.auth.id\r\n})\r\n\r\n\r\n export default compose(\r\n    connect(mapStateToProps, { setUserProfile, sendPost,  getProfileThunk, getStatusThunk, updateStatusThunk }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);"]},"metadata":{},"sourceType":"module"}