{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\common\\\\EmojiPicker\\\\EmojiPicker.jsx\";\nimport React, { useState } from 'react';\nimport 'emoji-mart/css/emoji-mart.css';\nimport { Picker } from 'emoji-mart';\nimport { change } from 'redux-form';\n\nconst EmojiPicker = (_ref) => {\n  let formName = _ref.formName,\n      fieldName = _ref.fieldName,\n      Form = _ref.Form,\n      styles = _ref.styles,\n      props = _objectWithoutProperties(_ref, [\"formName\", \"fieldName\", \"Form\", \"styles\"]);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        emojiPickerMode = _useState2[0],\n        setEPMode = _useState2[1];\n\n  const addEmoji = e => {\n    const sym = e.unified.split('-');\n    const codesArray = [];\n    sym.map(el => codesArray.push('0x' + el));\n    const emoji = String.fromCodePoint(...codesArray);\n    props.dispatch(change(formName, fieldName, Form.values ? Form.values[fieldName] + emoji : emoji));\n  };\n\n  return React.createElement(\"div\", {\n    onMouseEnter: () => {\n      setEPMode(true);\n    },\n    onMouseLeave: () => {\n      setEPMode(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    role: \"button\",\n    className: styles.buttomEmoji,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), emojiPickerMode && React.createElement(Picker, {\n    style: {\n      position: 'absolute',\n      bottom: '80px',\n      right: '20px'\n    },\n    onSelect: addEmoji,\n    native: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n};\n\nexport default EmojiPicker;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\common\\EmojiPicker\\EmojiPicker.jsx"],"names":["React","useState","Picker","change","EmojiPicker","formName","fieldName","Form","styles","props","emojiPickerMode","setEPMode","addEmoji","e","sym","unified","split","codesArray","map","el","push","emoji","String","fromCodePoint","dispatch","values","buttomEmoji","position","bottom","right"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,+BAAP;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAAUC,MAAV,QAAwB,YAAxB;;AAGA,MAAMC,WAAW,GAAG,UAAkD;AAAA,MAAhDC,QAAgD,QAAhDA,QAAgD;AAAA,MAAtCC,SAAsC,QAAtCA,SAAsC;AAAA,MAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,MAArBC,MAAqB,QAArBA,MAAqB;AAAA,MAAXC,KAAW;;AAAA,oBAC7BR,QAAQ,CAAC,KAAD,CADqB;AAAA;AAAA,QAC3DS,eAD2D;AAAA,QAC1CC,SAD0C;;AAGlE,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACpB,UAAMC,GAAG,GAAGD,CAAC,CAACE,OAAF,CAAUC,KAAV,CAAgB,GAAhB,CAAZ;AACA,UAAMC,UAAU,GAAG,EAAnB;AAEAH,IAAAA,GAAG,CAACI,GAAJ,CAAQC,EAAE,IAAIF,UAAU,CAACG,IAAX,CAAgB,OAAOD,EAAvB,CAAd;AACA,UAAME,KAAK,GAAGC,MAAM,CAACC,aAAP,CAAqB,GAAGN,UAAxB,CAAd;AAEAR,IAAAA,KAAK,CAACe,QAAN,CAAerB,MAAM,CAACE,QAAD,EAAWC,SAAX,EAAsBC,IAAI,CAACkB,MAAL,GAAclB,IAAI,CAACkB,MAAL,CAAYnB,SAAZ,IAAyBe,KAAvC,GAA+CA,KAArE,CAArB;AACH,GARD;;AAUA,SAAO;AAAK,IAAA,YAAY,EAAE,MAAM;AAAEV,MAAAA,SAAS,CAAC,IAAD,CAAT;AAAiB,KAA5C;AAA8C,IAAA,YAAY,EAAE,MAAM;AAAEA,MAAAA,SAAS,CAAC,KAAD,CAAT;AAAkB,KAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,SAAS,EAAEH,MAAM,CAACkB,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,EAEFhB,eAAe,IAAI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEiB,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,MAAM,EAAE,MAAhC;AAAwCC,MAAAA,KAAK,EAAE;AAA/C,KAAf;AAAwE,IAAA,QAAQ,EAAEjB,QAAlF;AAA4F,IAAA,MAAM,EAAE,IAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFjB,CAAP;AAKH,CAlBD;;AAoBA,eAAeR,WAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { Picker } from 'emoji-mart'\r\nimport {  change } from 'redux-form'\r\n\r\n\r\nconst EmojiPicker = ({formName, fieldName, Form, styles,...props}) => {\r\n    const [emojiPickerMode, setEPMode] = useState(false);\r\n\r\n    const addEmoji = (e) => {\r\n        const sym = e.unified.split('-')\r\n        const codesArray = []\r\n\r\n        sym.map(el => codesArray.push('0x' + el))\r\n        const emoji = String.fromCodePoint(...codesArray)\r\n\r\n        props.dispatch(change(formName, fieldName, Form.values ? Form.values[fieldName] + emoji : emoji));\r\n    }\r\n\r\n    return <div onMouseEnter={() => { setEPMode(true) }} onMouseLeave={() => { setEPMode(false) }}>\r\n        <span role='button' className={styles.buttomEmoji}></span>\r\n        {emojiPickerMode && <Picker style={{ position: 'absolute', bottom: '80px', right: '20px' }} onSelect={addEmoji} native={true} />}\r\n    </div>\r\n\r\n}\r\n\r\nexport default EmojiPicker;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}