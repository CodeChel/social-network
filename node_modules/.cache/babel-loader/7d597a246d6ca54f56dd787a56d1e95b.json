{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Profile\\\\ProfileContainer.jsx\";\nimport React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { resetProfile, setUserProfile, sendPost, savePhotoThunk, getProfileThunk, getStatusThunk, updateStatusThunk, saveProfileData, setEditProfile, getFollowedThunk, followUnfollow } from './../../redux/profile-reducer';\nimport { withRouter } from 'react-router-dom';\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\nimport { profileStatus, profilePosts, getIsAuth, getAuthId, getIsEditMode, getProfile, getFollowed } from './profile-selectors';\nimport Preloader from '../common/Preloader/Preloader';\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n    this.props.getProfileThunk(userId);\n    this.props.getStatusThunk(userId);\n    this.props.getFollowedThunk(userId);\n  }\n\n  componentWillUnmount() {\n    this.props.resetProfile();\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.match.params.userId !== this.props.match.params.userId) {\n      this.props.resetProfile();\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    console.log('render');\n    return React.createElement(React.Fragment, null, isFetching && React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Profile, Object.assign({}, this.props, {\n      userId: this.props.match.params.userId,\n      isMyPage: this.props.authId == this.props.match.params.userId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  profile: getProfile(state),\n  status: profileStatus(state),\n  posts: profilePosts(state),\n  isAuth: getIsAuth(state),\n  authId: getAuthId(state),\n  isEditMode: getIsEditMode(state),\n  isFollowed: getFollowed(state),\n  isFetching: getIsFetching(state)\n});\n\nexport default compose(connect(mapStateToProps, {\n  setUserProfile,\n  sendPost,\n  getProfileThunk,\n  getStatusThunk,\n  updateStatusThunk,\n  savePhotoThunk,\n  saveProfileData,\n  setEditProfile,\n  resetProfile,\n  getFollowedThunk,\n  followUnfollow\n}), withRouter, withAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Profile\\ProfileContainer.jsx"],"names":["React","Profile","connect","resetProfile","setUserProfile","sendPost","savePhotoThunk","getProfileThunk","getStatusThunk","updateStatusThunk","saveProfileData","setEditProfile","getFollowedThunk","followUnfollow","withRouter","withAuthRedirect","compose","profileStatus","profilePosts","getIsAuth","getAuthId","getIsEditMode","getProfile","getFollowed","Preloader","ProfileContainer","Component","refreshProfile","userId","props","match","params","componentWillUnmount","componentDidMount","console","log","componentDidUpdate","prevProps","prevState","render","isFetching","authId","mapStateToProps","state","profile","status","posts","isAuth","isEditMode","isFollowed","getIsFetching"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux';\r\nimport { resetProfile, setUserProfile, sendPost, savePhotoThunk, getProfileThunk, getStatusThunk, updateStatusThunk, saveProfileData, setEditProfile, getFollowedThunk, followUnfollow } from './../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { profileStatus, profilePosts, getIsAuth, getAuthId, getIsEditMode, getProfile, getFollowed } from './profile-selectors';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    \r\n     refreshProfile(){\r\n         \r\n        let userId = this.props.match.params.userId;\r\n        this.props.getProfileThunk(userId);\r\n        this.props.getStatusThunk(userId);\r\n        this.props.getFollowedThunk(userId);\r\n    }\r\n    componentWillUnmount(){\r\n        this.props.resetProfile();\r\n    }\r\n    componentDidMount(){\r\n        console.log('componentDidMount');\r\n        this.refreshProfile()\r\n        \r\n    }\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevProps.match.params.userId !== this.props.match.params.userId){\r\n            this.props.resetProfile();\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n    render() {\r\n        console.log('render');\r\n        return <>\r\n                {isFetching && < Preloader/>}\r\n                <Profile {...this.props} userId={this.props.match.params.userId}  isMyPage={this.props.authId == this.props.match.params.userId}   />\r\n            </>\r\n    }   \r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: getProfile(state),\r\n    status: profileStatus(state),\r\n    posts: profilePosts(state),\r\n    isAuth: getIsAuth(state),\r\n    authId: getAuthId(state),\r\n    isEditMode: getIsEditMode(state),\r\n    isFollowed: getFollowed(state),\r\n    isFetching: getIsFetching(state)\r\n})\r\n\r\n\r\n export default compose(\r\n    connect(mapStateToProps, { setUserProfile, sendPost,  getProfileThunk, getStatusThunk, \r\n        updateStatusThunk, savePhotoThunk, saveProfileData, setEditProfile, resetProfile, getFollowedThunk, followUnfollow }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);"]},"metadata":{},"sourceType":"module"}