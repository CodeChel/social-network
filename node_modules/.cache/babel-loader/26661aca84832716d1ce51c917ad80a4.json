{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Messages-container\\\\Messages\\\\Messages.jsx\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport styles from './Messages.module.css';\nimport DialogWithUser from './DialogsList/DialogWithUser';\nimport DialogSession from './DialogSession';\nimport ScrollbarHOC from '../../common/HOCScrollBar/HOCScrollbarCusctom';\nimport { Switch } from 'react-router';\nimport { withRouter, HashRouter, Route, Redirect } from 'react-router-dom';\nimport EmptyDialogMessages from './EmpyDialogSession';\n\nconst ResponsiveLayout = ({\n  breakpoint,\n  renderDesktop,\n  renderMobile,\n  props\n}) => {\n  const _useState = useState(window.innerWidth),\n        _useState2 = _slicedToArray(_useState, 2),\n        width = _useState2[0],\n        setWidth = _useState2[1];\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return width > breakpoint ? renderDesktop(props) : renderMobile(props);\n};\n\nconst renderDesktop = props => {\n  return React.createElement(MessagesDesktop, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n};\n\nconst renderMobile = props => {\n  return React.createElement(MessagesMobile, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n};\n\nconst Messages = props => {\n  const breakpoint = 680;\n  return ResponsiveLayout({\n    breakpoint,\n    renderDesktop,\n    renderMobile,\n    props\n  });\n};\n\nconst MessagesDesktop = (_ref) => {\n  let dialogItemsData = _ref.dialogItemsData,\n      search = _ref.search,\n      dialogsFromSearch = _ref.dialogsFromSearch,\n      props = _objectWithoutProperties(_ref, [\"dialogItemsData\", \"search\", \"dialogsFromSearch\"]);\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        searchWord = _useState4[0],\n        setSearchWord = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isSearchMode = _useState6[0],\n        setSearchMode = _useState6[1];\n\n  useEffect(() => {\n    const outSearhCheck = e => {\n      if (e.target !== searchInput.current && e.target !== dialogRef.current) {\n        outSearch();\n      }\n    };\n\n    if (isSearchMode) {\n      document.addEventListener('click', outSearhCheck);\n    } else {\n      document.removeEventListener('click', outSearhCheck);\n    }\n\n    return () => {\n      document.removeEventListener('click', outSearhCheck);\n    };\n  }, [isSearchMode]);\n  const searchInput = useRef();\n  const dialogRef = useRef();\n\n  const handleSearch = e => {\n    const word = e.currentTarget.value;\n    setSearchWord(word);\n\n    if (word && word.trim() !== '') {\n      search(word);\n      setSearchMode(true);\n    }\n  };\n\n  const outSearch = () => {\n    setSearchMode(false);\n    setSearchWord('');\n  };\n\n  const currentDialogId = props.match.params.userId ? props.match.params.userId : 0;\n  const dialogItems = dialogItemsData.map((item, index) => React.createElement(DialogWithUser, {\n    currentDialogId: currentDialogId,\n    avatar: item.avatar,\n    date: item.messages[item.messages.length - 1].date,\n    isYoursMessage: item.messages[item.messages.length - 1].right,\n    lastMessage: item.messages[item.messages.length - 1].message,\n    setDialogID: props.setDialogID,\n    key: index + 1,\n    name: item.name,\n    id: item.userId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }));\n  const dialogItemsSearch = isSearchMode && dialogsFromSearch.map((item, index) => React.createElement(DialogWithUser, {\n    dialogRef: dialogRef,\n    isSearchMode: isSearchMode,\n    avatar: item.avatar,\n    outSearch: outSearch,\n    lastMessage: item.messages[item.messages.length - 1].message,\n    date: item.messages[item.messages.length - 1].date,\n    isYoursMessage: item.messages[item.messages.length - 1].right,\n    setDialogID: props.setDialogID,\n    key: index + 1,\n    name: item.name,\n    id: item.userId,\n    currentDialogId: currentDialogId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }));\n  const currentDialog = dialogItemsData[dialogItemsData.findIndex(i => {\n    return i.userId === currentDialogId;\n  })];\n  return React.createElement(\"div\", {\n    className: styles.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Route, {\n    to: \"/messages/:userId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(DialogSession, {\n    valueMessage: props.valueMessage,\n    isSearchMode: isSearchMode,\n    userId: currentDialog.userId,\n    sendMessage: props.sendMessage,\n    name: currentDialog.name,\n    avatar: currentDialog.avatar,\n    messages: currentDialog.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(Route, {\n    exact: true,\n    to: \"/messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(EmptyDialogMessages, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }))), React.createElement(Route, {\n    path: \"/messages/:userId?\",\n    render: DialogSession(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.dialogItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.dialogSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: searchInput,\n    placeholder: \"Search\",\n    className: styles.searchInput,\n    value: searchWord,\n    onChange: e => handleSearch(e),\n    type: \"text\",\n    name: \"\",\n    id: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.dialogsList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(ScrollbarHOC, {\n    children: isSearchMode ? dialogItemsSearch : dialogItems,\n    removeTrackYWhenNotUsed: true,\n    style: {\n      width: \"100%\",\n      height: \"85vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }))));\n};\n\nconst MessagesMobile = (_ref2) => {\n  let dialogItemsData = _ref2.dialogItemsData,\n      currentDialogId = _ref2.currentDialogId,\n      search = _ref2.search,\n      dialogsFromSearch = _ref2.dialogsFromSearch,\n      props = _objectWithoutProperties(_ref2, [\"dialogItemsData\", \"currentDialogId\", \"search\", \"dialogsFromSearch\"]);\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        searchWord = _useState8[0],\n        setSearchWord = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        isSearchMode = _useState10[0],\n        setSearchMode = _useState10[1];\n\n  useEffect(() => {\n    const outSearhCheck = e => {\n      if (e.target !== searchInput.current && e.target !== dialogRef.current) {\n        outSearch();\n      }\n    };\n\n    if (isSearchMode) {\n      document.addEventListener('click', outSearhCheck);\n    } else {\n      document.removeEventListener('click', outSearhCheck);\n    }\n\n    return () => {\n      document.removeEventListener('click', outSearhCheck);\n    };\n  }, [isSearchMode]);\n  const searchInput = useRef();\n  const dialogRef = useRef();\n\n  const handleSearch = e => {\n    const word = e.currentTarget.value;\n    setSearchWord(word);\n\n    if (word && word.trim() !== '') {\n      search(word);\n      setSearchMode(true);\n    }\n  };\n\n  const outSearch = () => {\n    setSearchMode(false);\n    setSearchWord('');\n  };\n\n  const dialogItems = dialogItemsData.map((item, index) => React.createElement(DialogWithUser, {\n    currentDialogId: currentDialogId,\n    avatar: item.avatar,\n    date: item.messages[item.messages.length - 1].date,\n    isYoursMessage: item.messages[item.messages.length - 1].right,\n    lastMessage: item.messages[item.messages.length - 1].message,\n    setDialogID: props.setDialogID,\n    key: index + 1,\n    name: item.name,\n    id: item.userId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }));\n  const dialogItemsSearch = isSearchMode && dialogsFromSearch.map((item, index) => React.createElement(DialogWithUser, {\n    dialogRef: dialogRef,\n    isSearchMode: isSearchMode,\n    currentDialogId: currentDialogId,\n    avatar: item.avatar,\n    outSearch: outSearch,\n    lastMessage: item.messages[item.messages.length - 1].message,\n    date: item.messages[item.messages.length - 1].date,\n    isYoursMessage: item.messages[item.messages.length - 1].right,\n    setDialogID: props.setDialogID,\n    key: index + 1,\n    name: item.name,\n    id: item.userId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }));\n  const currentDialog = dialogItemsData[dialogItemsData.findIndex(i => {\n    return i.userId === currentDialogId;\n  })];\n  return React.createElement(\"div\", {\n    className: styles.messagesMobile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, currentDialogId !== 0 ? React.createElement(DialogSession, {\n    isMobile: true,\n    valueMessage: props.valueMessage,\n    isSearchMode: isSearchMode,\n    userId: currentDialog.userId,\n    sendMessage: props.sendMessage,\n    name: currentDialog.name,\n    avatar: currentDialog.avatar,\n    messages: currentDialog.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: styles.dialogItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.dialogSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: searchInput,\n    placeholder: \"Search\",\n    className: styles.searchInput,\n    value: searchWord,\n    onChange: e => handleSearch(e),\n    type: \"text\",\n    name: \"\",\n    id: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.dialogsList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(ScrollbarHOC, {\n    children: isSearchMode ? dialogItemsSearch : dialogItems,\n    removeTrackYWhenNotUsed: true,\n    style: {\n      width: \"100%\",\n      height: \"85vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }))));\n};\n\nexport default Messages;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Messages-container\\Messages\\Messages.jsx"],"names":["React","useState","useRef","useEffect","styles","DialogWithUser","DialogSession","ScrollbarHOC","Switch","withRouter","HashRouter","Route","Redirect","EmptyDialogMessages","ResponsiveLayout","breakpoint","renderDesktop","renderMobile","props","window","innerWidth","width","setWidth","handleResize","addEventListener","removeEventListener","Messages","MessagesDesktop","dialogItemsData","search","dialogsFromSearch","searchWord","setSearchWord","isSearchMode","setSearchMode","outSearhCheck","e","target","searchInput","current","dialogRef","outSearch","document","handleSearch","word","currentTarget","value","trim","currentDialogId","match","params","userId","dialogItems","map","item","index","avatar","messages","length","date","right","message","setDialogID","name","dialogItemsSearch","currentDialog","findIndex","i","valueMessage","sendMessage","dialogSearch","dialogsList","height","MessagesMobile","messagesMobile"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport styles from './Messages.module.css'\r\nimport DialogWithUser from './DialogsList/DialogWithUser'\r\nimport DialogSession from './DialogSession'\r\nimport ScrollbarHOC from '../../common/HOCScrollBar/HOCScrollbarCusctom'\r\nimport { Switch } from 'react-router'\r\nimport { withRouter, HashRouter, Route, Redirect } from 'react-router-dom'\r\nimport EmptyDialogMessages from './EmpyDialogSession'\r\n\r\nconst ResponsiveLayout = ({ breakpoint, renderDesktop, renderMobile, props }) => {\r\n    const [width, setWidth] = useState(window.innerWidth)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setWidth(window.innerWidth)\r\n        }\r\n        window.addEventListener('resize', handleResize)\r\n        return () => { window.removeEventListener('resize', handleResize) }\r\n    }, [])\r\n    return (width > breakpoint ? renderDesktop(props) : renderMobile(props))\r\n}\r\n\r\nconst renderDesktop = (props) => {\r\n    return <MessagesDesktop {...props} />\r\n}\r\nconst renderMobile = (props) => {\r\n    return <MessagesMobile {...props} />\r\n}\r\nconst Messages = (props) => {\r\n\r\n    const breakpoint = 680;\r\n    return ResponsiveLayout({ breakpoint, renderDesktop, renderMobile, props })\r\n\r\n}\r\n\r\nconst MessagesDesktop = ({ dialogItemsData, search, dialogsFromSearch, ...props }) => {\r\n\r\n    const [searchWord, setSearchWord] = useState('');\r\n    const [isSearchMode, setSearchMode] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const outSearhCheck = (e) => {\r\n\r\n            if (e.target !== searchInput.current && e.target !== dialogRef.current) {\r\n                outSearch()\r\n            }\r\n\r\n        }\r\n        if (isSearchMode) {\r\n            document.addEventListener('click', outSearhCheck)\r\n        }\r\n        else {\r\n            document.removeEventListener('click', outSearhCheck)\r\n        }\r\n        return () => {\r\n            document.removeEventListener('click', outSearhCheck)\r\n        }\r\n    }, [isSearchMode])\r\n\r\n    const searchInput = useRef();\r\n    const dialogRef = useRef();\r\n\r\n    const handleSearch = (e) => {\r\n        const word = e.currentTarget.value;\r\n        setSearchWord(word);\r\n        if (word && word.trim() !== '') {\r\n            search(word)\r\n            setSearchMode(true)\r\n        }\r\n    }\r\n    const outSearch = () => {\r\n        setSearchMode(false)\r\n        setSearchWord('')\r\n    }\r\n\r\n    const currentDialogId = props.match.params.userId ? props.match.params.userId : 0;\r\n\r\n    const dialogItems = dialogItemsData.map((item, index) => <DialogWithUser currentDialogId={currentDialogId} avatar={item.avatar}\r\n        date={item.messages[item.messages.length - 1].date} isYoursMessage={item.messages[item.messages.length - 1].right}\r\n        lastMessage={item.messages[item.messages.length - 1].message} setDialogID={props.setDialogID} key={index + 1} name={item.name} id={item.userId} />)\r\n\r\n    const dialogItemsSearch = isSearchMode && dialogsFromSearch.map((item, index) => <DialogWithUser dialogRef={dialogRef} isSearchMode={isSearchMode}\r\n        avatar={item.avatar} outSearch={outSearch} lastMessage={item.messages[item.messages.length - 1].message}\r\n        date={item.messages[item.messages.length - 1].date} isYoursMessage={item.messages[item.messages.length - 1].right} setDialogID={props.setDialogID}\r\n        key={index + 1} name={item.name} id={item.userId} currentDialogId={currentDialogId} />)\r\n\r\n    const currentDialog = dialogItemsData[dialogItemsData.findIndex((i) => { return i.userId === currentDialogId })];\r\n   \r\n    return <div className={styles.messages} >\r\n\r\n        \r\n            <Switch>\r\n                <Route  to={`/messages/:userId`}>\r\n                    <DialogSession valueMessage={props.valueMessage} isSearchMode={isSearchMode} userId={currentDialog.userId}\r\n                    sendMessage={props.sendMessage} name={currentDialog.name} avatar={currentDialog.avatar} messages={currentDialog.messages} />\r\n                </Route>\r\n                <Route exact to='/messages'>\r\n                    <EmptyDialogMessages /> \r\n                </Route>  \r\n            </Switch>\r\n            \r\n\r\n             \r\n\r\n        \r\n        <Route  path='/messages/:userId?' render={DialogSession()} />\r\n\r\n\r\n        <div className={styles.dialogItems}>\r\n            <div className={styles.dialogSearch}>\r\n                <input ref={searchInput} placeholder='Search' className={styles.searchInput} value={searchWord} onChange={e => handleSearch(e)} type=\"text\" name=\"\" id=\"\" />\r\n            </div>\r\n            <div className={styles.dialogsList}>\r\n                <ScrollbarHOC children={isSearchMode ? dialogItemsSearch : dialogItems} removeTrackYWhenNotUsed={true} style={{ width: \"100%\", height: \"85vh\" }} />\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n}\r\nconst MessagesMobile = ({ dialogItemsData, currentDialogId, search, dialogsFromSearch, ...props }) => {\r\n    const [searchWord, setSearchWord] = useState('');\r\n    const [isSearchMode, setSearchMode] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const outSearhCheck = (e) => {\r\n\r\n            if (e.target !== searchInput.current && e.target !== dialogRef.current) {\r\n                outSearch()\r\n            }\r\n\r\n        }\r\n        if (isSearchMode) {\r\n            document.addEventListener('click', outSearhCheck)\r\n        }\r\n        else {\r\n            document.removeEventListener('click', outSearhCheck)\r\n        }\r\n        return () => {\r\n            document.removeEventListener('click', outSearhCheck)\r\n        }\r\n    }, [isSearchMode])\r\n\r\n    const searchInput = useRef();\r\n    const dialogRef = useRef();\r\n\r\n    const handleSearch = (e) => {\r\n        const word = e.currentTarget.value;\r\n        setSearchWord(word);\r\n        if (word && word.trim() !== '') {\r\n            search(word)\r\n            setSearchMode(true)\r\n        }\r\n    }\r\n    const outSearch = () => {\r\n        setSearchMode(false)\r\n        setSearchWord('')\r\n    }\r\n\r\n\r\n\r\n    const dialogItems = dialogItemsData.map((item, index) => <DialogWithUser currentDialogId={currentDialogId} avatar={item.avatar}\r\n        date={item.messages[item.messages.length - 1].date} isYoursMessage={item.messages[item.messages.length - 1].right}\r\n        lastMessage={item.messages[item.messages.length - 1].message} setDialogID={props.setDialogID} key={index + 1} name={item.name} id={item.userId} />)\r\n\r\n    const dialogItemsSearch = isSearchMode && dialogsFromSearch.map((item, index) => <DialogWithUser dialogRef={dialogRef} isSearchMode={isSearchMode}\r\n        currentDialogId={currentDialogId} avatar={item.avatar} outSearch={outSearch} lastMessage={item.messages[item.messages.length - 1].message}\r\n        date={item.messages[item.messages.length - 1].date} isYoursMessage={item.messages[item.messages.length - 1].right} setDialogID={props.setDialogID}\r\n        key={index + 1} name={item.name} id={item.userId} />)\r\n\r\n    const currentDialog = dialogItemsData[dialogItemsData.findIndex((i) => { return i.userId === currentDialogId })];\r\n\r\n\r\n    return <div className={styles.messagesMobile} >\r\n        {currentDialogId !== 0\r\n            ?\r\n\r\n            <DialogSession isMobile={true} valueMessage={props.valueMessage} isSearchMode={isSearchMode} userId={currentDialog.userId}\r\n                sendMessage={props.sendMessage} name={currentDialog.name} avatar={currentDialog.avatar} messages={currentDialog.messages} />\r\n\r\n\r\n\r\n\r\n\r\n            : <div className={styles.dialogItems}>\r\n                <div className={styles.dialogSearch}>\r\n                    <input ref={searchInput} placeholder='Search' className={styles.searchInput} value={searchWord} onChange={e => handleSearch(e)} type=\"text\" name=\"\" id=\"\" />\r\n                </div>\r\n                <div className={styles.dialogsList}>\r\n                    <ScrollbarHOC children={isSearchMode ? dialogItemsSearch : dialogItems} removeTrackYWhenNotUsed={true} style={{ width: \"100%\", height: \"85vh\" }} />\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Messages;"]},"metadata":{},"sourceType":"module"}