{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\common\\\\Paginator\\\\Paginator.jsx\";\nimport React, { useState } from 'react';\nimport styles from './paginator.module.css';\nimport cn from 'classnames';\n\nconst Paginator = ({\n  itemsTotalCount,\n  pageSize,\n  currentPage,\n  onPageChanged,\n  portionSize = 10\n}) => {\n  let pageCount = Math.ceil(itemsTotalCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pageCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pageCount / portionSize);\n\n  let _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      portionNumber = _useState2[0],\n      setPortionNumber = _useState2[1];\n\n  let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionNumber = portionNumber * portionSize;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, portionNumber > 1 && React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"RPEV\"), pages.filter(p => p >= leftPortionNumber && p <= rightPortionNumber).map(p => {\n    const classPage = currentPage === p ? styles.selectedPage : styles.items;\n    return currentPage === p ? React.createElement(\"span\", {\n      className: classPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, p) : React.createElement(\"span\", {\n      className: classPage,\n      onClick: e => {\n        onPageChanged(p);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, p);\n  }), pageCount > portionNumber && React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"NEXT\"));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\common\\Paginator\\Paginator.jsx"],"names":["React","useState","styles","cn","Paginator","itemsTotalCount","pageSize","currentPage","onPageChanged","portionSize","pageCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","filter","p","map","classPage","selectedPage","items","e"],"mappings":";;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,EAAP,MAAe,YAAf;;AAIA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA,WAA7B;AAA0CC,EAAAA,aAA1C;AAAyDC,EAAAA,WAAW,GAAI;AAAxE,CAAD,KAAkF;AAEhG,MAAIC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGC,QAA5B,CAAhB;AACA,MAAIO,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,SAArB,EAAgCI,CAAC,EAAjC,EAAqC;AACjCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AACD,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,SAAS,GAAGD,WAAtB,CAAnB;;AAPgG,kBAQxDR,QAAQ,CAAC,CAAD,CARgD;AAAA;AAAA,MAQ3FgB,aAR2F;AAAA,MAQ5EC,gBAR4E;;AAShG,MAAIC,iBAAiB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBR,WAAtB,GAAoC,CAA5D;AACA,MAAIW,kBAAkB,GAAGH,aAAa,GAAGR,WAAzC;AAGA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACDQ,aAAa,GAAG,CAAhB,IACE;AAAQ,IAAA,OAAO,EAAE,MAAI;AAACC,MAAAA,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;AAAkC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,EAIFJ,KAAK,CACLQ,MADA,CACOC,CAAC,IAAIA,CAAC,IAAIH,iBAAL,IAA0BG,CAAC,IAAIF,kBAD3C,EAEAG,GAFA,CAEID,CAAC,IAAI;AACN,UAAME,SAAS,GAAGjB,WAAW,KAAKe,CAAhB,GAAoBpB,MAAM,CAACuB,YAA3B,GAA0CvB,MAAM,CAACwB,KAAnE;AACA,WAAOnB,WAAW,KAAKe,CAAhB,GACD;AAAM,MAAA,SAAS,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BF,CAA7B,CADC,GAED;AAAM,MAAA,SAAS,EAAEE,SAAjB;AACE,MAAA,OAAO,EAAGG,CAAD,IAAO;AACZnB,QAAAA,aAAa,CAACc,CAAD,CAAb;AACH,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKAA,CALA,CAFN;AAQH,GAZA,CAJE,EAiBFZ,SAAS,GAAGO,aAAZ,IACG;AAAQ,IAAA,OAAO,EAAE,MAAM;AAACC,MAAAA,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;AAAkC,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBD,CAAP;AAsBH,CAnCD;;AAqCA,eAAeb,SAAf","sourcesContent":["\r\nimport React, {useState} from 'react';\r\nimport styles from './paginator.module.css'\r\nimport cn from 'classnames'\r\n\r\n\r\n\r\nconst Paginator = ({ itemsTotalCount, pageSize, currentPage, onPageChanged, portionSize =  10 }) => {\r\n\r\n    let pageCount = Math.ceil(itemsTotalCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pageCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div>\r\n        { portionNumber > 1 && \r\n            <button onClick={()=>{setPortionNumber(portionNumber-1)}}>RPEV</button>\r\n        }\r\n        {pages\r\n        .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n        .map(p => {\r\n            const classPage = currentPage === p ? styles.selectedPage : styles.items;\r\n            return currentPage === p\r\n                ? <span className={classPage}>{p}</span>\r\n                : <span className={classPage}\r\n                    onClick={(e) => {\r\n                        onPageChanged(p)\r\n                    }\r\n                    }\r\n                >{p}</span>\r\n        })}\r\n        {pageCount > portionNumber  && \r\n            <button onClick={() => {setPortionNumber(portionNumber+1)}} >NEXT</button>\r\n        }\r\n    </div>\r\n\r\n}\r\n\r\nexport default Paginator;      "]},"metadata":{},"sourceType":"module"}