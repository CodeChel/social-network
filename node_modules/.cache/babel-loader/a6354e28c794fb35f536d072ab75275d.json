{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { profileAPI } from '../API/api';\nimport { stopSubmit } from 'redux-form';\nconst SEND_POST = 'profile-reducer/SEND_POST';\nconst SET_USER_PROFILE = 'profile-reducer/SET_USER_PROFILE';\nconst SET_USER_STATUS = 'profile-reducer/SET_USER_STATUS';\nconst SET_PHOTO_PROFILE = 'profile-reducer/SET_PHOTO_PROFILE';\nlet initialState = {\n  posts: [],\n  currentTextPost: '',\n  profile: null,\n  status: '',\n  editProfile: false\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEND_POST:\n      return _objectSpread({}, state, {\n        posts: [...state.posts, {\n          text: action.post.postBody,\n          id: 1,\n          likesCount: 0\n        }]\n      });\n\n    case SET_USER_PROFILE:\n      return _objectSpread({}, state, {\n        profile: action.profile\n      });\n\n    case SET_USER_STATUS:\n      return _objectSpread({}, state, {\n        status: action.status\n      });\n\n    case SET_PHOTO_PROFILE:\n      return _objectSpread({}, state, {\n        profile: _objectSpread({}, state.profile, {\n          photos: action.photos\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const sendPost = post => ({\n  type: SEND_POST,\n  post\n});\nexport const setEditProfile = mode => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setUserStatus = status => ({\n  type: SET_USER_STATUS,\n  status\n});\nexport const getProfileThunk = userId => async dispatch => {\n  const data = await profileAPI.getProfile(userId);\n  dispatch(setUserProfile(data));\n};\n\nconst savePhotoSucсess = photos => ({\n  type: SET_PHOTO_PROFILE,\n  photos\n});\n\nexport const getStatusThunk = userId => async dispatch => {\n  const data = await profileAPI.getUserStatus(userId);\n  dispatch(setUserStatus(data));\n};\nexport const updateStatusThunk = status => async dispatch => {\n  const data = await profileAPI.updateUserStatus(status);\n\n  if (data.resultCode === 0) {\n    dispatch(setUserStatus(status));\n  }\n};\nexport const savePhotoThunk = photo => async dispatch => {\n  const data = await profileAPI.updatePhoto(photo);\n\n  if (data.resultCode === 0) {\n    debugger;\n    dispatch(savePhotoSucсess(data.data.photos));\n  }\n};\nexport const saveProfileData = profile => async (dispatch, getState) => {\n  const userId = getState().auth.id;\n  const response = await profileAPI.saveProfileData(profile);\n\n  if (response.resultCode === 0) {\n    dispatch(getProfileThunk(userId));\n  } else {\n    let number = response.messages[0].indexOf('>');\n    let test = response.messages[0].slice(number + 1, -1).toLowerCase();\n    dispatch(stopSubmit('edit-profile', {\n      'contacts': {\n        [test]: test + ' incorrect'\n      }\n    }));\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\redux\\profile-reducer.js"],"names":["profileAPI","stopSubmit","SEND_POST","SET_USER_PROFILE","SET_USER_STATUS","SET_PHOTO_PROFILE","initialState","posts","currentTextPost","profile","status","editProfile","profileReducer","state","action","type","text","post","postBody","id","likesCount","photos","sendPost","setEditProfile","mode","setUserProfile","setUserStatus","getProfileThunk","userId","dispatch","data","getProfile","savePhotoSucсess","getStatusThunk","getUserStatus","updateStatusThunk","updateUserStatus","resultCode","savePhotoThunk","photo","updatePhoto","saveProfileData","getState","auth","response","number","messages","indexOf","test","slice","toLowerCase"],"mappings":"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","sourcesContent":["import { profileAPI } from '../API/api'\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SEND_POST = 'profile-reducer/SEND_POST';\r\nconst SET_USER_PROFILE = 'profile-reducer/SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'profile-reducer/SET_USER_STATUS';\r\nconst SET_PHOTO_PROFILE = 'profile-reducer/SET_PHOTO_PROFILE';\r\n\r\nlet initialState = {\r\n    posts: [],\r\n    currentTextPost: '',\r\n    profile: null,\r\n    status: '',\r\n    editProfile: false\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, { text: action.post.postBody, id: 1, likesCount: 0 }],\r\n            }\r\n\r\n\r\n\r\n        case SET_USER_PROFILE:\r\n            return { ...state, profile: action.profile }\r\n        case SET_USER_STATUS:\r\n            return { ...state, status: action.status }\r\n        case SET_PHOTO_PROFILE:\r\n            return { ...state, profile: {...state.profile, photos: action.photos}}     \r\n        default: return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const sendPost = (post) => ({ type: SEND_POST, post });\r\nexport const setEditProfile = (mode) => ({ type: SET_USER_PROFILE, profile });\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\nexport const setUserStatus = (status) => ({ type: SET_USER_STATUS, status });\r\n\r\nexport const getProfileThunk = (userId) => async (dispatch) => {\r\n    const data = await (profileAPI.getProfile(userId));\r\n    dispatch(setUserProfile(data));\r\n\r\n}\r\nconst savePhotoSucсess = (photos) => ({type: SET_PHOTO_PROFILE, photos});\r\n\r\nexport const getStatusThunk = (userId) => async (dispatch) => {\r\n    const data = await (profileAPI.getUserStatus(userId));\r\n\r\n    dispatch(setUserStatus(data));\r\n\r\n}\r\nexport const updateStatusThunk = (status) => async (dispatch) => {\r\n    const data = await(profileAPI.updateUserStatus(status));\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n\r\n}\r\nexport const savePhotoThunk = (photo) => async (dispatch) => {\r\n    const data = await(profileAPI.updatePhoto(photo));\r\n\r\n    if (data.resultCode === 0) {\r\n        debugger;\r\n        dispatch(savePhotoSucсess(data.data.photos));\r\n    }\r\n\r\n}\r\nexport const saveProfileData = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    const response = await(profileAPI.saveProfileData(profile));\r\n    \r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(getProfileThunk(userId));\r\n    }else{\r\n        let number = response.messages[0].indexOf('>');\r\n        let test = response.messages[0].slice(number+1, -1).toLowerCase();\r\n        dispatch(stopSubmit('edit-profile', { 'contacts': {[test] : test + ' incorrect'}  }));\r\n    }\r\n}\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}