{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { profileAPI } from '../API/api';\nimport { stopSubmit } from 'redux-form';\nimport { usersAPI } from '../API/api';\nimport { async } from 'q';\nconst SEND_POST = 'profile-reducer/SEND_POST';\nconst SET_USER_PROFILE = 'profile-reducer/SET_USER_PROFILE';\nconst SET_USER_STATUS = 'profile-reducer/SET_USER_STATUS';\nconst SET_PHOTO_PROFILE = 'profile-reducer/SET_PHOTO_PROFILE';\nconst SET_EDIT_PROFILE = 'profile-reducer/SET_EDIT_PROFILE';\nconst RESET_USER_POFILE = 'profile-reducer/RESET_USER_POFILE';\nconst FOLLOW_UNFOLLOW_SUCCESS = 'profile-reducer/FOLLOW_UNFOLLOW_SUCCESS';\nconst TOGGLE_IS_FETCHING = 'profile-reducer/TOGGLE_IS_FETCHING';\nconst SEND_MESSAGE_MODE = 'profile-reducer/SEND_MESSAGE_MODE';\nconst SET_POPPUP_AVATAR = 'profile-reducer/SET_POPPUP_AVATAR';\nconst options = {\n  era: 'numeric',\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  weekday: 'long',\n  timezone: 'UTC',\n  hour: 'numeric',\n  minute: 'numeric',\n  second: 'numeric'\n};\nconst initialState = {\n  posts: [{\n    text: 'hello world!!',\n    id: 1,\n    likesCount: 2,\n    time: \"\".concat(new Date(2011, 0, 1, 0, 0, 0, 0).toLocaleString(\"en-US\", options))\n  }, {\n    text: 'Whats up??!',\n    id: 1,\n    likesCount: 2,\n    time: \"\".concat(new Date(2011, 0, 1, 0, 0, 0, 0).toLocaleString(\"en-US\", options))\n  }],\n  currentTextPost: '',\n  profile: null,\n  status: '',\n  isEditMode: false,\n  isFollowed: false,\n  isFetching: false,\n  sendMessageMode: false,\n  avatarPopup: false\n};\n\nconst profileReducer = (state = initialState, action) => {\n  debugger;\n\n  switch (action.type) {\n    case SEND_POST:\n      return _objectSpread({}, state, {\n        posts: [...state.posts, {\n          text: action.post.postBody,\n          id: 1,\n          likesCount: 0\n        }]\n      });\n\n    case SET_USER_PROFILE:\n      return _objectSpread({}, state, {\n        profile: action.profile\n      });\n\n    case SET_USER_STATUS:\n      return _objectSpread({}, state, {\n        status: action.status\n      });\n\n    case SET_PHOTO_PROFILE:\n      return _objectSpread({}, state, {\n        profile: _objectSpread({}, state.profile, {\n          photos: action.photos\n        })\n      });\n\n    case SET_EDIT_PROFILE:\n      return _objectSpread({}, state, {\n        isEditMode: action.mode\n      });\n\n    case RESET_USER_POFILE:\n      return initialState;\n\n    case FOLLOW_UNFOLLOW_SUCCESS:\n      return _objectSpread({}, state, {\n        isFollowed: action.isFollow\n      });\n\n    case TOGGLE_IS_FETCHING:\n      return _objectSpread({}, state, {\n        isFetching: action.isFetching\n      });\n\n    case SEND_MESSAGE_MODE:\n      return _objectSpread({}, state, {\n        sendMessageMode: action.isSendMode\n      });\n\n    case SET_POPPUP_AVATAR:\n      return _objectSpread({}, state, {\n        avatarPopup: action.isPopup\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const resetProfile = () => ({\n  type: RESET_USER_POFILE\n});\nexport const sendPost = post => ({\n  type: SEND_POST,\n  post\n});\nexport const setEditProfile = mode => ({\n  type: SET_EDIT_PROFILE,\n  mode\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setUserStatus = status => ({\n  type: SET_USER_STATUS,\n  status\n});\nexport const setFollowUnfollow = isFollow => ({\n  type: FOLLOW_UNFOLLOW_SUCCESS,\n  isFollow\n});\nexport const setMessageMode = isSendMode => ({\n  type: SEND_MESSAGE_MODE,\n  isSendMode\n});\nexport const setPopupAvatar = isPopup => ({\n  type: SET_POPPUP_AVATAR,\n  isPopup\n});\nexport const getProfileThunk = userId => async dispatch => {\n  const data = await profileAPI.getProfile(userId);\n  dispatch(setUserProfile(data));\n};\n\nconst savePhotoSucсess = photos => ({\n  type: SET_PHOTO_PROFILE,\n  photos\n});\n\nexport const getStatusThunk = userId => async dispatch => {\n  const data = await profileAPI.getUserStatus(userId);\n  dispatch(setUserStatus(data));\n};\nexport const updateStatusThunk = status => async dispatch => {\n  const data = await profileAPI.updateUserStatus(status);\n\n  if (data.resultCode === 0) {\n    dispatch(setUserStatus(status));\n  }\n};\nexport const savePhotoThunk = photo => async dispatch => {\n  const data = await profileAPI.updatePhoto(photo);\n\n  if (data.resultCode === 0) {\n    dispatch(savePhotoSucсess(data.data.photos));\n  }\n};\nexport const saveProfileData = profile => async (dispatch, getState) => {\n  const userId = getState().auth.id;\n  const response = await profileAPI.saveProfileData(profile);\n\n  if (response.resultCode === 0) {\n    dispatch(getProfileThunk(userId));\n    dispatch(setEditProfile(false));\n  } else {\n    let number = response.messages[0].indexOf('>');\n    let test = response.messages[0].slice(number + 1, -1).toLowerCase();\n    dispatch(stopSubmit('edit-profile', {\n      'contacts': {\n        [test]: test + ' incorrect'\n      }\n    }));\n  }\n};\nexport const getFollowedThunk = id => async dispatch => {\n  const data = await usersAPI.getFollow(id);\n  dispatch(setFollowUnfollow(data));\n};\nexport const followUnfollow = (isFollow, id) => async dispatch => {\n  dispatch(toggleIsFetching(true));\n  const data = isFollow ? await usersAPI.postFollow(id) : await usersAPI.deleteFollow(id);\n\n  if (data.resultCode === 0) {\n    dispatch(setFollowUnfollow(isFollow));\n    dispatch(toggleIsFetching(false));\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\redux\\profile-reducer.js"],"names":["profileAPI","stopSubmit","usersAPI","async","SEND_POST","SET_USER_PROFILE","SET_USER_STATUS","SET_PHOTO_PROFILE","SET_EDIT_PROFILE","RESET_USER_POFILE","FOLLOW_UNFOLLOW_SUCCESS","TOGGLE_IS_FETCHING","SEND_MESSAGE_MODE","SET_POPPUP_AVATAR","options","era","year","month","day","weekday","timezone","hour","minute","second","initialState","posts","text","id","likesCount","time","Date","toLocaleString","currentTextPost","profile","status","isEditMode","isFollowed","isFetching","sendMessageMode","avatarPopup","profileReducer","state","action","type","post","postBody","photos","mode","isFollow","isSendMode","isPopup","toggleIsFetching","resetProfile","sendPost","setEditProfile","setUserProfile","setUserStatus","setFollowUnfollow","setMessageMode","setPopupAvatar","getProfileThunk","userId","dispatch","data","getProfile","savePhotoSucсess","getStatusThunk","getUserStatus","updateStatusThunk","updateUserStatus","resultCode","savePhotoThunk","photo","updatePhoto","saveProfileData","getState","auth","response","number","messages","indexOf","test","slice","toLowerCase","getFollowedThunk","getFollow","followUnfollow","postFollow","deleteFollow"],"mappings":";AAAA,SAASA,UAAT,QAA2B,YAA3B;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,KAAT,QAAsB,GAAtB;AAGA,MAAMC,SAAS,GAAG,2BAAlB;AACA,MAAMC,gBAAgB,GAAG,kCAAzB;AACA,MAAMC,eAAe,GAAG,iCAAxB;AACA,MAAMC,iBAAiB,GAAG,mCAA1B;AACA,MAAMC,gBAAgB,GAAG,kCAAzB;AACA,MAAMC,iBAAiB,GAAG,mCAA1B;AACA,MAAMC,uBAAuB,GAAG,yCAAhC;AACA,MAAMC,kBAAkB,GAAG,oCAA3B;AACA,MAAMC,iBAAiB,GAAG,mCAA1B;AACA,MAAMC,iBAAiB,GAAG,mCAA1B;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,GAAG,EAAE,SADO;AAEZC,EAAAA,IAAI,EAAE,SAFM;AAGZC,EAAAA,KAAK,EAAE,MAHK;AAIZC,EAAAA,GAAG,EAAE,SAJO;AAKZC,EAAAA,OAAO,EAAE,MALG;AAMZC,EAAAA,QAAQ,EAAE,KANE;AAOZC,EAAAA,IAAI,EAAE,SAPM;AAQZC,EAAAA,MAAM,EAAE,SARI;AASZC,EAAAA,MAAM,EAAE;AATI,CAAhB;AAYA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CACH;AAAEC,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,EAAE,EAAE,CAA7B;AAAgCC,IAAAA,UAAU,EAAE,CAA5C;AAA+CC,IAAAA,IAAI,YAAK,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiCC,cAAjC,CAAgD,OAAhD,EAAyDjB,OAAzD,CAAL;AAAnD,GADG,EAEH;AAAEY,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,EAAE,EAAE,CAA3B;AAA8BC,IAAAA,UAAU,EAAE,CAA1C;AAA6CC,IAAAA,IAAI,YAAK,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiCC,cAAjC,CAAgD,OAAhD,EAAyDjB,OAAzD,CAAL;AAAjD,GAFG,CADU;AAIjBkB,EAAAA,eAAe,EAAE,EAJA;AAKjBC,EAAAA,OAAO,EAAE,IALQ;AAMjBC,EAAAA,MAAM,EAAE,EANS;AAOjBC,EAAAA,UAAU,EAAE,KAPK;AAQjBC,EAAAA,UAAU,EAAE,KARK;AASjBC,EAAAA,UAAU,EAAE,KATK;AAUjBC,EAAAA,eAAe,EAAE,KAVA;AAWjBC,EAAAA,WAAW,EAAE;AAXI,CAArB;;AAcA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGjB,YAAT,EAAuBkB,MAAvB,KAAkC;AACrD;;AACA,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKvC,SAAL;AACI,+BACOqC,KADP;AAEIhB,QAAAA,KAAK,EAAE,CAAC,GAAGgB,KAAK,CAAChB,KAAV,EAAiB;AAAEC,UAAAA,IAAI,EAAEgB,MAAM,CAACE,IAAP,CAAYC,QAApB;AAA8BlB,UAAAA,EAAE,EAAE,CAAlC;AAAqCC,UAAAA,UAAU,EAAE;AAAjD,SAAjB;AAFX;;AAOJ,SAAKvB,gBAAL;AACI,+BAAYoC,KAAZ;AAAmBR,QAAAA,OAAO,EAAES,MAAM,CAACT;AAAnC;;AACJ,SAAK3B,eAAL;AACI,+BAAYmC,KAAZ;AAAmBP,QAAAA,MAAM,EAAEQ,MAAM,CAACR;AAAlC;;AACJ,SAAK3B,iBAAL;AACI,+BAAYkC,KAAZ;AAAmBR,QAAAA,OAAO,oBAAOQ,KAAK,CAACR,OAAb;AAAsBa,UAAAA,MAAM,EAAEJ,MAAM,CAACI;AAArC;AAA1B;;AACJ,SAAKtC,gBAAL;AACI,+BAAYiC,KAAZ;AAAmBN,QAAAA,UAAU,EAAEO,MAAM,CAACK;AAAtC;;AACJ,SAAKtC,iBAAL;AACI,aAAOe,YAAP;;AACJ,SAAKd,uBAAL;AACI,+BAAY+B,KAAZ;AAAmBL,QAAAA,UAAU,EAAEM,MAAM,CAACM;AAAtC;;AACJ,SAAKrC,kBAAL;AACI,+BAAY8B,KAAZ;AAAmBJ,QAAAA,UAAU,EAAEK,MAAM,CAACL;AAAtC;;AACJ,SAAKzB,iBAAL;AACI,+BAAY6B,KAAZ;AAAmBH,QAAAA,eAAe,EAAEI,MAAM,CAACO;AAA3C;;AACJ,SAAKpC,iBAAL;AACI,+BAAY4B,KAAZ;AAAmBF,QAAAA,WAAW,EAAEG,MAAM,CAACQ;AAAvC;;AACJ;AAAS,aAAOT,KAAP;AA5Bb;AAgCH,CAlCD;;AAmCA,OAAO,MAAMU,gBAAgB,GAAId,UAAD,KAAiB;AAAEM,EAAAA,IAAI,EAAEhC,kBAAR;AAA4B0B,EAAAA;AAA5B,CAAjB,CAAzB;AACP,OAAO,MAAMe,YAAY,GAAG,OAAO;AAAET,EAAAA,IAAI,EAAElC;AAAR,CAAP,CAArB;AACP,OAAO,MAAM4C,QAAQ,GAAIT,IAAD,KAAW;AAAED,EAAAA,IAAI,EAAEvC,SAAR;AAAmBwC,EAAAA;AAAnB,CAAX,CAAjB;AACP,OAAO,MAAMU,cAAc,GAAIP,IAAD,KAAW;AAAEJ,EAAAA,IAAI,EAAEnC,gBAAR;AAA0BuC,EAAAA;AAA1B,CAAX,CAAvB;AACP,OAAO,MAAMQ,cAAc,GAAItB,OAAD,KAAc;AAAEU,EAAAA,IAAI,EAAEtC,gBAAR;AAA0B4B,EAAAA;AAA1B,CAAd,CAAvB;AACP,OAAO,MAAMuB,aAAa,GAAItB,MAAD,KAAa;AAAES,EAAAA,IAAI,EAAErC,eAAR;AAAyB4B,EAAAA;AAAzB,CAAb,CAAtB;AACP,OAAO,MAAMuB,iBAAiB,GAAIT,QAAD,KAAe;AAAEL,EAAAA,IAAI,EAAEjC,uBAAR;AAAiCsC,EAAAA;AAAjC,CAAf,CAA1B;AACP,OAAO,MAAMU,cAAc,GAAIT,UAAD,KAAiB;AAAEN,EAAAA,IAAI,EAAE/B,iBAAR;AAA2BqC,EAAAA;AAA3B,CAAjB,CAAvB;AACP,OAAO,MAAMU,cAAc,GAAIT,OAAD,KAAc;AAAEP,EAAAA,IAAI,EAAE9B,iBAAR;AAA2BqC,EAAAA;AAA3B,CAAd,CAAvB;AAEP,OAAO,MAAMU,eAAe,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AAC3D,QAAMC,IAAI,GAAG,MAAO/D,UAAU,CAACgE,UAAX,CAAsBH,MAAtB,CAApB;AACAC,EAAAA,QAAQ,CAACP,cAAc,CAACQ,IAAD,CAAf,CAAR;AAEH,CAJM;;AAKP,MAAME,gBAAgB,GAAInB,MAAD,KAAa;AAAEH,EAAAA,IAAI,EAAEpC,iBAAR;AAA2BuC,EAAAA;AAA3B,CAAb,CAAzB;;AAEA,OAAO,MAAMoB,cAAc,GAAIL,MAAD,IAAY,MAAOC,QAAP,IAAoB;AAC1D,QAAMC,IAAI,GAAG,MAAO/D,UAAU,CAACmE,aAAX,CAAyBN,MAAzB,CAApB;AAEAC,EAAAA,QAAQ,CAACN,aAAa,CAACO,IAAD,CAAd,CAAR;AAEH,CALM;AAMP,OAAO,MAAMK,iBAAiB,GAAIlC,MAAD,IAAY,MAAO4B,QAAP,IAAoB;AAC7D,QAAMC,IAAI,GAAG,MAAO/D,UAAU,CAACqE,gBAAX,CAA4BnC,MAA5B,CAApB;;AAEA,MAAI6B,IAAI,CAACO,UAAL,KAAoB,CAAxB,EAA2B;AACvBR,IAAAA,QAAQ,CAACN,aAAa,CAACtB,MAAD,CAAd,CAAR;AACH;AAEJ,CAPM;AAQP,OAAO,MAAMqC,cAAc,GAAIC,KAAD,IAAW,MAAOV,QAAP,IAAoB;AACzD,QAAMC,IAAI,GAAG,MAAO/D,UAAU,CAACyE,WAAX,CAAuBD,KAAvB,CAApB;;AAEA,MAAIT,IAAI,CAACO,UAAL,KAAoB,CAAxB,EAA2B;AACvBR,IAAAA,QAAQ,CAACG,gBAAgB,CAACF,IAAI,CAACA,IAAL,CAAUjB,MAAX,CAAjB,CAAR;AACH;AAEJ,CAPM;AAQP,OAAO,MAAM4B,eAAe,GAAIzC,OAAD,IAAa,OAAO6B,QAAP,EAAiBa,QAAjB,KAA8B;AACtE,QAAMd,MAAM,GAAGc,QAAQ,GAAGC,IAAX,CAAgBjD,EAA/B;AACA,QAAMkD,QAAQ,GAAG,MAAO7E,UAAU,CAAC0E,eAAX,CAA2BzC,OAA3B,CAAxB;;AAGA,MAAI4C,QAAQ,CAACP,UAAT,KAAwB,CAA5B,EAA+B;AAC3BR,IAAAA,QAAQ,CAACF,eAAe,CAACC,MAAD,CAAhB,CAAR;AACAC,IAAAA,QAAQ,CAACR,cAAc,CAAC,KAAD,CAAf,CAAR;AACH,GAHD,MAGO;AACH,QAAIwB,MAAM,GAAGD,QAAQ,CAACE,QAAT,CAAkB,CAAlB,EAAqBC,OAArB,CAA6B,GAA7B,CAAb;AACA,QAAIC,IAAI,GAAGJ,QAAQ,CAACE,QAAT,CAAkB,CAAlB,EAAqBG,KAArB,CAA2BJ,MAAM,GAAG,CAApC,EAAuC,CAAC,CAAxC,EAA2CK,WAA3C,EAAX;AACArB,IAAAA,QAAQ,CAAC7D,UAAU,CAAC,cAAD,EAAiB;AAAE,kBAAY;AAAE,SAACgF,IAAD,GAAQA,IAAI,GAAG;AAAjB;AAAd,KAAjB,CAAX,CAAR;AACH;AACJ,CAbM;AAcP,OAAO,MAAMG,gBAAgB,GAAIzD,EAAD,IAAQ,MAAOmC,QAAP,IAAoB;AACxD,QAAMC,IAAI,GAAG,MAAO7D,QAAQ,CAACmF,SAAT,CAAmB1D,EAAnB,CAApB;AACAmC,EAAAA,QAAQ,CAACL,iBAAiB,CAACM,IAAD,CAAlB,CAAR;AAEH,CAJM;AAKP,OAAO,MAAMuB,cAAc,GAAG,CAACtC,QAAD,EAAWrB,EAAX,KAAkB,MAAOmC,QAAP,IAAoB;AAChEA,EAAAA,QAAQ,CAACX,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACA,QAAMY,IAAI,GACNf,QAAQ,GACF,MAAM9C,QAAQ,CAACqF,UAAT,CAAoB5D,EAApB,CADJ,GAEF,MAAMzB,QAAQ,CAACsF,YAAT,CAAsB7D,EAAtB,CAHhB;;AAIA,MAAIoC,IAAI,CAACO,UAAL,KAAoB,CAAxB,EAA2B;AACvBR,IAAAA,QAAQ,CAACL,iBAAiB,CAACT,QAAD,CAAlB,CAAR;AACAc,IAAAA,QAAQ,CAACX,gBAAgB,CAAC,KAAD,CAAjB,CAAR;AACH;AAGJ,CAZM;AAaP,eAAeX,cAAf","sourcesContent":["import { profileAPI } from '../API/api'\r\nimport { stopSubmit } from 'redux-form';\r\nimport { usersAPI } from '../API/api';\r\nimport { async } from 'q';\r\n\r\n\r\nconst SEND_POST = 'profile-reducer/SEND_POST';\r\nconst SET_USER_PROFILE = 'profile-reducer/SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'profile-reducer/SET_USER_STATUS';\r\nconst SET_PHOTO_PROFILE = 'profile-reducer/SET_PHOTO_PROFILE';\r\nconst SET_EDIT_PROFILE = 'profile-reducer/SET_EDIT_PROFILE';\r\nconst RESET_USER_POFILE = 'profile-reducer/RESET_USER_POFILE'\r\nconst FOLLOW_UNFOLLOW_SUCCESS = 'profile-reducer/FOLLOW_UNFOLLOW_SUCCESS'\r\nconst TOGGLE_IS_FETCHING = 'profile-reducer/TOGGLE_IS_FETCHING';\r\nconst SEND_MESSAGE_MODE = 'profile-reducer/SEND_MESSAGE_MODE';\r\nconst SET_POPPUP_AVATAR = 'profile-reducer/SET_POPPUP_AVATAR';\r\n\r\nconst options = {\r\n    era: 'numeric',\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    weekday: 'long',\r\n    timezone: 'UTC',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    second: 'numeric'\r\n}\r\n\r\nconst initialState = {\r\n    posts: [\r\n        { text: 'hello world!!', id: 1, likesCount: 2, time: `${new Date(2011, 0, 1, 0, 0, 0, 0).toLocaleString(\"en-US\", options)}` },\r\n        { text: 'Whats up??!', id: 1, likesCount: 2, time: `${new Date(2011, 0, 1, 0, 0, 0, 0).toLocaleString(\"en-US\", options)}` }],\r\n    currentTextPost: '',\r\n    profile: null,\r\n    status: '',\r\n    isEditMode: false,\r\n    isFollowed: false,\r\n    isFetching: false,\r\n    sendMessageMode: false,\r\n    avatarPopup: false\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    debugger;\r\n    switch (action.type) {\r\n\r\n        case SEND_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, { text: action.post.postBody, id: 1, likesCount: 0 }],\r\n            }\r\n\r\n\r\n\r\n        case SET_USER_PROFILE:\r\n            return { ...state, profile: action.profile }\r\n        case SET_USER_STATUS:\r\n            return { ...state, status: action.status }\r\n        case SET_PHOTO_PROFILE:\r\n            return { ...state, profile: { ...state.profile, photos: action.photos } }\r\n        case SET_EDIT_PROFILE:\r\n            return { ...state, isEditMode: action.mode }\r\n        case RESET_USER_POFILE:\r\n            return initialState\r\n        case FOLLOW_UNFOLLOW_SUCCESS:\r\n            return { ...state, isFollowed: action.isFollow }\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n        case SEND_MESSAGE_MODE:\r\n            return { ...state, sendMessageMode: action.isSendMode }\r\n        case SET_POPPUP_AVATAR:\r\n            return { ...state, avatarPopup: action.isPopup }\r\n        default: return state;\r\n\r\n    }\r\n\r\n}\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const resetProfile = () => ({ type: RESET_USER_POFILE })\r\nexport const sendPost = (post) => ({ type: SEND_POST, post });\r\nexport const setEditProfile = (mode) => ({ type: SET_EDIT_PROFILE, mode });\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\nexport const setUserStatus = (status) => ({ type: SET_USER_STATUS, status });\r\nexport const setFollowUnfollow = (isFollow) => ({ type: FOLLOW_UNFOLLOW_SUCCESS, isFollow });\r\nexport const setMessageMode = (isSendMode) => ({ type: SEND_MESSAGE_MODE, isSendMode })\r\nexport const setPopupAvatar = (isPopup) => ({ type: SET_POPPUP_AVATAR, isPopup })\r\n\r\nexport const getProfileThunk = (userId) => async (dispatch) => {\r\n    const data = await (profileAPI.getProfile(userId));\r\n    dispatch(setUserProfile(data));\r\n\r\n}\r\nconst savePhotoSucсess = (photos) => ({ type: SET_PHOTO_PROFILE, photos });\r\n\r\nexport const getStatusThunk = (userId) => async (dispatch) => {\r\n    const data = await (profileAPI.getUserStatus(userId));\r\n\r\n    dispatch(setUserStatus(data));\r\n\r\n}\r\nexport const updateStatusThunk = (status) => async (dispatch) => {\r\n    const data = await (profileAPI.updateUserStatus(status));\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n\r\n}\r\nexport const savePhotoThunk = (photo) => async (dispatch) => {\r\n    const data = await (profileAPI.updatePhoto(photo));\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(savePhotoSucсess(data.data.photos));\r\n    }\r\n\r\n}\r\nexport const saveProfileData = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    const response = await (profileAPI.saveProfileData(profile));\r\n\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(getProfileThunk(userId));\r\n        dispatch(setEditProfile(false));\r\n    } else {\r\n        let number = response.messages[0].indexOf('>');\r\n        let test = response.messages[0].slice(number + 1, -1).toLowerCase();\r\n        dispatch(stopSubmit('edit-profile', { 'contacts': { [test]: test + ' incorrect' } }));\r\n    }\r\n}\r\nexport const getFollowedThunk = (id) => async (dispatch) => {\r\n    const data = await (usersAPI.getFollow(id));\r\n    dispatch(setFollowUnfollow(data))\r\n\r\n}\r\nexport const followUnfollow = (isFollow, id) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    const data =\r\n        isFollow\r\n            ? await usersAPI.postFollow(id)\r\n            : await usersAPI.deleteFollow(id)\r\n    if (data.resultCode === 0) {\r\n        dispatch(setFollowUnfollow(isFollow))\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n\r\n\r\n}\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}