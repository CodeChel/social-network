{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { getAuthThunk } from \"./auth-reducer\";\nconst INITIALIZED_SUCCESS = 'app-reducer/INITIALIZED_SUCCESS';\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return _objectSpread({}, state, {\n        initialized: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const initiallizedSuccess = () => ({\n  type: INITIALIZED_SUCCESS\n});\nexport const initializeAppThunk = () => dispatch => {\n  let promise = dispatch(getAuthThunk());\n  Promise.all([promise]).then(() => {\n    dispatch(initiallizedSuccess());\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\redux\\app-reducer.js"],"names":["getAuthThunk","INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initiallizedSuccess","initializeAppThunk","dispatch","promise","Promise","all","then"],"mappings":";AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAGA,MAAMC,mBAAmB,GAAG,iCAA5B;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAEjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,mBAAL;AACC,+BACOI,KADP;AAEIF,QAAAA,WAAW,EAAE;AAFjB;;AAID;AAAS,aAAOE,KAAP;AANb;AAUH,CAZD;;AAcA,OAAO,MAAMG,mBAAmB,GAAG,OAAO;AAAED,EAAAA,IAAI,EAAEN;AAAR,CAAP,CAA5B;AAEP,OAAO,MAAMQ,kBAAkB,GAAG,MAAOC,QAAD,IAAc;AAClD,MAAIC,OAAO,GAAGD,QAAQ,CAACV,YAAY,EAAb,CAAtB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EACCG,IADD,CACM,MAAM;AACRJ,IAAAA,QAAQ,CAACF,mBAAmB,EAApB,CAAR;AACH,GAHD;AAKH,CAPM;AASP,eAAeJ,UAAf","sourcesContent":["import { getAuthThunk } from \"./auth-reducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'app-reducer/INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n         return {\r\n             ...state,\r\n             initialized: true\r\n         }\r\n        default: return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const initiallizedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeAppThunk = () => (dispatch) => {\r\n    let promise = dispatch(getAuthThunk());\r\n    Promise.all([promise])\r\n    .then(() => {\r\n        dispatch(initiallizedSuccess());\r\n    })\r\n    \r\n}\r\n\r\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}