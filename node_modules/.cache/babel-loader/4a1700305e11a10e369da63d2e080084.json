{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { profileAPI } from '../API/api';\nconst SEND_POST = 'SEND_POST';\nconst UPDATE_POST_TEXT = 'UPDATE_POST_TEXT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst SET_POSTS = 'SET_POSTS';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nlet initialState = {\n  posts: [],\n  currentTextPost: '',\n  profile: null\n};\n\nconst postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEND_POST:\n      return _objectSpread({}, state, {\n        posts: [...state.posts, {\n          text: state.currentTextPost,\n          id: 1,\n          likesCount: 0\n        }],\n        currentTextPost: ''\n      });\n\n    case UPDATE_POST_TEXT:\n      return _objectSpread({}, state, {\n        currentTextPost: action.newText\n      });\n\n    case SET_POSTS:\n      return _objectSpread({}, state, {\n        users: action.users\n      });\n\n    case SET_USER_PROFILE:\n      return _objectSpread({}, state, {\n        profile: action.profile\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const sendPost = () => ({\n  type: SEND_POST\n});\nexport const updatePost = newText => ({\n  type: UPDATE_POST_TEXT,\n  newText\n});\nexport const setPosts = posts => ({\n  type: UPDATE_POST_TEXT,\n  posts\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const getProfileThunk = () => dispatch => {\n  profileAPI.getProfile(userId).then(data => {\n    this.props.setUserProfile(data);\n  });\n};\nexport default postsReducer;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\redux\\profile-reducer.js"],"names":["profileAPI","SEND_POST","UPDATE_POST_TEXT","TOGGLE_IS_FETCHING","SET_POSTS","SET_USER_PROFILE","initialState","posts","currentTextPost","profile","postsReducer","state","action","type","text","id","likesCount","newText","users","sendPost","updatePost","setPosts","setUserProfile","getProfileThunk","dispatch","getProfile","userId","then","data","props"],"mappings":";AAAA,SAAQA,UAAR,QAAyB,YAAzB;AAEA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,EADQ;AAEfC,EAAAA,eAAe,EAAE,EAFF;AAGfC,EAAAA,OAAO,EAAE;AAHM,CAAnB;;AAMA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAEnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,SAAL;AACI,+BACOU,KADP;AAEIJ,QAAAA,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAiB;AAACO,UAAAA,IAAI,EAAEH,KAAK,CAACH,eAAb;AAA8BO,UAAAA,EAAE,EAAE,CAAlC;AAAqCC,UAAAA,UAAU,EAAE;AAAjD,SAAjB,CAFX;AAGIR,QAAAA,eAAe,EAAE;AAHrB;;AAMJ,SAAKN,gBAAL;AACI,+BACOS,KADP;AAEIH,QAAAA,eAAe,EAAEI,MAAM,CAACK;AAF5B;;AAIJ,SAAKb,SAAL;AACI,+BAAYO,KAAZ;AAAmBO,QAAAA,KAAK,EAAEN,MAAM,CAACM;AAAjC;;AACJ,SAAKb,gBAAL;AACI,+BAAWM,KAAX;AAAkBF,QAAAA,OAAO,EAAEG,MAAM,CAACH;AAAlC;;AACJ;AAAS,aAAOE,KAAP;AAjBb;AAqBH,CAvBD;;AAyBA,OAAO,MAAMQ,QAAQ,GAAG,OAAO;AAAEN,EAAAA,IAAI,EAAEZ;AAAR,CAAP,CAAjB;AACP,OAAO,MAAMmB,UAAU,GAAIH,OAAD,KAAc;AAAEJ,EAAAA,IAAI,EAAEX,gBAAR;AAA0Be,EAAAA;AAA1B,CAAd,CAAnB;AACP,OAAO,MAAMI,QAAQ,GAAId,KAAD,KAAY;AAAEM,EAAAA,IAAI,EAAEX,gBAAR;AAA0BK,EAAAA;AAA1B,CAAZ,CAAjB;AACP,OAAO,MAAMe,cAAc,GAAIb,OAAD,KAAc;AAACI,EAAAA,IAAI,EAAER,gBAAP;AAAyBI,EAAAA;AAAzB,CAAd,CAAvB;AACP,OAAO,MAAMc,eAAe,GAAG,MAAOC,QAAD,IAAc;AAC/CxB,EAAAA,UAAU,CAACyB,UAAX,CAAsBC,MAAtB,EAA8BC,IAA9B,CAAmCC,IAAI,IAAI;AACnC,SAAKC,KAAL,CAAWP,cAAX,CAA0BM,IAA1B;AACH,GAFL;AAGH,CAJM;AAMP,eAAelB,YAAf","sourcesContent":["import {profileAPI} from '../API/api'\r\n\r\nconst SEND_POST = 'SEND_POST';\r\nconst UPDATE_POST_TEXT = 'UPDATE_POST_TEXT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst SET_POSTS = 'SET_POSTS';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\n\r\n\r\nlet initialState = {\r\n    posts: [],\r\n    currentTextPost: '',\r\n    profile: null\r\n}\r\n\r\nconst postsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {text: state.currentTextPost, id: 1, likesCount: 0}],\r\n                currentTextPost: ''\r\n            }\r\n\r\n        case UPDATE_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                currentTextPost: action.newText\r\n            }\r\n        case SET_POSTS:\r\n            return { ...state, users: action.users }\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile}        \r\n        default: return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const sendPost = () => ({ type: SEND_POST });\r\nexport const updatePost = (newText) => ({ type: UPDATE_POST_TEXT, newText });\r\nexport const setPosts = (posts) => ({ type: UPDATE_POST_TEXT, posts });\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const getProfileThunk = () => (dispatch) => {\r\n    profileAPI.getProfile(userId).then(data => {\r\n            this.props.setUserProfile(data);\r\n        })\r\n}\r\n\r\nexport default postsReducer;"]},"metadata":{},"sourceType":"module"}