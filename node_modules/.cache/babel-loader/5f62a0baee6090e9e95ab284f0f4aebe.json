{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { profileAPI } from '../API/api';\nconst SEND_POST = 'SEND_POST';\nconst UPDATE_POST_TEXT = 'UPDATE_POST_TEXT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst SET_POSTS = 'SET_POSTS';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_USER_STATUS = 'SET_USER_STATUS';\nlet initialState = {\n  posts: [],\n  currentTextPost: '',\n  profile: null,\n  status: ''\n};\n\nconst postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEND_POST:\n      return _objectSpread({}, state, {\n        posts: [...state.posts, {\n          text: state.currentTextPost,\n          id: 1,\n          likesCount: 0\n        }],\n        currentTextPost: ''\n      });\n\n    case UPDATE_POST_TEXT:\n      return _objectSpread({}, state, {\n        currentTextPost: action.newText\n      });\n\n    case SET_POSTS:\n      return _objectSpread({}, state, {\n        users: action.users\n      });\n\n    case SET_USER_PROFILE:\n      return _objectSpread({}, state, {\n        profile: action.profile\n      });\n\n    case SET_USER_STATUS:\n      return _objectSpread({}, state, {\n        status: action.status\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const sendPost = () => ({\n  type: SEND_POST\n});\nexport const updatePost = newText => ({\n  type: UPDATE_POST_TEXT,\n  newText\n});\nexport const setPosts = posts => ({\n  type: UPDATE_POST_TEXT,\n  posts\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setUserStatus = status => ({\n  type: SET_USER_STATUS,\n  status\n});\nexport const getProfileThunk = userId => dispatch => {\n  profileAPI.getProfile(userId).then(data => {\n    dispatch(setUserProfile(data));\n  });\n};\nexport const getStatusThunk = userId => dispatch => {\n  profileAPI.getUserStatus(userId).then(data => {\n    dispatch(setUserStatus(data));\n  });\n};\nexport const updateStatusThunk = status => dispatch => {\n  profileAPI.updateUserStatus(status).then(data => {\n    debugger;\n\n    if (data.resaultCode === 0) {\n      dispatch(setUserStatus(status));\n    }\n  });\n};\nexport default postsReducer;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\redux\\profile-reducer.js"],"names":["profileAPI","SEND_POST","UPDATE_POST_TEXT","TOGGLE_IS_FETCHING","SET_POSTS","SET_USER_PROFILE","SET_USER_STATUS","initialState","posts","currentTextPost","profile","status","postsReducer","state","action","type","text","id","likesCount","newText","users","sendPost","updatePost","setPosts","setUserProfile","setUserStatus","getProfileThunk","userId","dispatch","getProfile","then","data","getStatusThunk","getUserStatus","updateStatusThunk","updateUserStatus","resaultCode"],"mappings":"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","sourcesContent":["import { profileAPI } from '../API/api'\r\n\r\nconst SEND_POST = 'SEND_POST';\r\nconst UPDATE_POST_TEXT = 'UPDATE_POST_TEXT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst SET_POSTS = 'SET_POSTS';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [],\r\n    currentTextPost: '',\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst postsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, { text: state.currentTextPost, id: 1, likesCount: 0 }],\r\n                currentTextPost: ''\r\n            }\r\n\r\n        case UPDATE_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                currentTextPost: action.newText\r\n            }\r\n        case SET_POSTS:\r\n            return { ...state, users: action.users }\r\n        case SET_USER_PROFILE:\r\n            return { ...state, profile: action.profile }\r\n        case SET_USER_STATUS:\r\n            return { ...state, status: action.status }\r\n        default: return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const sendPost = () => ({ type: SEND_POST });\r\nexport const updatePost = (newText) => ({ type: UPDATE_POST_TEXT, newText });\r\nexport const setPosts = (posts) => ({ type: UPDATE_POST_TEXT, posts });\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\nexport const setUserStatus = (status) => ({ type: SET_USER_STATUS, status })\r\nexport const getProfileThunk = (userId) => (dispatch) => {\r\n    profileAPI.getProfile(userId).then(data => {\r\n        dispatch(setUserProfile(data));\r\n    })\r\n}\r\nexport const getStatusThunk = (userId) => (dispatch) => {\r\n    profileAPI.getUserStatus(userId).then(data => {\r\n        dispatch(setUserStatus(data));\r\n    })\r\n}\r\nexport const updateStatusThunk = (status) => (dispatch) => {\r\n    profileAPI.updateUserStatus(status).then(data => {\r\n        debugger;\r\n        if (data.resaultCode === 0) {\r\n            dispatch(setUserStatus(status));\r\n        }\r\n    })\r\n}\r\nexport default postsReducer;"]},"metadata":{},"sourceType":"module"}