{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Profile\\\\Posts\\\\Posts.jsx\";\nimport React from 'react';\nimport styles from './posts.module.css';\nimport { reduxForm, Field } from 'redux-form';\nimport { required, maxLengthCreator } from '../../../utils/validators/validator';\nimport { Textarea } from '../../common/FormControls/FormControls';\nimport avatar from '../../../assets/img/ava.jpg';\nimport Preloader from '../../common/Preloader/Preloader';\nconst maxLength500 = maxLengthCreator(500);\n\nconst FormPost = props => {\n  return React.createElement(\"form\", {\n    className: styles.formPost,\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Field, {\n    placeholder: \"Share your great thoughts here\",\n    component: Textarea,\n    name: \"postBody\",\n    validate: [required, maxLength500],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: styles.button,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Post\"));\n};\n\nconst FormPostRedux = reduxForm({\n  form: 'formPost'\n})(FormPost);\n\nconst Posts = props => {\n  return props.profile ? React.createElement(\"div\", {\n    className: styles.postsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(FormPostRedux, {\n    onSubmit: props.sendPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), props.isMyPage, props.posts.map(p => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.posts,\n    key: p.id,\n    className: styles.itemPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.headerPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: styles.avatar,\n    src: props.profile.photos.small || avatar,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.nameBlock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.profile.fullName), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, p.time))), React.createElement(\"div\", {\n    className: styles.postBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, p.text), React.createElement(\"div\", {\n    className: styles.likesContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: () => {\n      p.liked ? props.likesToggle() : props.likesToggle();\n    },\n    className: styles.likes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), \" \", p.likesCount, \" \"))))) : React.createElement(Preloader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  });\n};\n\nexport default Posts;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Profile\\Posts\\Posts.jsx"],"names":["React","styles","reduxForm","Field","required","maxLengthCreator","Textarea","avatar","Preloader","maxLength500","FormPost","props","formPost","handleSubmit","button","FormPostRedux","form","Posts","profile","postsContainer","sendPost","isMyPage","posts","map","p","id","itemPost","headerPost","photos","small","nameBlock","name","fullName","time","postBody","text","likesContainer","liked","likesToggle","likes","likesCount"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styles from './posts.module.css'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validator';\r\nimport { Textarea } from '../../common/FormControls/FormControls';\r\nimport avatar from '../../../assets/img/ava.jpg';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\n\r\nconst maxLength500 = maxLengthCreator(500);\r\n\r\nconst FormPost = (props) => {\r\n    return <form className={styles.formPost} onSubmit={props.handleSubmit}>\r\n        <Field placeholder=\"Share your great thoughts here\" component={Textarea} name='postBody' validate={[required, maxLength500]} />\r\n\r\n        <button className={styles.button} type='submit' >Post</button>\r\n    </form>\r\n}\r\nconst FormPostRedux = reduxForm({ form: 'formPost' })(FormPost);\r\n\r\nconst Posts = (props) => {\r\n    return props.profile \r\n    ?  <div className={styles.postsContainer}>\r\n        <FormPostRedux onSubmit={props.sendPost} />\r\n        {props.isMyPage}\r\n        {props.posts.map((p) => <div>\r\n            <div className={styles.posts} key={p.id} className={styles.itemPost}>\r\n                    <div className={styles.headerPost}>\r\n                        <img className={styles.avatar} src={props.profile.photos.small || avatar} alt=\"\"/>\r\n                        \r\n                        <div className={styles.nameBlock}>\r\n                            <div className={styles.name}>{props.profile.fullName}</div>\r\n                            <div >{p.time}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.postBody}>    \r\n                        {p.text}\r\n                    </div>\r\n                    <div className={styles.likesContainer}><div onClick={() => { p.liked ?  props.likesToggle() : props.likesToggle() }} className={styles.likes}></div> {p.likesCount} </div>             \r\n            </div>\r\n            \r\n        </div>)}\r\n    </div>\r\n    : <Preloader/>\r\n}\r\n\r\nexport default Posts;"]},"metadata":{},"sourceType":"module"}