{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Login\\\\Login.jsx\";\nimport React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { logInThunk } from '../../redux/auth-reducer';\nimport { connect } from 'react-redux';\nimport { Input, createField } from '../common/FormControls/FormControls';\nimport { required } from '../../utils/validators/validator';\nimport { Redirect } from 'react-router';\nimport styles from '../common/FormControls/FormControls.module.css';\n\nconst LoginForm = ({\n  error,\n  handleSubmit\n}) => {\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, createField('Login', 'login', [required], Input), createField('Password', 'password', [required], Input, {\n    type: 'password'\n  }), createField(null, 'rememberMe', null, Input, true, 'remember me', {\n    type: 'checkbox'\n  }), error && React.createElement(\"div\", {\n    className: styles.errorLogIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, error), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Login\"));\n};\n\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst Login = ({\n  logInThunk,\n  isAuth,\n  authId\n}) => {\n  const onSubmit = data => {\n    console.log(data);\n    logInThunk(data);\n  };\n\n  if (isAuth) {\n    return React.createElement(Redirect, {\n      to: '/profile' + authId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"LOGIN \"), React.createElement(LoginReduxForm, {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};\n\nconst mapDispatchToProps = state => ({\n  isAuth: state.auth.isAuth,\n  authId: state.auth.id\n});\n\nexport default connect(mapDispatchToProps, {\n  logInThunk\n})(Login);","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Login\\Login.jsx"],"names":["React","reduxForm","Field","logInThunk","connect","Input","createField","required","Redirect","styles","LoginForm","error","handleSubmit","type","errorLogIn","LoginReduxForm","form","Login","isAuth","authId","onSubmit","data","console","log","mapDispatchToProps","state","auth","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,qCAAnC;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,MAAP,MAAmB,gDAAnB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAA2B;AACzC,SACI;AAAM,IAAA,QAAQ,EAAEA,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,WAAW,CAAC,OAAD,EAAU,OAAV,EAAoB,CAACC,QAAD,CAApB,EAAgCF,KAAhC,CADhB,EAEKC,WAAW,CAAC,UAAD,EAAa,UAAb,EAA0B,CAACC,QAAD,CAA1B,EAAsCF,KAAtC,EAA6C;AAACQ,IAAAA,IAAI,EAAE;AAAP,GAA7C,CAFhB,EAGKP,WAAW,CAAC,IAAD,EAAO,YAAP,EAAsB,IAAtB,EAA4BD,KAA5B,EAAmC,IAAnC,EAAyC,aAAzC,EAAwD;AAACQ,IAAAA,IAAI,EAAE;AAAP,GAAxD,CAHhB,EAIKF,KAAK,IAAI;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACK,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCH,KAApC,CAJd,EAKI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ,CADJ;AASH,CAVD;;AAYA,MAAMI,cAAc,GAAGd,SAAS,CAAC;AAAEe,EAAAA,IAAI,EAAE;AAAR,CAAD,CAAT,CAA6BN,SAA7B,CAAvB;;AAEA,MAAMO,KAAK,GAAG,CAAC;AAACd,EAAAA,UAAD;AAAae,EAAAA,MAAb;AAAqBC,EAAAA;AAArB,CAAD,KAAkC;AAC5C,QAAMC,QAAQ,GAAIC,IAAD,IAAU;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAlB,IAAAA,UAAU,CAACkB,IAAD,CAAV;AACH,GAHD;;AAIA,MAAIH,MAAJ,EAAY;AACR,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,aAAaC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,EAEH,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,CAAP;AAIH,CAbD;;AAcA,MAAMI,kBAAkB,GAAIC,KAAD,KAAW;AAClCP,EAAAA,MAAM,EAAEO,KAAK,CAACC,IAAN,CAAWR,MADe;AAElCC,EAAAA,MAAM,EAAEM,KAAK,CAACC,IAAN,CAAWC;AAFe,CAAX,CAA3B;;AAKA,eAAevB,OAAO,CAACoB,kBAAD,EAAqB;AAAErB,EAAAA;AAAF,CAArB,CAAP,CAA4Cc,KAA5C,CAAf","sourcesContent":["import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { logInThunk } from '../../redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { Input, createField } from '../common/FormControls/FormControls';\r\nimport { required } from '../../utils/validators/validator';\r\nimport { Redirect } from 'react-router';\r\nimport styles from '../common/FormControls/FormControls.module.css'\r\n\r\nconst LoginForm = ({error, handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Login', 'login',  [required], Input)}\r\n            {createField('Password', 'password',  [required], Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe',  null, Input, true, 'remember me', {type: 'checkbox'})}\r\n            {error && <div className={styles.errorLogIn}>{error}</div>}\r\n            <button type='submit'>Login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = ({logInThunk, isAuth, authId}) => {\r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n        logInThunk(data);\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile' + authId} />\r\n    }\r\n    \r\n    return <div>\r\n        <h1>LOGIN </h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div >\r\n}\r\nconst mapDispatchToProps = (state)=> ({\r\n    isAuth: state.auth.isAuth,\r\n    authId: state.auth.id\r\n})\r\n\r\nexport default connect(mapDispatchToProps, { logInThunk })(Login);"]},"metadata":{},"sourceType":"module"}