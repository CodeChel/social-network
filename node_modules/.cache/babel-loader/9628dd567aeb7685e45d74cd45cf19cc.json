{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { usersAPI } from '../API/api';\nconst FOLLOW = 'friends-reducer/FOLLOW';\nconst UNFOLLOW = 'friends-reducer/UNFOLLOW';\nconst SET_USERS = 'friends-reducer/SET-USERS';\nconst SET_CURRENT_PAGE = 'friends-reducer/SET_CURRENT_PAGE';\nconst SET_TOTAL_COUNT = 'friends-reducer/SET_TOTAL_COUNT';\nconst TOGGLE_IS_FETCHING = 'friends-reducer/TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLOWING_PROGRESS = 'friends-reducer/TOGGLE_IS_FOLOWING_PROGRESS';\nconst SET_MESSAGE_MODE = 'friends-reducer/SET_MESSAGE_MODE';\nconst ADD_MORE_USER = 'friends-reducer/ADD_MORE_USER';\nlet initialState = {\n  users: [],\n  friends: [],\n  pageSize: 30,\n  totalUsersCout: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: [],\n  messageMode: false,\n  messageId: 0\n};\n\nconst friendsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return _objectSpread({}, state, {\n        users: state.users.map(u => action.payload === u.id ? _objectSpread({}, u, {\n          followed: true\n        }) : u)\n      });\n\n    case UNFOLLOW:\n      return _objectSpread({}, state, {\n        users: state.users.map(u => action.payload === u.id ? _objectSpread({}, u, {\n          followed: false\n        }) : u)\n      });\n\n    case SET_USERS:\n      return _objectSpread({}, state, action.payload);\n\n    case ADD_MORE_USER:\n      return _objectSpread({}, state, {\n        users: [...state.users, ...action.users]\n      });\n\n    case SET_CURRENT_PAGE:\n      return _objectSpread({}, state, {\n        currentPage: action.currentPage\n      });\n\n    case SET_TOTAL_COUNT:\n      return _objectSpread({}, state, {\n        totalUsersCout: action.count\n      });\n\n    case TOGGLE_IS_FETCHING:\n      return _objectSpread({}, state, {\n        isFetching: action.isFetching\n      });\n\n    case TOGGLE_IS_FOLOWING_PROGRESS:\n      return _objectSpread({}, state, {\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(userId => userId !== action.userId)\n      });\n\n    case SET_MESSAGE_MODE:\n      return _objectSpread({}, state, {\n        messageMode: action.isMessage,\n        messageId: action.id\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const follow = id => ({\n  type: FOLLOW,\n  payload: id\n});\nexport const unfollow = id => ({\n  type: UNFOLLOW,\n  payload: id\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  payload: {\n    users\n  }\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = count => ({\n  type: SET_TOTAL_COUNT,\n  count\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLOWING_PROGRESS,\n  isFetching,\n  userId\n});\nexport const setMessageMode = (isMessage, id) => ({\n  type: SET_MESSAGE_MODE,\n  isMessage,\n  id\n});\nexport const setMoreUsers = users => ({\n  type: ADD_MORE_USER,\n  users\n});\nexport const getUsersThunk = (currentPage, pageSize) => async dispatch => {\n  dispatch(toggleIsFetching(true));\n  const data = await usersAPI.getUsers(currentPage, pageSize);\n  dispatch(toggleIsFetching(false));\n  dispatch(setUsers(data.items));\n  dispatch(setTotalUsersCount(data.totalCount));\n};\nexport const getMoreUsers = (currentPage, pageSize) => async dispatch => {\n  dispatch(setCurrentPage(currentPage));\n  dispatch(toggleIsFetching(true));\n  const data = await usersAPI.getUsers(currentPage, pageSize);\n  dispatch(setMoreUsers(data.items));\n  dispatch(toggleIsFetching(false));\n  dispatch(setTotalUsersCount(data.totalCount));\n};\nexport const changeCurrentPageThunk = (pageNumber, pageSize) => async dispatch => {\n  dispatch(setCurrentPage(pageNumber));\n  dispatch(toggleIsFetching(true));\n  const data = await usersAPI.getUsers(pageNumber, pageSize);\n  dispatch(toggleIsFetching(false));\n  ;\n  dispatch(setUsers(data.items));\n};\n\nconst followUnfollowFlow = async (dispatch, apiMethod, actionCreator, id) => {\n  dispatch(toggleIsFetching(true));\n  dispatch(toggleFollowingProgress(true, id));\n  const data = await apiMethod(id);\n\n  if (data.resultCode === 0) {\n    dispatch(actionCreator(id));\n    dispatch(toggleFollowingProgress(false, id));\n    dispatch(toggleIsFetching(false));\n  }\n};\n\nexport const unFollowThunk = id => async dispatch => {\n  followUnfollowFlow(dispatch, usersAPI.deleteFollow, unfollow, id);\n};\nexport const followThunk = id => async dispatch => {\n  followUnfollowFlow(dispatch, usersAPI.postFollow, follow, id);\n};\nexport default friendsReducer;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\redux\\friends-reducer.js"],"names":["usersAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLOWING_PROGRESS","SET_MESSAGE_MODE","ADD_MORE_USER","initialState","users","friends","pageSize","totalUsersCout","currentPage","isFetching","followingInProgress","messageMode","messageId","friendsReducer","state","action","type","map","u","payload","id","followed","count","userId","filter","isMessage","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","setMessageMode","setMoreUsers","getUsersThunk","dispatch","data","getUsers","items","totalCount","getMoreUsers","changeCurrentPageThunk","pageNumber","followUnfollowFlow","apiMethod","actionCreator","resultCode","unFollowThunk","deleteFollow","followThunk","postFollow"],"mappings":"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","sourcesContent":["import { usersAPI } from '../API/api'\r\n\r\n\r\nconst FOLLOW = 'friends-reducer/FOLLOW';\r\nconst UNFOLLOW = 'friends-reducer/UNFOLLOW';\r\nconst SET_USERS = 'friends-reducer/SET-USERS';\r\nconst SET_CURRENT_PAGE = 'friends-reducer/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_COUNT = 'friends-reducer/SET_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'friends-reducer/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLOWING_PROGRESS = 'friends-reducer/TOGGLE_IS_FOLOWING_PROGRESS';\r\nconst SET_MESSAGE_MODE = 'friends-reducer/SET_MESSAGE_MODE';\r\nconst ADD_MORE_USER = 'friends-reducer/ADD_MORE_USER';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    friends: [],\r\n    pageSize: 30,\r\n    totalUsersCout: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n    messageMode: false,\r\n    messageId: 0\r\n}\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => action.payload === u.id ? { ...u, followed: true } : u)\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => action.payload=== u.id ? { ...u, followed: false } : u)\r\n            }\r\n        case SET_USERS:\r\n            return { ...state, ...action.payload }\r\n        case ADD_MORE_USER:\r\n            return { ...state, users: [...state.users,...action.users]}\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n        case SET_TOTAL_COUNT:\r\n            return { ...state, totalUsersCout: action.count }\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n        case TOGGLE_IS_FOLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                ? [...state.followingInProgress, action.userId]\r\n                : state.followingInProgress.filter(userId => userId !== action.userId)\r\n\r\n            }\r\n        case SET_MESSAGE_MODE:\r\n            return{\r\n                ...state,\r\n                messageMode: action.isMessage,\r\n                messageId: action.id\r\n            }               \r\n        default: return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const follow = (id) => ({ type: FOLLOW, payload: id });\r\nexport const unfollow = (id) => ({ type: UNFOLLOW, payload: id });\r\nexport const setUsers = (users) => ({ type: SET_USERS, payload: {users} });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setTotalUsersCount = (count) => ({ type: SET_TOTAL_COUNT, count });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLOWING_PROGRESS, isFetching, userId })\r\nexport const setMessageMode = (isMessage, id) => ({ type: SET_MESSAGE_MODE, isMessage, id})\r\nexport const setMoreUsers = (users) => ({type: ADD_MORE_USER, users})\r\n\r\n\r\nexport const getUsersThunk = (currentPage, pageSize) => async (dispatch) => {\r\n\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    const data = await (usersAPI.getUsers(currentPage, pageSize));\r\n    \r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n}\r\n\r\nexport const getMoreUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(setCurrentPage(currentPage));\r\n    dispatch(toggleIsFetching(true));\r\n    const data = await (usersAPI.getUsers(currentPage, pageSize));\r\n    dispatch(setMoreUsers(data.items));\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n    \r\n}\r\nexport const changeCurrentPageThunk = (pageNumber, pageSize) => async (dispatch) => {\r\n    dispatch(setCurrentPage(pageNumber));\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    const data = await (usersAPI.getUsers(pageNumber, pageSize));\r\n    dispatch(toggleIsFetching(false));;\r\n    dispatch(setUsers(data.items));\r\n}\r\n\r\nconst followUnfollowFlow = async(dispatch, apiMethod, actionCreator, id) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(toggleFollowingProgress(true, id));\r\n    const data = await (apiMethod(id));\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(id));\r\n        dispatch(toggleFollowingProgress(false, id));\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n\r\n}\r\nexport const unFollowThunk = (id) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, usersAPI.deleteFollow, unfollow, id );\r\n}\r\nexport const followThunk = (id) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, usersAPI.postFollow, follow, id );\r\n}\r\n\r\nexport default friendsReducer;"]},"metadata":{},"sourceType":"module"}