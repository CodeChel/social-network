{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\common\\\\PopUp\\\\PopUpMessage.jsx\";\nimport React, { useState } from 'react';\nimport avatar from '../../../assets/img/ava.jpg';\nimport styles from './popUpMessage.module.css';\nimport { NavLink } from 'react-router-dom';\nimport { reduxForm, Field } from 'redux-form';\nimport { Textarea, createField } from '../FormControls/FormControls';\nimport { required } from '../../../utils/validators/validator';\nimport { Redirect } from 'react-router-dom';\n\nconst PopUpMessage = ({\n  user,\n  closePopup,\n  messageFromPopUp\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        redirect = _useState2[0],\n        setRedirect = _useState2[1];\n\n  return redirect ? React.createElement(Redirect, {\n    to: \"/messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: styles.popup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.headerPopup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"New message\"), React.createElement(\"div\", {\n    className: styles.linkMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Open full chat with \", user.name || user.fullName)), React.createElement(\"div\", {\n    onClick: closePopup,\n    className: styles.closePopup,\n    role: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.popupBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.userHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"profile/\".concat(user.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: user.photos.small != null ? user.photos.small : avatar,\n    alt: \"\",\n    className: styles.popupAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: styles.usernameBlock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"profile/\".concat(user.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: styles.popupUserName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, user.name || user.fullName)), React.createElement(\"p\", {\n    className: styles.onlineStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Offline\")))), React.createElement(AddMessagePopupFormRedux, {\n    onSubmit: data => {\n      messageFromPopUp(data, user);\n      setRedirect(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\n\nconst addMessagePopup = props => {\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    className: styles.messageForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, createField(null, 'messagePopup', [required], 'textarea', null, null, {\n    cols: 57.5,\n    rows: 8\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: styles.buttonForm,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Send\")));\n};\n\nconst AddMessagePopupFormRedux = reduxForm({\n  form: 'message-popup'\n})(addMessagePopup);\nexport default PopUpMessage;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\common\\PopUp\\PopUpMessage.jsx"],"names":["React","useState","avatar","styles","NavLink","reduxForm","Field","Textarea","createField","required","Redirect","PopUpMessage","user","closePopup","messageFromPopUp","redirect","setRedirect","popup","headerPopup","linkMessage","name","fullName","popupBody","userHeader","id","photos","small","popupAvatar","usernameBlock","popupUserName","onlineStatus","data","addMessagePopup","props","handleSubmit","messageForm","cols","rows","buttonForm","AddMessagePopupFormRedux","form"],"mappings":"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","sourcesContent":["\r\nimport React, {useState} from 'react';\r\nimport avatar from '../../../assets/img/ava.jpg';\r\nimport styles from './popUpMessage.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Textarea, createField } from '../FormControls/FormControls';\r\nimport { required} from '../../../utils/validators/validator';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst PopUpMessage = ({ user, closePopup, messageFromPopUp }) => {\r\n    \r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    return redirect \r\n    ? <Redirect to='/messages' />\r\n    :<div className={styles.popup}>\r\n        <div className={styles.headerPopup}>\r\n            <div>New message</div> \r\n            <div className={styles.linkMessage}>\r\n                <NavLink to='messages'>Open full chat with {user.name || user.fullName}</NavLink>\r\n            </div>\r\n            <div onClick={closePopup} className={styles.closePopup} role='button'></div>\r\n        </div>\r\n        <div className={styles.popupBody}>\r\n            <div className={styles.userHeader}>\r\n                <div>\r\n                    <NavLink to={`profile/${user.id}`}>\r\n                        <img src={user.photos.small != null ? user.photos.small : avatar} alt=\"\" className={styles.popupAvatar} />\r\n                    </NavLink>\r\n                </div>\r\n                <div className={styles.usernameBlock}>\r\n                    <NavLink to={`profile/${user.id}`}>\r\n                        <p className={styles.popupUserName}>{user.name || user.fullName}</p>\r\n                    </NavLink>\r\n                    <p className={styles.onlineStatus}>Offline</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <AddMessagePopupFormRedux onSubmit={(data) => { \r\n            messageFromPopUp(data, user)\r\n            setRedirect(true);\r\n        }}/>\r\n    </div>\r\n}\r\nconst addMessagePopup = (props) => {\r\n    return <form onSubmit={props.handleSubmit} className={styles.messageForm}>\r\n        {createField(null, 'messagePopup', [required], 'textarea', null, null,{cols: 57.5, rows: 8})}\r\n        <div>\r\n            <button className={styles.buttonForm} type='submit'>Send</button>\r\n        </div>\r\n    </form>\r\n}\r\nconst AddMessagePopupFormRedux = reduxForm({form: 'message-popup'})(addMessagePopup);\r\nexport default PopUpMessage;"]},"metadata":{},"sourceType":"module"}