{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { usersAPI } from '../API/api';\nconst FOLLOW = 'friends-reducer/FOLLOW';\nconst UNFOLLOW = 'friends-reducer/UNFOLLOW';\nconst SET_USERS = 'friends-reducer/SET-USERS';\nconst SET_CURRENT_PAGE = 'friends-reducer/SET_CURRENT_PAGE';\nconst SET_TOTAL_COUNT = 'friends-reducer/SET_TOTAL_COUNT';\nconst TOGGLE_IS_FETCHING = 'friends-reducer/TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLOWING_PROGRESS = 'friends-reducer/TOGGLE_IS_FOLOWING_PROGRESS';\nconst SET_MESSAGE_MODE = 'friends-reducer/SET_MESSAGE_MODE';\nconst ADD_MORE_USER = 'friends-reducer/ADD_MORE_USER';\nconst SET_FRIENDS = 'friends-reducer/SET_FRIENDS';\nlet initialState = {\n  users: [],\n  friends: [],\n  pageSize: 30,\n  totalUsersCout: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: [],\n  messageMode: false,\n  messageId: 0,\n  userList: true,\n  friendsList: false\n};\n\nconst friendsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return _objectSpread({}, state, {\n        users: state.users.map(u => action.id === u.id ? _objectSpread({}, u, {\n          followed: true\n        }) : u)\n      });\n\n    case UNFOLLOW:\n      return _objectSpread({}, state, {\n        users: state.users.map(u => action.id === u.id ? _objectSpread({}, u, {\n          followed: false\n        }) : u)\n      });\n\n    case SET_USERS:\n      return _objectSpread({}, state, {\n        users: action.users\n      });\n\n    case ADD_MORE_USER:\n      return _objectSpread({}, state, {\n        users: [...state.users, ...action.users]\n      });\n\n    case SET_CURRENT_PAGE:\n      return _objectSpread({}, state, {\n        currentPage: action.currentPage\n      });\n\n    case SET_TOTAL_COUNT:\n      return _objectSpread({}, state, {\n        totalUsersCout: action.count\n      });\n\n    case TOGGLE_IS_FETCHING:\n      return _objectSpread({}, state, {\n        isFetching: action.isFetching\n      });\n\n    case TOGGLE_IS_FOLOWING_PROGRESS:\n      return _objectSpread({}, state, {\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(userId => userId !== action.userId)\n      });\n\n    case SET_MESSAGE_MODE:\n      return _objectSpread({}, state, {\n        messageMode: action.isMessage,\n        messageId: action.id\n      });\n\n    case SET_FRIENDS:\n      return _objectSpread({}, state, {\n        friends: state.users.filter(u => u.followed)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const follow = id => ({\n  type: FOLLOW,\n  id\n});\nexport const unfollow = id => ({\n  type: UNFOLLOW,\n  id\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = count => ({\n  type: SET_TOTAL_COUNT,\n  count\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLOWING_PROGRESS,\n  isFetching,\n  userId\n});\nexport const setMessageMode = (isMessage, id) => ({\n  type: SET_MESSAGE_MODE,\n  isMessage,\n  id\n});\nexport const setMoreUsers = users => ({\n  type: ADD_MORE_USER,\n  users\n});\nexport const setFriends = () => ({\n  type: SET_FRIENDS\n});\nexport const getUsersThunk = (currentPage, pageSize) => async dispatch => {\n  dispatch(toggleIsFetching(true));\n  const data = await usersAPI.getUsers(currentPage, pageSize);\n  dispatch(toggleIsFetching(false));\n  dispatch(setUsers(data.items));\n  dispatch(setTotalUsersCount(data.totalCount));\n};\nexport const getMoreUsers = (currentPage, pageSize) => async dispatch => {\n  dispatch(setCurrentPage(currentPage));\n  dispatch(toggleIsFetching(true));\n  const data = await usersAPI.getUsers(currentPage, pageSize);\n  dispatch(setMoreUsers(data.items));\n  dispatch(toggleIsFetching(false));\n  dispatch(setTotalUsersCount(data.totalCount));\n};\nexport const changeCurrentPageThunk = (pageNumber, pageSize) => async dispatch => {\n  dispatch(setCurrentPage(pageNumber));\n  dispatch(toggleIsFetching(true));\n  const data = await usersAPI.getUsers(pageNumber, pageSize);\n  dispatch(toggleIsFetching(false));\n  ;\n  dispatch(setUsers(data.items));\n};\n\nconst followUnfollowFlow = async (dispatch, apiMethod, actionCreator, id) => {\n  dispatch(toggleIsFetching(true));\n  dispatch(toggleFollowingProgress(true, id));\n  const data = await apiMethod(id);\n\n  if (data.resultCode === 0) {\n    dispatch(actionCreator(id));\n    dispatch(toggleFollowingProgress(false, id));\n    dispatch(toggleIsFetching(false));\n  }\n};\n\nexport const unFollowThunk = id => async dispatch => {\n  followUnfollowFlow(dispatch, usersAPI.deleteFollow, unfollow, id);\n};\nexport const followThunk = id => async dispatch => {\n  followUnfollowFlow(dispatch, usersAPI.postFollow, follow, id);\n};\nexport default friendsReducer;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\redux\\friends-reducer.js"],"names":["usersAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLOWING_PROGRESS","SET_MESSAGE_MODE","ADD_MORE_USER","SET_FRIENDS","initialState","users","friends","pageSize","totalUsersCout","currentPage","isFetching","followingInProgress","messageMode","messageId","userList","friendsList","friendsReducer","state","action","type","map","u","id","followed","count","userId","filter","isMessage","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","setMessageMode","setMoreUsers","setFriends","getUsersThunk","dispatch","data","getUsers","items","totalCount","getMoreUsers","changeCurrentPageThunk","pageNumber","followUnfollowFlow","apiMethod","actionCreator","resultCode","unFollowThunk","deleteFollow","followThunk","postFollow"],"mappings":"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","sourcesContent":["import { usersAPI } from '../API/api'\r\n\r\n\r\nconst FOLLOW = 'friends-reducer/FOLLOW';\r\nconst UNFOLLOW = 'friends-reducer/UNFOLLOW';\r\nconst SET_USERS = 'friends-reducer/SET-USERS';\r\nconst SET_CURRENT_PAGE = 'friends-reducer/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_COUNT = 'friends-reducer/SET_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'friends-reducer/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLOWING_PROGRESS = 'friends-reducer/TOGGLE_IS_FOLOWING_PROGRESS';\r\nconst SET_MESSAGE_MODE = 'friends-reducer/SET_MESSAGE_MODE';\r\nconst ADD_MORE_USER = 'friends-reducer/ADD_MORE_USER';\r\nconst SET_FRIENDS = 'friends-reducer/SET_FRIENDS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    friends: [],\r\n    pageSize: 30,\r\n    totalUsersCout: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n    messageMode: false,\r\n    messageId: 0,\r\n    userList: true,\r\n    friendsList: false\r\n}\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => action.id === u.id ? { ...u, followed: true } : u)\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => action.id === u.id ? { ...u, followed: false } : u)\r\n            }\r\n        case SET_USERS:\r\n            return { ...state, users: action.users }\r\n        case ADD_MORE_USER:\r\n            return { ...state, users: [...state.users,...action.users]}\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n        case SET_TOTAL_COUNT:\r\n            return { ...state, totalUsersCout: action.count }\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n        case TOGGLE_IS_FOLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                ? [...state.followingInProgress, action.userId]\r\n                : state.followingInProgress.filter(userId => userId !== action.userId)\r\n\r\n            }\r\n        case SET_MESSAGE_MODE:\r\n            return{\r\n                ...state,\r\n                messageMode: action.isMessage,\r\n                messageId: action.id\r\n            }\r\n        case SET_FRIENDS:\r\n            return{\r\n                ...state,\r\n                friends: state.users.filter(u=> u.followed)\r\n            }     \r\n        default: return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const follow = (id) => ({ type: FOLLOW, id });\r\nexport const unfollow = (id) => ({ type: UNFOLLOW, id });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setTotalUsersCount = (count) => ({ type: SET_TOTAL_COUNT, count });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLOWING_PROGRESS, isFetching, userId })\r\nexport const setMessageMode = (isMessage, id) => ({ type: SET_MESSAGE_MODE, isMessage, id})\r\nexport const setMoreUsers = (users) => ({type: ADD_MORE_USER, users})\r\nexport const setFriends = () => ({type: SET_FRIENDS})\r\n\r\nexport const getUsersThunk = (currentPage, pageSize) => async (dispatch) => {\r\n\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    const data = await (usersAPI.getUsers(currentPage, pageSize));\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n}\r\n\r\nexport const getMoreUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(setCurrentPage(currentPage));\r\n    dispatch(toggleIsFetching(true));\r\n    const data = await (usersAPI.getUsers(currentPage, pageSize));\r\n    dispatch(setMoreUsers(data.items));\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n    \r\n}\r\nexport const changeCurrentPageThunk = (pageNumber, pageSize) => async (dispatch) => {\r\n    dispatch(setCurrentPage(pageNumber));\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    const data = await (usersAPI.getUsers(pageNumber, pageSize));\r\n    dispatch(toggleIsFetching(false));;\r\n    dispatch(setUsers(data.items));\r\n}\r\n\r\nconst followUnfollowFlow = async(dispatch, apiMethod, actionCreator, id) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(toggleFollowingProgress(true, id));\r\n    const data = await (apiMethod(id));\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(id));\r\n        dispatch(toggleFollowingProgress(false, id));\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n\r\n}\r\nexport const unFollowThunk = (id) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, usersAPI.deleteFollow, unfollow, id );\r\n}\r\nexport const followThunk = (id) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, usersAPI.postFollow, follow, id );\r\n}\r\n\r\nexport default friendsReducer;"]},"metadata":{},"sourceType":"module"}