{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { profileAPI } from '../API/api';\nimport { stopSubmit } from 'redux-form';\nimport { usersAPI } from '../API/api';\nimport { async } from 'q';\nconst SEND_POST = 'profile-reducer/SEND_POST';\nconst SET_USER_PROFILE = 'profile-reducer/SET_USER_PROFILE';\nconst SET_USER_STATUS = 'profile-reducer/SET_USER_STATUS';\nconst SET_PHOTO_PROFILE = 'profile-reducer/SET_PHOTO_PROFILE';\nconst SET_EDIT_PROFILE = 'profile-reducer/SET_EDIT_PROFILE';\nconst RESET_USER_POFILE = 'profile-reducer/RESET_USER_POFILE';\nconst FOLLOW_UNFOLLOW_SUCCESS = 'profile-reducer/FOLLOW_UNFOLLOW_SUCCESS';\nconst TOGGLE_IS_FETCHING = 'profile-reducer/TOGGLE_IS_FETCHING';\nconst SEND_MESSAGE_MODE = 'profile-reducer/SEND_MESSAGE_MODE';\nconst initialState = {\n  posts: [],\n  currentTextPost: '',\n  profile: null,\n  status: '',\n  isEditMode: false,\n  isFollowed: false,\n  isFetching: false,\n  sendMessage: false\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEND_POST:\n      return _objectSpread({}, state, {\n        posts: [...state.posts, {\n          text: action.post.postBody,\n          id: 1,\n          likesCount: 0\n        }]\n      });\n\n    case SET_USER_PROFILE:\n      return _objectSpread({}, state, {\n        profile: action.profile\n      });\n\n    case SET_USER_STATUS:\n      return _objectSpread({}, state, {\n        status: action.status\n      });\n\n    case SET_PHOTO_PROFILE:\n      return _objectSpread({}, state, {\n        profile: _objectSpread({}, state.profile, {\n          photos: action.photos\n        })\n      });\n\n    case SET_EDIT_PROFILE:\n      return _objectSpread({}, state, {\n        isEditMode: action.mode\n      });\n\n    case RESET_USER_POFILE:\n      return initialState;\n\n    case FOLLOW_UNFOLLOW_SUCCESS:\n      return _objectSpread({}, state, {\n        isFollowed: action.isFollow\n      });\n\n    case TOGGLE_IS_FETCHING:\n      return _objectSpread({}, state, {\n        isFetching: action.isFetching\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const resetProfile = () => ({\n  type: RESET_USER_POFILE\n});\nexport const sendPost = post => ({\n  type: SEND_POST,\n  post\n});\nexport const setEditProfile = mode => ({\n  type: SET_EDIT_PROFILE,\n  mode\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setUserStatus = status => ({\n  type: SET_USER_STATUS,\n  status\n});\nexport const setFollowUnfollow = isFollow => ({\n  type: FOLLOW_UNFOLLOW_SUCCESS,\n  isFollow\n});\nexport const setMessageMode = isMode => ({\n  type: SEND_MESSAGE_MODE,\n  isMode\n});\nexport const getProfileThunk = userId => async dispatch => {\n  const data = await profileAPI.getProfile(userId);\n  dispatch(setUserProfile(data));\n};\n\nconst savePhotoSucсess = photos => ({\n  type: SET_PHOTO_PROFILE,\n  photos\n});\n\nexport const getStatusThunk = userId => async dispatch => {\n  const data = await profileAPI.getUserStatus(userId);\n  dispatch(setUserStatus(data));\n};\nexport const updateStatusThunk = status => async dispatch => {\n  const data = await profileAPI.updateUserStatus(status);\n\n  if (data.resultCode === 0) {\n    dispatch(setUserStatus(status));\n  }\n};\nexport const savePhotoThunk = photo => async dispatch => {\n  const data = await profileAPI.updatePhoto(photo);\n\n  if (data.resultCode === 0) {\n    dispatch(savePhotoSucсess(data.data.photos));\n  }\n};\nexport const saveProfileData = profile => async (dispatch, getState) => {\n  const userId = getState().auth.id;\n  const response = await profileAPI.saveProfileData(profile);\n\n  if (response.resultCode === 0) {\n    dispatch(getProfileThunk(userId));\n    dispatch(setEditProfile(false));\n  } else {\n    let number = response.messages[0].indexOf('>');\n    let test = response.messages[0].slice(number + 1, -1).toLowerCase();\n    dispatch(stopSubmit('edit-profile', {\n      'contacts': {\n        [test]: test + ' incorrect'\n      }\n    }));\n  }\n};\nexport const getFollowedThunk = id => async dispatch => {\n  const data = await usersAPI.getFollow(id);\n  dispatch(setFollowUnfollow(data));\n};\nexport const followUnfollow = (isFollow, id) => async dispatch => {\n  dispatch(toggleIsFetching(true));\n  const data = isFollow ? await usersAPI.postFollow(id) : await usersAPI.deleteFollow(id);\n\n  if (data.resultCode === 0) {\n    dispatch(setFollowUnfollow(isFollow));\n    dispatch(toggleIsFetching(false));\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\redux\\profile-reducer.js"],"names":["profileAPI","stopSubmit","usersAPI","async","SEND_POST","SET_USER_PROFILE","SET_USER_STATUS","SET_PHOTO_PROFILE","SET_EDIT_PROFILE","RESET_USER_POFILE","FOLLOW_UNFOLLOW_SUCCESS","TOGGLE_IS_FETCHING","SEND_MESSAGE_MODE","initialState","posts","currentTextPost","profile","status","isEditMode","isFollowed","isFetching","sendMessage","profileReducer","state","action","type","text","post","postBody","id","likesCount","photos","mode","isFollow","toggleIsFetching","resetProfile","sendPost","setEditProfile","setUserProfile","setUserStatus","setFollowUnfollow","setMessageMode","isMode","getProfileThunk","userId","dispatch","data","getProfile","savePhotoSucсess","getStatusThunk","getUserStatus","updateStatusThunk","updateUserStatus","resultCode","savePhotoThunk","photo","updatePhoto","saveProfileData","getState","auth","response","number","messages","indexOf","test","slice","toLowerCase","getFollowedThunk","getFollow","followUnfollow","postFollow","deleteFollow"],"mappings":"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","sourcesContent":["import { profileAPI } from '../API/api'\r\nimport { stopSubmit } from 'redux-form';\r\nimport { usersAPI } from '../API/api';\r\nimport { async } from 'q';\r\n\r\n\r\nconst SEND_POST = 'profile-reducer/SEND_POST';\r\nconst SET_USER_PROFILE = 'profile-reducer/SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'profile-reducer/SET_USER_STATUS';\r\nconst SET_PHOTO_PROFILE = 'profile-reducer/SET_PHOTO_PROFILE';\r\nconst SET_EDIT_PROFILE = 'profile-reducer/SET_EDIT_PROFILE';\r\nconst RESET_USER_POFILE = 'profile-reducer/RESET_USER_POFILE'\r\nconst FOLLOW_UNFOLLOW_SUCCESS = 'profile-reducer/FOLLOW_UNFOLLOW_SUCCESS'\r\nconst TOGGLE_IS_FETCHING = 'profile-reducer/TOGGLE_IS_FETCHING';\r\nconst SEND_MESSAGE_MODE= 'profile-reducer/SEND_MESSAGE_MODE'\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    currentTextPost: '',\r\n    profile: null,\r\n    status: '',\r\n    isEditMode: false,\r\n    isFollowed: false,\r\n    isFetching: false,\r\n    sendMessage: false\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        \r\n        case SEND_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, { text: action.post.postBody, id: 1, likesCount: 0 }],\r\n            }\r\n\r\n\r\n\r\n        case SET_USER_PROFILE:\r\n            return { ...state, profile: action.profile }\r\n        case SET_USER_STATUS:\r\n            return { ...state, status: action.status }\r\n        case SET_PHOTO_PROFILE:\r\n            return { ...state, profile: {...state.profile, photos: action.photos}}\r\n            case SET_EDIT_PROFILE:     \r\n            return { ...state, isEditMode: action.mode}\r\n        case RESET_USER_POFILE:\r\n            return initialState\r\n        case FOLLOW_UNFOLLOW_SUCCESS:\r\n            return {...state, isFollowed: action.isFollow}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}        \r\n        default: return state;\r\n\r\n    }\r\n\r\n}\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const resetProfile = () => ({type: RESET_USER_POFILE})\r\nexport const sendPost = (post) => ({ type: SEND_POST, post });\r\nexport const setEditProfile = (mode) => ({ type: SET_EDIT_PROFILE, mode });\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\nexport const setUserStatus = (status) => ({ type: SET_USER_STATUS, status });\r\nexport const setFollowUnfollow = (isFollow) => ({ type: FOLLOW_UNFOLLOW_SUCCESS, isFollow});\r\nexport const setMessageMode = (isMode) =>({type: SEND_MESSAGE_MODE, isMode})\r\n\r\nexport const getProfileThunk = (userId) => async (dispatch) => {\r\n    const data = await (profileAPI.getProfile(userId));\r\n    dispatch(setUserProfile(data));\r\n\r\n}\r\nconst savePhotoSucсess = (photos) => ({type: SET_PHOTO_PROFILE, photos});\r\n\r\nexport const getStatusThunk = (userId) => async (dispatch) => {\r\n    const data = await (profileAPI.getUserStatus(userId));\r\n\r\n    dispatch(setUserStatus(data));\r\n\r\n}\r\nexport const updateStatusThunk = (status) => async (dispatch) => {\r\n    const data = await(profileAPI.updateUserStatus(status));\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n\r\n}\r\nexport const savePhotoThunk = (photo) => async (dispatch) => {\r\n    const data = await(profileAPI.updatePhoto(photo));\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(savePhotoSucсess(data.data.photos));\r\n    }\r\n\r\n}\r\nexport const saveProfileData = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    const response = await(profileAPI.saveProfileData(profile));\r\n    \r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(getProfileThunk(userId));\r\n        dispatch(setEditProfile(false));\r\n    }else{\r\n        let number = response.messages[0].indexOf('>');\r\n        let test = response.messages[0].slice(number+1, -1).toLowerCase();\r\n        dispatch(stopSubmit('edit-profile', { 'contacts': {[test] : test + ' incorrect'}  }));\r\n    }\r\n}\r\nexport const getFollowedThunk = (id) => async(dispatch) =>{\r\n    const data = await(usersAPI.getFollow(id));\r\n     dispatch(setFollowUnfollow(data))\r\n    \r\n}\r\nexport const followUnfollow = (isFollow, id) => async (dispatch) =>{\r\n    dispatch(toggleIsFetching(true));\r\n    const data = \r\n    isFollow\r\n    ? await usersAPI.postFollow(id)\r\n    : await usersAPI.deleteFollow(id)\r\n    if (data.resultCode === 0){\r\n        dispatch(setFollowUnfollow(isFollow))\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n    \r\n    \r\n}\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}