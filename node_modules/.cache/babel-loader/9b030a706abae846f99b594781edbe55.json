{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Profile\\\\Posts\\\\Posts.jsx\";\nimport React, { useRef } from 'react';\nimport styles from './posts.module.css';\nimport { reduxForm, Field } from 'redux-form';\nimport { required, maxLengthCreator } from '../../../utils/validators/validator';\nimport { Textarea } from '../../common/FormControls/FormControls';\nimport avatar from '../../../assets/img/ava.jpg';\nimport Preloader from '../../common/Preloader/Preloader';\nconst maxLength500 = maxLengthCreator(500);\nconst newOption = useRef(null);\nconst popularOption = useRef(null);\n\nconst sortPost = e => {\n  e.currentTarget === newOption ? props.sortByTime() : sortByLikes();\n};\n\nconst FormPost = props => {\n  return React.createElement(\"form\", {\n    className: styles.formPost,\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Field, {\n    placeholder: \"Share your great thoughts here\",\n    component: Textarea,\n    name: \"postBody\",\n    validate: [required, maxLength500],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: styles.button,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Post\"));\n};\n\nconst FormPostRedux = reduxForm({\n  form: 'formPost'\n})(FormPost);\n\nconst Posts = props => {\n  return props.profile ? React.createElement(\"div\", {\n    className: styles.postsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(FormPostRedux, {\n    onSubmit: props.sendPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), props.posts.length ? React.createElement(React.Fragment, null, \"Sort by \", React.createElement(\"select\", {\n    onChange: sortPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    ref: newOption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"New\"), React.createElement(\"option\", {\n    ref: popularOption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Popular\"))) : null, props.posts.map(p => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.posts,\n    key: p.id,\n    className: styles.itemPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.headerPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: styles.avatar,\n    src: props.profile.photos.small || avatar,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.nameBlock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, props.profile.fullName), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, p.timeFormat))), React.createElement(\"div\", {\n    className: styles.postBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, p.text), React.createElement(\"div\", {\n    className: styles.menu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: styles.hidenMenu,\n    onClick: () => {\n      props.deletePost(p.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Delete Post\")), React.createElement(\"div\", {\n    className: styles.likesContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: () => {\n      p.liked ? props.likesToggle(false, p.id) : props.likesToggle(true, p.id);\n    },\n    className: styles.likes + ' ' + (p.liked && styles.liked),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: styles.likesCount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, p.likesCount > 0 && p.likesCount), \"  \"))))) : React.createElement(Preloader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  });\n};\n\nexport default Posts;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Profile\\Posts\\Posts.jsx"],"names":["React","useRef","styles","reduxForm","Field","required","maxLengthCreator","Textarea","avatar","Preloader","maxLength500","newOption","popularOption","sortPost","e","currentTarget","props","sortByTime","sortByLikes","FormPost","formPost","handleSubmit","button","FormPostRedux","form","Posts","profile","postsContainer","sendPost","posts","length","map","p","id","itemPost","headerPost","photos","small","nameBlock","name","fullName","timeFormat","postBody","text","menu","hidenMenu","deletePost","likesContainer","liked","likesToggle","likes","likesCount"],"mappings":"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","sourcesContent":["import React, {useRef} from 'react';\r\nimport styles from './posts.module.css'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validator';\r\nimport { Textarea } from '../../common/FormControls/FormControls';\r\nimport avatar from '../../../assets/img/ava.jpg';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\n\r\nconst maxLength500 = maxLengthCreator(500);\r\nconst newOption = useRef(null);\r\nconst popularOption = useRef(null);\r\nconst sortPost = (e) =>{\r\n    e.currentTarget === newOption  ? props.sortByTime() : sortByLikes()\r\n}\r\n\r\nconst FormPost = (props) => {\r\n    return <form className={styles.formPost} onSubmit={props.handleSubmit}>\r\n        <Field placeholder=\"Share your great thoughts here\" component={Textarea} name='postBody' validate={[required, maxLength500]} />\r\n\r\n        <button className={styles.button} type='submit' >Post</button>\r\n    </form>\r\n}\r\nconst FormPostRedux = reduxForm({ form: 'formPost' })(FormPost);\r\n\r\nconst Posts = (props) => {\r\n    return props.profile \r\n    ?  <div className={styles.postsContainer}>\r\n        <FormPostRedux onSubmit={props.sendPost} />\r\n        {props.posts.length ? \r\n        <>Sort by <select  onChange={sortPost}>\r\n            <option  ref={newOption}>New</option>\r\n            <option   ref={popularOption}>Popular</option>\r\n            </select></>  : null}\r\n        {props.posts.map((p) => <div>\r\n            <div className={styles.posts} key={p.id} className={styles.itemPost}>\r\n                    <div className={styles.headerPost}>\r\n                        <img className={styles.avatar} src={props.profile.photos.small || avatar} alt=\"\"/>\r\n                        \r\n                        <div className={styles.nameBlock}>\r\n                            <div className={styles.name}>{props.profile.fullName}</div>\r\n                            <div >{p.timeFormat}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.postBody}>    \r\n                        {p.text}\r\n                    </div>\r\n                    <div className={styles.menu}><span className={styles.hidenMenu} onClick={()=>{props.deletePost(p.id)}} >Delete Post</span></div>\r\n                    <div className={styles.likesContainer}>\r\n                        <div onClick={() => { p.liked ?  props.likesToggle(false, p.id) : props.likesToggle(true, p.id) }} className={styles.likes + ' ' + (p.liked && styles.liked)}></div>\r\n                         <span className={styles.likesCount}>{p.likesCount > 0 && p.likesCount}</span>  </div>             \r\n            </div>\r\n            \r\n        </div>)}\r\n    </div>\r\n    : <Preloader/>\r\n}\r\n\r\nexport default Posts;"]},"metadata":{},"sourceType":"module"}