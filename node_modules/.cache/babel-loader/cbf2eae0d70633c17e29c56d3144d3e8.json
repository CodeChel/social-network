{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Messages-container\\\\Messages\\\\DialogSession.jsx\";\nimport React, { useEffect, useRef } from 'react';\nimport MessageItem from './MessageItem/MessageItem';\nimport styles from './Messages.module.css';\nimport ScrollbarHOC from '../../common/HOCScrollBar/HOCScrollbarCusctom';\nimport { NavLink } from 'react-router-dom';\nimport AddMessageFormWithConnect from './AddMessageFormWithConnect';\n\nconst DialogSession = props => {\n  let messageItems = props.messages.map((item, index) => React.createElement(MessageItem, {\n    time: item.timeFormat,\n    key: index,\n    right: item.right,\n    message: item.message,\n    id: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n  const scrollBar = useRef();\n  useEffect(() => {\n    !props.isSearchMode && document.querySelector(\"textarea[name=message\".concat(props.userId, \"]\")).focus();\n  });\n  useEffect(() => {\n    scrollBar.current.scrollToBottom();\n  }, [messageItems]);\n  const currentDialog = props.dialogItemsData[dialogItemsData.findIndex(i => {\n    return i.userId === props.currentDialogId;\n  })];\n  return currentDialog === -1 ? React.createElement(\"div\", {\n    className: styles.emptyMessages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.iconMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.selectDialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Please select a dialog\")) : React.createElement(\"div\", {\n    className: styles.dialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.dialogHead,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.avatarContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/profile/\".concat(props.userId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: styles.avatar,\n    src: props.avatar,\n    alt: \"avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))), React.createElement(\"span\", {\n    className: styles.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/profile/\".concat(props.userId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, props.name)), props.isMobile && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Back to dialogs\")), React.createElement(ScrollbarHOC, {\n    children: React.createElement(\"div\", {\n      className: styles.messagesFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, messageItems),\n    ref: scrollBar,\n    removeTrackYWhenNotUsed: true,\n    style: {\n      width: \"100%\",\n      height: \"75%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.formContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(AddMessageFormWithConnect, {\n    userId: props.userId,\n    name: props.name,\n    onSubmit: data => {\n      props.sendMessage(data[\"message\".concat(props.userId)], props.userId);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n};\n\nexport default DialogSession;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Messages-container\\Messages\\DialogSession.jsx"],"names":["React","useEffect","useRef","MessageItem","styles","ScrollbarHOC","NavLink","AddMessageFormWithConnect","DialogSession","props","messageItems","messages","map","item","index","timeFormat","right","message","id","scrollBar","isSearchMode","document","querySelector","userId","focus","current","scrollToBottom","currentDialog","dialogItemsData","findIndex","i","currentDialogId","emptyMessages","iconMessage","selectDialog","dialog","dialogHead","avatarContainer","avatar","name","isMobile","messagesFill","width","height","formContainer","data","sendMessage"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef} from 'react'\r\n\r\nimport MessageItem from './MessageItem/MessageItem'\r\nimport styles from './Messages.module.css'\r\n\r\nimport ScrollbarHOC from '../../common/HOCScrollBar/HOCScrollbarCusctom';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nimport AddMessageFormWithConnect from './AddMessageFormWithConnect'\r\n\r\n\r\nconst DialogSession = (props) => {\r\n    let messageItems = props.messages.map((item, index) => <MessageItem time={item.timeFormat} key={index} right={item.right} message={item.message} id={item.id} />)\r\n\r\n    const scrollBar = useRef()\r\n\r\n    useEffect(() => {\r\n        !props.isSearchMode && document.querySelector(`textarea[name=message${props.userId}]`).focus()\r\n    })\r\n\r\n    useEffect(() => {\r\n        scrollBar.current.scrollToBottom();\r\n    }, [messageItems])\r\n    const currentDialog = props.dialogItemsData[dialogItemsData.findIndex((i) => { return i.userId === props.currentDialogId })];\r\n    return currentDialog === -1 \r\n    ? <div className={styles.emptyMessages}>\r\n                <div className={styles.iconMessage}></div>\r\n                <div className={styles.selectDialog}>\r\n                    Please select a dialog\r\n                </div>\r\n    </div>\r\n    :<div className={styles.dialog}>\r\n        <div className={styles.dialogHead}>\r\n            <div className={styles.avatarContainer}>\r\n                <NavLink to={`/profile/${props.userId}`}>\r\n                    <img className={styles.avatar} src={props.avatar} alt=\"avatar\" />\r\n                </NavLink>\r\n            </div>\r\n            <span className={styles.name}>\r\n                <NavLink to={`/profile/${props.userId}`}>\r\n                    {props.name}\r\n                </NavLink>\r\n            </span>\r\n            {props.isMobile && <span>Back to dialogs</span>}\r\n        </div>\r\n        <ScrollbarHOC children={<div className={styles.messagesFill}>{messageItems}</div>}  ref={scrollBar} removeTrackYWhenNotUsed={true} style={{ width: \"100%\", height: \"75%\" }} />\r\n\r\n        <div className={styles.formContainer}>\r\n            <AddMessageFormWithConnect userId={props.userId} name={props.name} onSubmit={(data) => { props.sendMessage(data[`message${props.userId}`], props.userId) }} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default DialogSession;"]},"metadata":{},"sourceType":"module"}