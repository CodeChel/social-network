{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Login\\\\Login.jsx\";\nimport React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { logInThunk } from '../../redux/auth-reducer';\nimport { connect } from 'react-redux';\nimport { Input, createField } from '../common/FormControls/FormControls';\nimport { required } from '../../utils/validators/validator';\nimport { Redirect } from 'react-router';\nimport styles from '../common/FormControls/FormControls.module.css';\nimport loginPage from './LoginPage.module.css';\n\nconst LoginForm = ({\n  captchaURL,\n  error,\n  handleSubmit\n}) => {\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, createField('Login', 'login', [required], Input), createField('Password', 'password', [required], Input, {\n    type: 'password'\n  }), React.createElement(\"div\", {\n    className: loginPage.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: loginPage.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: loginPage.checkboxText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"remember me\"), React.createElement(Field, {\n    component: \"input\",\n    type: \"checkbox\",\n    name: \"rememberMe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: loginPage.checkmark,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: styles.buttonLogin,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Login\")), error && React.createElement(\"div\", {\n    className: styles.errorLogIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, error), captchaURL && React.createElement(\"img\", {\n    src: captchaURL,\n    alt: \"capthca\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), captchaURL && createField('enter the cpathca-code', 'captcha', [required], Input));\n};\n\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst Login = ({\n  captchaURL,\n  logInThunk,\n  isAuth,\n  authId\n}) => {\n  const onSubmit = ({\n    login,\n    password,\n    rememberMe = false,\n    captcha = null\n  }) => {\n    logInThunk({\n      login,\n      password,\n      rememberMe,\n      captcha\n    });\n  };\n\n  if (isAuth) {\n    return React.createElement(Redirect, {\n      to: '/profile/' + authId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: loginPage.loginPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: loginPage.loginFormContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Login to SN \"), React.createElement(LoginReduxForm, {\n    captchaURL: captchaURL,\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })));\n};\n\nconst mapDispatchToProps = state => ({\n  isAuth: state.auth.isAuth,\n  authId: state.auth.id,\n  captchaURL: state.auth.captchaURL\n});\n\nexport default connect(mapDispatchToProps, {\n  logInThunk\n})(Login);","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Login\\Login.jsx"],"names":["React","reduxForm","Field","logInThunk","connect","Input","createField","required","Redirect","styles","loginPage","LoginForm","captchaURL","error","handleSubmit","type","wrapper","container","checkboxText","checkmark","buttonLogin","errorLogIn","LoginReduxForm","form","Login","isAuth","authId","onSubmit","login","password","rememberMe","captcha","loginFormContainer","mapDispatchToProps","state","auth","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { logInThunk } from '../../redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { Input, createField } from '../common/FormControls/FormControls';\r\nimport { required } from '../../utils/validators/validator';\r\nimport { Redirect } from 'react-router';\r\nimport styles from '../common/FormControls/FormControls.module.css'\r\nimport loginPage from './LoginPage.module.css'\r\n\r\nconst LoginForm = ({ captchaURL, error, handleSubmit }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Login', 'login', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, { type: 'password' })}\r\n            <div className={loginPage.wrapper}>\r\n                <label className={loginPage.container}>\r\n                    <div className={loginPage.checkboxText}>remember me</div>\r\n                    <Field component='input' type='checkbox' name='rememberMe' />\r\n                    <span className={loginPage.checkmark}></span>\r\n                </label>\r\n                <button className={styles.buttonLogin} type='submit'>Login</button></div>\r\n            {error && <div className={styles.errorLogIn}>{error}</div>}\r\n            {captchaURL && <img src={captchaURL} alt='capthca' />}\r\n            {captchaURL && createField('enter the cpathca-code', 'captcha', [required], Input)}\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = ({ captchaURL, logInThunk, isAuth, authId }) => {\r\n    const onSubmit = ({ login, password, rememberMe = false, captcha = null }) => {\r\n        logInThunk({ login, password, rememberMe, captcha });\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile/' + authId} />\r\n    }\r\n\r\n    return <div className={loginPage.loginPage}>\r\n        <div className={loginPage.loginFormContainer}>\r\n            <h1>Login to SN </h1>\r\n            <LoginReduxForm captchaURL={captchaURL} onSubmit={onSubmit} />\r\n        </div>\r\n    </div >\r\n}\r\nconst mapDispatchToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    authId: state.auth.id,\r\n    captchaURL: state.auth.captchaURL\r\n})\r\n\r\nexport default connect(mapDispatchToProps, { logInThunk })(Login);"]},"metadata":{},"sourceType":"module"}