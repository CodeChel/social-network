{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Profile\\\\ProfileInfo\\\\ProfileStatusWithHooks.jsx\";\nimport React, { useState, useEffect, createRef } from 'react';\nimport styles from './profileStatus.module.css';\n\nconst ProfileStatusWithHooks = (_ref) => {\n  let updateStatus = _ref.updateStatus,\n      isMyPage = _ref.isMyPage,\n      props = _objectWithoutProperties(_ref, [\"updateStatus\", \"isMyPage\"]);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        editMode = _useState2[0],\n        setEditMode = _useState2[1];\n\n  const _useState3 = useState(props.status),\n        _useState4 = _slicedToArray(_useState3, 2),\n        status = _useState4[0],\n        setStatus = _useState4[1];\n\n  let node = createRef(null);\n\n  const handeClick = e => {\n    debugger;\n\n    if (e.target !== node.current) {\n      setEditMode(false);\n      document.removeEventListener('click', handeClick);\n    }\n  };\n\n  useEffect(() => {\n    if (node) {\n      document.addEventListener('click', handeClick);\n    }\n\n    return document.removeEventListener('click', handeClick);\n  }, [node]);\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const outEditMode = e => {\n    updateStatus(status);\n    setEditMode(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, isMyPage ? React.createElement(\"div\", {\n    className: styles.statusContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onClick: () => {\n      setEditMode(true);\n    },\n    className: styles.status,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, props.status || 'set a status message')), editMode && React.createElement(\"div\", {\n    className: styles.changeStatusContainer,\n    ref: node,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: styles.inputStatus,\n    autoFocus: true,\n    onChange: e => {\n      setStatus(e.currentTarget.value);\n    },\n    value: status,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: styles.saveButton,\n    onClick: () => {\n      outEditMode();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Save\"))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, props.status ? props.status.length > 100 ? props.status.slice(0, 100) : props.status : null));\n};\n\nexport default ProfileStatusWithHooks;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx"],"names":["React","useState","useEffect","createRef","styles","ProfileStatusWithHooks","updateStatus","isMyPage","props","editMode","setEditMode","status","setStatus","node","handeClick","e","target","current","document","removeEventListener","addEventListener","outEditMode","statusContainer","changeStatusContainer","inputStatus","currentTarget","value","saveButton","length","slice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef } from 'react';\r\n\r\nimport styles from './profileStatus.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = ({updateStatus, isMyPage, ...props }) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    let node = ( createRef(null));\r\n\r\n    const handeClick = (e) =>{\r\n        debugger;\r\n        if(e.target !== node.current){\r\n            setEditMode(false);\r\n            document.removeEventListener('click', handeClick)\r\n        }    \r\n    }\r\n    useEffect(() => {\r\n        \r\n        if(node){\r\n            document.addEventListener('click', handeClick)\r\n        }\r\n        return document.removeEventListener('click', handeClick);\r\n    }, [node])\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n   \r\n    const outEditMode = (e) => {\r\n        updateStatus(status);\r\n        setEditMode(false);\r\n    \r\n    }\r\n\r\n\r\n\r\n    return <div>\r\n        {isMyPage ?\r\n            <div className={styles.statusContainer} >\r\n                <div>\r\n                    <span onClick={()=>{setEditMode(true)}} className={styles.status}>{props.status || 'set a status message'}</span>\r\n                </div>\r\n                {editMode && <div className={styles.changeStatusContainer} ref={node}>\r\n                    <div ><input  className={styles.inputStatus} autoFocus={true} onChange={(e) => { setStatus(e.currentTarget.value) }} value={status} /></div>\r\n                    <button className={styles.saveButton} onClick={()=>{outEditMode()}}>Save</button>\r\n                </div>}\r\n            </div>\r\n            : <div>\r\n                {\r\n                    props.status\r\n                        ? props.status.length > 100 ? props.status.slice(0, 100) : props.status\r\n                        : null\r\n                }\r\n            </div>\r\n        }\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;"]},"metadata":{},"sourceType":"module"}