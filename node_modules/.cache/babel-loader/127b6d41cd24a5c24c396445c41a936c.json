{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\WOW\\\\Documents\\\\GitHub\\\\react\\\\react-test\\\\src\\\\components\\\\Profile\\\\ProfileInfo\\\\ProfileInfo.jsx\";\nimport React from 'react';\nimport Preloader from '../../common/Preloader/Preloader';\nimport styles from './profileInfo.module.css';\nimport avatar from '../../../assets/img/ava.jpg';\nimport PfofileDescription from './ProfileDescription';\nimport PopUp from '../../common/PopUp/popUp';\nimport PopUpMessage from '../../common/PopUp/PopUpMessage';\nimport PopUpAvatar from '../../common/PopUp/popUpAvatar';\nimport ProfileAvatar from './ProfileAvatar/ProfileAvatar';\n\nconst ProfileInfo = (_ref) => {\n  let profile = _ref.profile,\n      isMyPage = _ref.isMyPage,\n      isFollowed = _ref.isFollowed,\n      sendMessageMode = _ref.sendMessageMode,\n      avatarPopup = _ref.avatarPopup,\n      setPopupAvatar = _ref.setPopupAvatar,\n      followUnfollow = _ref.followUnfollow,\n      userId = _ref.userId,\n      props = _objectWithoutProperties(_ref, [\"profile\", \"isMyPage\", \"isFollowed\", \"sendMessageMode\", \"avatarPopup\", \"setPopupAvatar\", \"followUnfollow\", \"userId\"]);\n\n  const updatePhoto = e => {\n    if (e.target.files[0]) {\n      props.savePhoto(e.target.files[0]);\n    }\n  };\n\n  return profile ? React.createElement(\"div\", {\n    className: styles.profileInfoContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.profileInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(ProfileAvatar, {\n    isMyPage: isMyPage,\n    photoLarge: profile.photos.large,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: props.isMyPage ? styles.avatarContainer + ' ' + styles.avatarUpdate : styles.avatarContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    onClick: () => {\n      profile.photos.large && setPopupAvatar(true);\n    },\n    className: styles.avatar + ' ' + (profile.photos.large && styles.avatarCustom),\n    src: profile.photos.large ? profile.photos.large : avatar,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), isMyPage && React.createElement(\"div\", {\n    className: styles.changePhoto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"upload-photo\",\n    className: styles.changePhotoLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Update photo\"), React.createElement(\"input\", {\n    className: styles.changePhotoInput,\n    id: \"upload-photo\",\n    type: \"file\",\n    onChange: updatePhoto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))), isMyPage && React.createElement(\"div\", {\n    role: \"button\",\n    className: styles.edit,\n    onClick: () => {\n      props.setEditProfile(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Edit Profile\"), !isMyPage && React.createElement(\"div\", {\n    role: \"button\",\n    className: styles.send,\n    onClick: () => {\n      props.setMessageMode(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Send Message\"), !isMyPage ? isFollowed ? React.createElement(\"div\", {\n    className: styles.send,\n    onClick: () => {\n      followUnfollow(false, userId);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" Unfollow \") : React.createElement(\"div\", {\n    className: styles.send,\n    onClick: () => {\n      followUnfollow(true, userId);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \" Follow \") : null, sendMessageMode && React.createElement(PopUp, {\n    user: profile,\n    Component: PopUpMessage,\n    closePopup: () => {\n      props.setMessageMode(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), avatarPopup && React.createElement(PopUp, {\n    avatar: profile.photos.large ? profile.photos.large : avatar,\n    Component: PopUpAvatar,\n    closePopup: () => {\n      setPopupAvatar(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(PfofileDescription, Object.assign({\n    setEditProfile: props.setEditProfile,\n    isEditMode: props.isEditMode,\n    isMyPage: isMyPage,\n    profile: profile\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })))) : React.createElement(Preloader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  });\n};\n\nexport default ProfileInfo;","map":{"version":3,"sources":["C:\\Users\\WOW\\Documents\\GitHub\\react\\react-test\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx"],"names":["React","Preloader","styles","avatar","PfofileDescription","PopUp","PopUpMessage","PopUpAvatar","ProfileAvatar","ProfileInfo","profile","isMyPage","isFollowed","sendMessageMode","avatarPopup","setPopupAvatar","followUnfollow","userId","props","updatePhoto","e","target","files","savePhoto","profileInfoContainer","profileInfo","photos","large","avatarContainer","avatarUpdate","avatarCustom","changePhoto","changePhotoLabel","changePhotoInput","edit","setEditProfile","send","setMessageMode","isEditMode"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport styles from './profileInfo.module.css'\r\nimport avatar from '../../../assets/img/ava.jpg'\r\nimport PfofileDescription from './ProfileDescription'\r\nimport PopUp from '../../common/PopUp/popUp'\r\nimport PopUpMessage from '../../common/PopUp/PopUpMessage'\r\nimport PopUpAvatar from '../../common/PopUp/popUpAvatar'\r\nimport ProfileAvatar from './ProfileAvatar/ProfileAvatar'\r\n\r\nconst ProfileInfo = ({ profile, isMyPage, isFollowed, sendMessageMode, avatarPopup, setPopupAvatar, followUnfollow, userId, ...props }) => {\r\n\r\n    const updatePhoto = e => {\r\n        if (e.target.files[0]) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return profile\r\n\r\n        ? <div className={styles.profileInfoContainer}>\r\n            <div className={styles.profileInfo}>\r\n                <div>\r\n                    <ProfileAvatar isMyPage={isMyPage} photoLarge={profile.photos.large}/> \r\n                    <div className={props.isMyPage ? styles.avatarContainer + ' ' + styles.avatarUpdate : styles.avatarContainer}>\r\n                        <img onClick={() => { profile.photos.large && setPopupAvatar(true) }} className={styles.avatar + ' ' + (profile.photos.large && styles.avatarCustom)} \r\n                            src={profile.photos.large ? profile.photos.large : avatar} alt=\"\" />\r\n                        {isMyPage\r\n                            && <div className={styles.changePhoto}>\r\n                                <label for=\"upload-photo\" className={styles.changePhotoLabel}>Update photo</label>\r\n                                <input className={styles.changePhotoInput} id=\"upload-photo\" type='file' onChange={updatePhoto} />\r\n                            </div>\r\n                        }\r\n                        \r\n                    </div>\r\n                    {isMyPage && <div role='button' className={styles.edit} onClick={() => { props.setEditProfile(true) }}>Edit Profile</div>}\r\n                    {!isMyPage && <div role='button' className={styles.send} onClick={() => { props.setMessageMode(true) }}>Send Message</div>}\r\n                    {!isMyPage\r\n                        ? isFollowed\r\n                            ? <div className={styles.send} onClick={() => { followUnfollow(false, userId) }}> Unfollow </div>\r\n                            : <div className={styles.send} onClick={() => { followUnfollow(true, userId) }}> Follow </div>\r\n                        : null\r\n                    }\r\n                    {sendMessageMode && <PopUp user={profile} Component={PopUpMessage} closePopup={() => { props.setMessageMode(false) }} />}\r\n                    {avatarPopup && <PopUp avatar={profile.photos.large ? profile.photos.large : avatar} Component={PopUpAvatar} closePopup={() => { setPopupAvatar(false) }} />}\r\n                </div>\r\n                <PfofileDescription setEditProfile={props.setEditProfile} isEditMode={props.isEditMode} isMyPage={isMyPage} profile={profile} {...props} />\r\n\r\n            </div>\r\n        </div>\r\n        : <Preloader />\r\n}\r\n\r\nexport default ProfileInfo;"]},"metadata":{},"sourceType":"module"}